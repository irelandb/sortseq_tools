   Ordered by: cumulative time

Function                                                               called...
                                                                           ncalls  tottime  cumtime
<string>:1(<module>)                                                   ->       1    0.440  280.936  learn_model.py:159(main)
learn_model.py:159(main)                                              ->       1    0.000    0.000  base.py:184(__get__)
                                                                                1    0.000    0.022  frame.py:200(__init__)
                                                                               11    0.000    0.071  frame.py:1774(__getitem__)
                                                                                2    0.000    0.005  frame.py:2114(__setitem__)
                                                                                4    0.000    0.004  frame.py:2630(reset_index)
                                                                                1    0.000    0.000  frame.py:4672(isin)
                                                                                1    0.000    0.000  fromnumeric.py:495(transpose)
                                                                                1    0.000    0.538  gauge_fix.py:101(fix_matrix)
                                                                                2    0.000    0.000  generic.py:1046(_indexer)
                                                                                1    0.000    0.000  generic.py:2135(__getattr__)
                                                                                1    0.000    0.008  generic.py:2152(__setattr__)
                                                                                1    0.000    0.000  generic.py:2309(values)
                                                                                1    0.000    0.003  generic.py:2394(astype)
                                                                                1    0.000    0.011  generic.py:2414(copy)
                                                                                1    0.000    0.020  generic.py:4243(stat_func)
                                                                                1    0.006    0.141  indexing.py:113(__setitem__)
                                                                                1    0.000    0.000  indexing.py:1185(__getitem__)
                                                                                1    0.003    9.044  learn_model.py:150(Compute_Least_Squares)
                                                                                1    0.000    0.000  learn_model.py:181(<dictcomp>)
                                                                                1    0.000    0.029  merge.py:700(concat)
                                                                                3    0.000    0.030  ops.py:574(wrapper)
                                                                                1    0.000    0.000  qc.py:115(get_cols_from_df)
                                                                                1    0.000    0.049  qc.py:685(validate_model)
                                                                                1    0.000    0.000  series.py:119(__init__)
                                                                                2    0.000    0.014  series.py:519(__getitem__)
                                                                                1    0.000    0.000  series.py:1003(__iter__)
                                                                                2    0.000    0.229  series.py:2020(apply)
                                                                                1    0.000    0.709  strings.py:1299(slice)
                                                                                1    0.045   31.732  utils.py:10(profile_counts)
                                                                                2    0.000    0.000  utils.py:87(choose_dict)
                                                                                2    0.000    0.000  utils.py:110(get_column_headers)
                                                                                1    0.007    1.050  utils.py:134(collapse_further)
                                                                                1   20.482  236.772  utils.py:323(genweightandmat)
                                                                                1    0.000    0.014  utils.py:428(emat_typical_parameterization)
                                                                                6    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'items' of 'dict' objects}
                                                                                2    0.000    0.000  {range}
utils.py:323(genweightandmat)                                          ->       1    0.022    6.969  compressed.py:24(__init__)
                                                                          3172491    6.927   16.844  frame.py:1774(__getitem__)
                                                                           793122    1.525    7.075  fromnumeric.py:1631(sum)
                                                                                1    0.859    0.869  lil.py:88(__init__)
                                                                           793122    7.389  136.252  lil.py:272(__setitem__)
                                                                          3172489    4.635   33.536  series.py:519(__getitem__)
                                                                                1    0.000    0.000  series.py:1003(__iter__)
                                                                                1    0.000    0.000  utils.py:110(get_column_headers)
                                                                           793122   10.236   13.804  utils.py:152(seq2matsparse)
                                                                           793122    0.571    0.571  {isinstance}
                                                                                4    0.000    0.000  {len}
                                                                                2    0.001    0.001  {numpy.core.multiarray.zeros}
                                                                           793122    0.368    0.368  {range}
lil.py:272(__setitem__)                                                -> 1586244    0.301    0.301  base.py:93(get_shape)
                                                                          1586244    0.499    1.149  base.py:865(isspmatrix)
                                                                           793122    0.410    1.029  numeric.py:394(asarray)
                                                                           793122    5.129   10.708  sputils.py:245(_unpack_index)
                                                                           793122    5.435   51.700  sputils.py:330(_index_to_arrays)
                                                                           793122   11.082   29.402  stride_tricks.py:37(broadcast_arrays)
                                                                          3172488    0.691    0.691  {isinstance}
                                                                           793122    0.074    0.074  {len}
                                                                           793122   31.959   31.959  {scipy.sparse._csparsetools.lil_fancy_set}
                                                                           793122    1.851    1.851  {scipy.sparse._csparsetools.prepare_index_for_memoryview}
stride_tricks.py:37(broadcast_arrays)                                  -> 3172488    1.587    3.584  numeric.py:394(asarray)
                                                                          3172488   19.002   30.926  stride_tricks.py:23(as_strided)
                                                                         14276196    1.108    1.108  {len}
                                                                          1586244    0.598    0.598  {max}
                                                                          3172488    0.389    0.389  {method 'append' of 'list' objects}
                                                                          1586244    0.205    0.205  {method 'pop' of 'set' objects}
                                                                          1586244    0.212    0.212  {method 'remove' of 'set' objects}
                                                                          4758732    1.270    1.270  {range}
                                                                          1586244    0.860    0.860  {zip}
sputils.py:330(_index_to_arrays)                                       ->  793122    0.196    0.196  base.py:93(get_shape)
                                                                           793122    2.071    6.027  shape_base.py:8(atleast_1d)
                                                                           793122    0.759    3.550  sputils.py:238(_slicetoarange)
                                                                           793122    2.156    3.171  sputils.py:311(_check_boolean)
                                                                           793122   12.237   33.070  stride_tricks.py:37(broadcast_arrays)
                                                                          1586244    0.251    0.251  {isinstance}
series.py:519(__getitem__)                                             ->     525    0.002    0.006  common.py:2121(is_bool_indexer)
                                                                              525    0.001    0.015  common.py:2416(is_iterator)
                                                                          3173017    3.961   26.296  index.py:1582(get_value)
                                                                              525    0.002    0.014  indexing.py:1648(check_bool_indexer)
                                                                          3172492    1.590    2.652  numeric.py:1910(isscalar)
                                                                              525    0.003    0.422  series.py:563(_get_with)
{scipy.sparse._csparsetools.lil_fancy_set}                             ->
utils.py:10(profile_counts)                                            ->      26    0.000    0.001  base.py:184(__get__)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                                2    0.000    0.000  frame.py:1774(__getitem__)
                                                                               25    0.000    0.001  fromnumeric.py:889(argmax)
                                                                              525    0.002    0.146  fromnumeric.py:1631(sum)
                                                                                1    0.000    0.001  merge.py:700(concat)
                                                                              525    0.013   24.958  ops.py:574(wrapper)
                                                                                1    0.000    0.000  series.py:119(__init__)
                                                                              526    0.006    0.495  series.py:519(__getitem__)
                                                                               26    0.000    6.085  strings.py:1299(slice)
                                                                                1    0.000    0.000  utils.py:87(choose_dict)
                                                                                1    0.000    0.000  utils.py:148(is_seq_valid)
                                                                               28    0.000    0.000  {len}
                                                                               25    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                               28    0.000    0.000  {range}
stride_tricks.py:23(as_strided)                                        -> 3172488    1.732   10.547  numeric.py:394(asarray)
                                                                          3172488    1.377    1.377  stride_tricks.py:19(__init__)
index.py:1582(get_value)                                               ->       3    0.000    0.000  index.py:958(_engine)
                                                                              525    0.002    0.002  numeric.py:1910(isscalar)
                                                                          3173017    4.005    4.005  {method 'get_value' of 'pandas.index.IndexEngine' objects}
                                                                          3173017    0.496    0.496  {pandas.lib.is_float}
                                                                          6346034    4.828   17.832  {pandas.lib.values_from_object}
ops.py:574(wrapper)                                                    ->     528    0.000    8.350  common.py:212(isnull)
                                                                              528    0.004    0.008  common.py:2569(is_categorical_dtype)
                                                                              528    0.002    4.240  generic.py:4294(logical_func)
                                                                              528    0.002    0.003  numeric.py:1910(isscalar)
                                                                              528    0.005   12.309  ops.py:543(na_op)
                                                                              528    0.008    0.056  series.py:119(__init__)
                                                                              528    0.001    0.004  series.py:319(get_values)
                                                                             2112    0.001    0.001  {isinstance}
                                                                              528    0.000    0.000  {issubclass}
                                                                              528    0.001    0.001  {pandas.index.convert_scalar}
                                                                             1056    0.002    0.002  {pandas.lib.values_from_object}
{numpy.core.multiarray.array}                                          ->    1056    0.002    0.002  generic.py:2135(__getattr__)
                                                                                9    0.000    0.000  index.py:248(__array__)
                                                                              528    0.000    0.003  series.py:391(__array__)
numeric.py:394(asarray)                                                -> 7139423   14.991   14.995  {numpy.core.multiarray.array}
{pandas.lib.values_from_object}                                        ->      32    0.000    0.000  index.py:268(get_values)
                                                                          3173544    1.575   13.004  series.py:319(get_values)
frame.py:1774(__getitem__)                                             -> 3172554    2.676    4.929  frame.py:1799(_getitem_column)
                                                                                6    0.000    0.071  frame.py:1816(_getitem_array)
                                                                          3172560    3.210    3.633  index.py:1045(__contains__)
                                                                                6    0.000    0.000  indexing.py:1612(convert_to_index_sliceable)
                                                                          3172566    1.358    1.358  {isinstance}
utils.py:152(seq2matsparse)                                            -> 21414294    1.294    1.294  {len}
                                                                           793122    2.274    2.274  {numpy.core.multiarray.zeros}
series.py:319(get_values)                                              -> 3174621    4.689   11.435  internals.py:3481(get_values)
common.py:212(isnull)                                                  ->    1647    0.006   12.707  common.py:233(_isnull_new)
common.py:233(_isnull_new)                                             ->    1612    3.970   12.695  common.py:303(_isnull_ndarraylike)
                                                                             3224    0.002    0.004  {isinstance}
                                                                               35    0.000    0.000  {pandas.lib.checknull}
                                                                             1647    0.002    0.002  {pandas.lib.isscalar}
common.py:303(_isnull_ndarraylike)                                     ->    1060    0.005    0.007  common.py:2440(is_datetimelike)
                                                                              552    0.003    0.003  common.py:2569(is_categorical_dtype)
                                                                              528    0.008    0.047  series.py:119(__init__)
                                                                             1612    0.001    0.004  {getattr}
                                                                             1612    0.004    0.009  {isinstance}
                                                                              552    0.001    0.001  {method 'ravel' of 'numpy.ndarray' objects}
                                                                              552    0.002    0.002  {method 'reshape' of 'numpy.ndarray' objects}
                                                                              552    0.002    0.002  {numpy.core.multiarray.empty}
                                                                              552    8.651    8.651  {pandas.lib.isnullobj}
ops.py:543(na_op)                                                      ->    1056    0.002    0.003  common.py:2569(is_categorical_dtype)
                                                                                3    0.000    0.000  {getattr}
                                                                             1050    0.000    0.000  {isinstance}
                                                                              525   12.301   12.301  {pandas.lib.scalar_compare}
{pandas.lib.scalar_compare}                                            ->
internals.py:3481(get_values)                                          -> 3174621    1.549    3.347  internals.py:112(to_dense)
                                                                          3174621    0.888    0.888  internals.py:3390(_block)
                                                                          3174621    2.511    2.511  {numpy.core.multiarray.array}
sputils.py:245(_unpack_index)                                          ->  793122    1.258    1.322  sputils.py:273(_check_ellipsis)
                                                                           793122    2.433    3.598  sputils.py:311(_check_boolean)
                                                                          1586244    0.591    0.591  {isinstance}
                                                                           793122    0.068    0.068  {len}
compressed.py:24(__init__)                                             ->       8    0.000    0.000  base.py:71(set_shape)
                                                                                3    0.000    0.000  base.py:93(get_shape)
                                                                                3    0.001   10.581  base.py:195(asformat)
                                                                               11    0.000    0.000  base.py:865(isspmatrix)
                                                                                3    0.000    0.000  compressed.py:115(_set_self)
                                                                               11    0.927    0.928  compressed.py:126(check_format)
                                                                               11    0.000    0.000  data.py:25(__init__)
                                                                                1    0.000    0.000  numeric.py:394(asarray)
                                                                                8    0.000    0.000  sputils.py:106(getdtype)
                                                                                8    0.000    0.000  sputils.py:132(get_index_dtype)
                                                                                8    0.000    0.000  sputils.py:205(isshape)
                                                                                8    0.000    0.000  {isinstance}
                                                                               16    0.000    0.000  {len}
                                                                               24    0.000    0.000  {numpy.core.multiarray.array}
base.py:195(asformat)                                                  ->       1    0.001    3.634  csr.py:155(tocsc)
                                                                                1    0.492    6.945  lil.py:378(tocsr)
                                                                                2    0.000    0.000  {getattr}
learn_model.py:150(Compute_Least_Squares)                             ->       1    0.047    0.047  ridge.py:463(__init__)
                                                                                1    0.005    8.994  ridge.py:469(fit)
ridge.py:469(fit)                                                      ->       1    0.006    8.989  ridge.py:357(fit)
ridge.py:357(fit)                                                      ->       1    0.003    0.129  base.py:79(center_data)
                                                                                1    0.031    0.076  base.py:155(_set_intercept)
                                                                                1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  ridge.py:179(_deprecate_dense_cholesky)
                                                                                1    0.011    8.738  ridge.py:190(ridge_regression)
                                                                                1    0.000    0.000  shape_base.py:8(atleast_1d)
                                                                                1    0.004    0.040  validation.py:57(safe_asarray)
ridge.py:190(ridge_regression)                                         ->       1    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    0.000  base.py:865(isspmatrix)
                                                                                1    0.002    8.727  ridge.py:88(_solve_cholesky)
                                                                                1    0.000    0.000  ridge.py:179(_deprecate_dense_cholesky)
                                                                                1    0.000    0.000  shape_base.py:8(atleast_1d)
                                                                                1    0.000    0.000  validation.py:57(safe_asarray)
                                                                                2    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
ridge.py:88(_solve_cholesky)                                           ->       1    0.000    0.000  base.py:93(get_shape)
                                                                                2    0.000    0.000  base.py:485(__getattr__)
                                                                                1    0.317    0.394  basic.py:21(solve)
                                                                                1    0.000    0.017  dia.py:76(__init__)
                                                                                3    0.000    8.313  extmath.py:168(safe_sparse_dot)
                                                                                1    0.000    0.001  numeric.py:141(ones)
                                                                                1    0.000    0.000  numeric.py:2328(array_equal)
                                                                                1    0.000    0.000  {len}
{pandas.lib.isnullobj}                                                 ->
extmath.py:168(safe_sparse_dot)                                        ->       3    0.008    8.311  base.py:282(__mul__)
                                                                                3    0.000    0.000  base.py:865(isspmatrix)
                                                                                1    0.000    0.002  compressed.py:938(toarray)
                                                                                2    0.000    0.000  {hasattr}
base.py:282(__mul__)                                                   ->       7    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    2.803  base.py:366(_mul_sparse_matrix)
                                                                                2    0.000    0.000  base.py:865(isspmatrix)
                                                                                1    0.000    0.024  compressed.py:447(_mul_vector)
                                                                                1    0.000    5.476  compressed.py:473(_mul_sparse_matrix)
                                                                                2    0.000    0.000  sputils.py:184(isscalarlike)
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
compressed.py:473(_mul_sparse_matrix)                                  ->       4    0.000    0.000  base.py:93(get_shape)
                                                                                4    0.000    3.635  compressed.py:24(__init__)
                                                                                1    0.000    0.000  csc.py:197(_swap)
                                                                                1    0.000    0.000  csr.py:211(_swap)
                                                                                4    0.000    0.000  data.py:28(_get_dtype)
                                                                               18    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  sputils.py:26(upcast)
                                                                                4    0.000    0.000  sputils.py:132(get_index_dtype)
                                                                                4    0.000    0.000  {getattr}
                                                                                6    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                1    0.811    0.811  {scipy.sparse._sparsetools.csc_matmat_pass1}
                                                                                1    1.031    1.031  {scipy.sparse._sparsetools.csc_matmat_pass2}
                                                                                1    0.030    0.030  {scipy.sparse._sparsetools.csr_matmat_pass1}
                                                                                1    2.669    2.669  {scipy.sparse._sparsetools.csr_matmat_pass2}
fromnumeric.py:1631(sum)                                               ->  793125    0.422    5.111  _methods.py:31(_sum)
                                                                              525    0.001    0.143  generic.py:4243(stat_func)
                                                                           793650    0.439    0.439  {isinstance}
{isinstance}                                                           ->       1    0.004    0.025  abc.py:128(__instancecheck__)
                                                                             6487    0.006    0.011  common.py:70(_check)
lil.py:378(tocsr)                                                      ->       2    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    0.927  compressed.py:24(__init__)
                                                                                1    0.001    0.034  fromnumeric.py:1925(cumsum)
                                                                                3    0.000    3.554  numeric.py:394(asarray)
                                                                                1    0.000    0.009  sputils.py:132(get_index_dtype)
                                                                           793122    0.033    0.033  {len}
                                                                                1    0.000    0.000  {max}
                                                                          1586244    1.889    1.889  {method 'extend' of 'list' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
                                                                                1    0.002    0.002  {numpy.core.multiarray.concatenate}
                                                                                1    0.005    0.005  {sum}
strings.py:1299(slice)                                                 ->      27    0.000    6.789  strings.py:768(str_slice)
                                                                               27    0.001    0.005  strings.py:1077(_wrap_result)
strings.py:768(str_slice)                                              ->      27    0.000    6.789  strings.py:119(_na_map)
strings.py:119(_na_map)                                                ->      27    0.000    6.789  strings.py:124(_map)
strings.py:124(_map)                                                   ->      27    0.000    0.435  common.py:212(isnull)
                                                                               27    0.000    0.000  series.py:308(values)
                                                                               54    0.000    0.000  {isinstance}
                                                                               27    0.000    0.000  {len}
                                                                               27    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
                                                                               27    4.120    6.353  {pandas.lib.map_infer_mask}
sputils.py:311(_check_boolean)                                         -> 3172488    0.899    1.683  base.py:865(isspmatrix)
                                                                          3172488    0.498    0.498  {isinstance}
{pandas.lib.map_infer_mask}                                            -> 21414294    2.233    2.233  strings.py:783(<lambda>)
shape_base.py:8(atleast_1d)                                            ->  793125    0.653    2.217  numeric.py:464(asanyarray)
                                                                          1586250    0.167    0.167  {len}
                                                                           793125    0.205    0.205  {method 'append' of 'list' objects}
                                                                           793123    1.368    1.368  {method 'reshape' of 'numpy.ndarray' objects}
_methods.py:31(_sum)                                                   ->  794180    4.752    4.752  {method 'reduce' of 'numpy.ufunc' objects}
frame.py:1799(_getitem_column)                                         -> 3172554    1.781    2.254  generic.py:1079(_get_item_cache)
                                                                                4    0.000    0.000  index.py:740(is_unique)
{method 'reduce' of 'numpy.ufunc' objects}                             ->
series.py:2068(_reduce)                                                ->    1053    0.003    0.003  generic.py:292(_get_axis_number)
                                                                              525    0.004    0.135  nanops.py:38(_f)
                                                                              528    0.002    4.230  nanops.py:233(nanany)
                                                                             1053    0.001    0.005  series.py:308(values)
                                                                             1053    0.000    0.000  {isinstance}
nanops.py:153(_get_values)                                             ->    1054    0.001    3.921  common.py:212(isnull)
                                                                              526    0.001    0.008  common.py:1169(_maybe_upcast_putmask)
                                                                             1054    0.001    0.002  common.py:2495(is_integer_dtype)
                                                                              528    0.001    0.001  common.py:2557(is_bool_dtype)
                                                                             1054    0.000    0.000  nanops.py:130(_get_fill_value)
                                                                             1054    0.001    0.004  nanops.py:206(_na_ok_dtype)
                                                                             1054    0.001    0.007  nanops.py:210(_view_if_needed)
                                                                             1054    0.065    0.065  {method 'copy' of 'numpy.ndarray' objects}
                                                                              528    0.252    0.252  {numpy.core.multiarray.putmask}
                                                                             1054    0.001    0.001  {pandas.lib.values_from_object}
generic.py:4294(logical_func)                                          ->     528    0.003    4.238  series.py:2068(_reduce)
nanops.py:233(nanany)                                                  ->     528    0.006    4.189  nanops.py:153(_get_values)
                                                                              528    0.001    0.039  {method 'any' of 'numpy.ndarray' objects}
{method 'get_value' of 'pandas.index.IndexEngine' objects}             ->       3    0.000    0.000  index.py:961(<lambda>)
index.py:1045(__contains__)                                            ->       5    0.018    0.018  index.py:958(_engine)
                                                                                5    0.000    0.000  index.py:961(<lambda>)
                                                                          3173628    0.423    0.423  {hash}
csr.py:155(tocsc)                                                      ->       5    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    0.000  compressed.py:24(__init__)
                                                                                3    0.000    0.000  compressed.py:90(getnnz)
                                                                                1    0.000    0.000  compressed.py:1019(__set_sorted)
                                                                                1    0.000    0.000  data.py:28(_get_dtype)
                                                                                1    0.000    0.000  sputils.py:26(upcast)
                                                                                1    0.000    0.000  sputils.py:132(get_index_dtype)
                                                                                1    0.000    0.000  {max}
                                                                                2    0.862    0.862  {method 'astype' of 'numpy.ndarray' objects}
                                                                                3    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                1    2.771    2.771  {scipy.sparse._sparsetools.csr_tocsc}
sputils.py:238(_slicetoarange)                                         ->  793122    0.335    0.335  {method 'indices' of 'slice' objects}
                                                                           793122    2.456    2.456  {numpy.core.multiarray.arange}
internals.py:112(to_dense)                                             -> 3174621    1.798    1.798  {method 'view' of 'numpy.ndarray' objects}
base.py:865(isspmatrix)                                                -> 4758756    1.433    1.433  {isinstance}
base.py:366(_mul_sparse_matrix)                                        ->       1    0.000    2.700  compressed.py:473(_mul_sparse_matrix)
                                                                                1    0.000    0.102  dia.py:225(tocsr)
{scipy.sparse._sparsetools.csr_tocsc}                                  ->
{len}                                                                  ->       9    0.000    0.000  frame.py:599(__len__)
                                                                             3016    0.002    0.002  index.py:242(__len__)
                                                                               42    0.000    0.000  internals.py:2369(__len__)
                                                                               35    0.000    0.000  series.py:381(__len__)
{scipy.sparse._sparsetools.csr_matmat_pass2}                           ->
numeric.py:1910(isscalar)                                              -> 3174647    1.065    1.065  {isinstance}
{numpy.core.multiarray.arange}                                         ->
{numpy.core.multiarray.zeros}                                          ->
generic.py:1079(_get_item_cache)                                       ->      35    0.000    0.001  frame.py:2102(_box_item_values)
                                                                               35    0.000    0.000  generic.py:1093(_set_as_cached)
                                                                               35    0.000    0.000  generic.py:2152(__setattr__)
                                                                               35    0.000    0.002  internals.py:2844(get)
                                                                          3172554    0.469    0.469  {method 'get' of 'dict' objects}
strings.py:783(<lambda>)                                               ->
numeric.py:464(asanyarray)                                             ->  793186    1.564    1.564  {numpy.core.multiarray.array}
{method 'extend' of 'list' objects}                                    ->
{scipy.sparse._csparsetools.prepare_index_for_memoryview}              ->
{method 'view' of 'numpy.ndarray' objects}                             ->       3    0.000    0.000  defmatrix.py:290(__array_finalize__)
{range}                                                                ->
{method 'reshape' of 'numpy.ndarray' objects}                          ->       1    0.000    0.000  defmatrix.py:290(__array_finalize__)
stride_tricks.py:19(__init__)                                          ->
sputils.py:273(_check_ellipsis)                                        ->  793122    0.064    0.064  {isinstance}
utils.py:134(collapse_further)                                         ->       1    0.000    0.030  frame.py:2630(reset_index)
                                                                                1    0.000    0.000  generic.py:1566(drop)
                                                                                1    0.000    0.000  generic.py:3108(groupby)
                                                                                1    0.000    1.012  groupby.py:105(f)
                                                                                1    0.000    0.000  index.py:1001(__iter__)
{scipy.sparse._sparsetools.csc_matmat_pass2}                           ->
groupby.py:105(f)                                                      ->       1    0.000    0.000  groupby.py:480(_set_selection_from_grouper)
                                                                                1    0.000    1.012  groupby.py:2559(_cython_agg_general)
groupby.py:2559(_cython_agg_general)                                   ->       1    0.000    1.007  groupby.py:2586(_cython_agg_blocks)
                                                                                1    0.000    0.005  groupby.py:3251(_wrap_agged_blocks)
groupby.py:2586(_cython_agg_blocks)                                    ->       1    0.000    0.904  groupby.py:1482(aggregate)
                                                                                1    0.000    0.031  groupby.py:3214(_get_data_to_aggregate)
                                                                                1    0.000    0.000  internals.py:119(mgr_locs)
                                                                                1    0.000    0.000  internals.py:467(_try_operate)
                                                                                1    0.000    0.048  internals.py:479(_try_coerce_and_cast_result)
                                                                                1    0.000    0.000  internals.py:2073(make_block)
                                                                                1    0.000    0.000  internals.py:2279(_get_items)
                                                                                1    0.000    0.023  internals.py:2616(get_numeric_data)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
compressed.py:126(check_format)                                        ->      11    0.000    0.000  base.py:93(get_shape)
                                                                               11    0.000    0.000  compressed.py:1044(prune)
                                                                               10    0.000    0.000  csc.py:197(_swap)
                                                                               12    0.000    0.000  csr.py:211(_swap)
                                                                               22    0.000    0.000  numeric.py:394(asarray)
                                                                               11    0.000    0.000  sputils.py:102(to_native)
                                                                               11    0.000    0.000  sputils.py:132(get_index_dtype)
                                                                               44    0.000    0.000  {len}
groupby.py:1482(aggregate)                                             ->       2    0.000    0.000  common.py:2495(is_integer_dtype)
                                                                                1    0.000    0.000  common.py:2526(is_datetime_or_timedelta_dtype)
                                                                                1    0.000    0.000  common.py:2541(is_numeric_dtype)
                                                                                1    0.000    0.000  common.py:2557(is_bool_dtype)
                                                                                1    0.000    0.841  groupby.py:1382(ngroups)
                                                                                2    0.000    0.000  groupby.py:1443(_get_aggregate_function)
                                                                                1    0.000    0.057  groupby.py:1566(_aggregate)
                                                                                1    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                                1    0.002    0.002  {method 'fill' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                2    0.000    0.000  {method 'swapaxes' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                1    0.001    0.001  {numpy.core.multiarray.zeros}
                                                                                1    0.003    0.003  {pandas.algos.ensure_float64}
internals.py:3390(_block)                                              ->
lil.py:88(__init__)                                                    ->       1    0.000    0.000  base.py:63(__init__)
                                                                                1    0.000    0.000  base.py:865(isspmatrix)
                                                                                1    0.000    0.000  lil.py:134(set_shape)
                                                                                1    0.000    0.000  sputils.py:106(getdtype)
                                                                                1    0.000    0.000  sputils.py:205(isshape)
                                                                                1    0.000    0.000  {isinstance}
                                                                                2    0.005    0.005  {numpy.core.multiarray.empty}
                                                                                1    0.006    0.006  {range}
{method 'astype' of 'numpy.ndarray' objects}                           ->
{zip}                                                                  ->
groupby.py:1382(ngroups)                                               ->       1    0.000    0.841  groupby.py:1393(result_index)
                                                                                1    0.000    0.000  {len}
groupby.py:1393(result_index)                                          ->       1    0.000    0.000  groupby.py:1319(names)
                                                                                1    0.000    0.841  groupby.py:2026(group_index)
                                                                                1    0.000    0.000  index.py:668(rename)
                                                                                1    0.000    0.000  {len}
groupby.py:2026(group_index)                                           ->       1    0.000    0.841  groupby.py:2032(_make_labels)
groupby.py:2032(_make_labels)                                          ->       1    0.006    0.835  algorithms.py:98(factorize)
                                                                                1    0.000    0.006  index.py:109(__new__)
algorithms.py:98(factorize)                                            ->       1    0.000    0.000  algorithms.py:403(_get_data_algo)
                                                                                1    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                1    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                                1    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
                                                                                1    0.612    0.612  {method 'argsort' of 'numpy.ndarray' objects}
                                                                                1    0.190    0.190  {method 'get_labels' of 'pandas.hashtable.PyObjectHashTable' objects}
                                                                                1    0.011    0.011  {method 'put' of 'numpy.ndarray' objects}
                                                                                2    0.013    0.013  {method 'take' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'to_array' of 'pandas.hashtable.ObjectVector' objects}
                                                                                1    0.002    0.002  {numpy.core.multiarray.arange}
                                                                                1    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                1    0.001    0.001  {numpy.core.multiarray.putmask}
                                                                                1    0.000    0.000  {pandas.algos.ensure_platform_int}
{scipy.sparse._sparsetools.csc_matmat_pass1}                           ->
{method 'argsort' of 'numpy.ndarray' objects}                          ->
{max}                                                                  ->
{method 'append' of 'list' objects}                                    ->
gauge_fix.py:101(fix_matrix)                                           ->       1    0.000    0.321  basic.py:557(pinv)
                                                                                2    0.000    0.001  defmatrix.py:244(__new__)
                                                                                2    0.000    0.102  defmatrix.py:338(__mul__)
                                                                                1    0.000    0.000  defmatrix.py:928(getT)
                                                                                1    0.109    0.114  gauge_fix.py:6(get_Lambda_mm)
                                                                                1    0.000    0.000  {method 'flatten' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
base.py:93(get_shape)                                                  ->
{pandas.lib.is_float}                                                  ->
{method 'get' of 'dict' objects}                                       ->
{hash}                                                                 ->       3    0.000    0.000  generic.py:661(__hash__)
series.py:563(_get_with)                                               ->     525    0.003    0.415  series.py:626(_get_values)
                                                                             2625    0.001    0.002  {isinstance}
                                                                              525    0.002    0.002  {pandas.lib.infer_dtype}
series.py:626(_get_values)                                             ->     525    0.001    0.001  generic.py:2118(__finalize__)
                                                                              525    0.004    0.404  internals.py:3437(get_slice)
                                                                              525    0.003    0.007  series.py:119(__init__)
                                                                              525    0.000    0.000  series.py:237(_constructor)
internals.py:3437(get_slice)                                           ->     525    0.184    0.202  index.py:1059(__getitem__)
                                                                              525    0.186    0.186  internals.py:177(_slice)
                                                                              525    0.002    0.011  internals.py:3343(__init__)
                                                                              525    0.000    0.000  internals.py:3390(_block)
                                                                              525    0.000    0.000  internals.py:3444(index)
basic.py:21(solve)                                                     ->       1    0.000    0.077  lapack.py:255(get_lapack_funcs)
                                                                                1    0.000    0.000  misc.py:126(_datacopied)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {map}
{method 'indices' of 'slice' objects}                                  ->
basic.py:557(pinv)                                                     ->       1    0.286    0.320  basic.py:456(lstsq)
                                                                                1    0.000    0.000  function_base.py:550(asarray_chkfinite)
                                                                                1    0.000    0.000  numeric.py:2125(identity)
basic.py:456(lstsq)                                                    ->       1    0.000    0.034  lapack.py:255(get_lapack_funcs)
                                                                                2    0.000    0.000  misc.py:126(_datacopied)
                                                                                1    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  {len}
                                                                                1    0.000    0.000  {map}
                                                                                1    0.000    0.000  {method 'astype' of 'numpy.generic' objects}
index.py:1059(__getitem__)                                             ->     526    0.001    0.003  common.py:2121(is_bool_indexer)
                                                                              527    0.002    0.010  index.py:343(_shallow_copy)
                                                                              525    0.001    0.001  numeric.py:394(asarray)
                                                                             1093    0.003    0.003  numeric.py:1910(isscalar)
                                                                              527    0.000    0.000  {isinstance}
                                                                              526    0.001    0.001  {pandas.lib.values_from_object}
{numpy.core.multiarray.putmask}                                        ->
series.py:2020(apply)                                                  ->       2    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                2    0.000    0.000  generic.py:2118(__finalize__)
                                                                                2    0.000    0.000  series.py:119(__init__)
                                                                                2    0.000    0.000  series.py:237(_constructor)
                                                                                4    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
                                                                                2    0.229    0.229  {pandas.lib.map_infer}
                                                                                2    0.000    0.000  {pandas.lib.values_from_object}
{pandas.lib.map_infer}                                                 ->
{method 'remove' of 'set' objects}                                     ->
{method 'pop' of 'set' objects}                                        ->
{method 'get_labels' of 'pandas.hashtable.PyObjectHashTable' objects}  ->
internals.py:177(_slice)                                               ->
{method 'copy' of 'numpy.ndarray' objects}                             ->       3    0.000    0.000  defmatrix.py:290(__array_finalize__)
generic.py:4243(stat_func)                                             ->       1    0.000    0.020  frame.py:4299(_reduce)
                                                                              525    0.003    0.142  series.py:2068(_reduce)
nanops.py:38(_f)                                                       ->     526    0.001    0.001  __init__.py:143(itervalues)
                                                                              526    0.003    0.146  nanops.py:63(f)
                                                                              526    0.001    0.004  {any}
{numpy.core._dotblas.dot}                                              ->       2    0.000    0.000  defmatrix.py:290(__array_finalize__)
nanops.py:63(f)                                                        ->     526    0.003    0.144  nanops.py:243(nansum)
                                                                              526    0.000    0.000  {len}
nanops.py:243(nansum)                                                  ->     526    0.000    0.001  common.py:2547(is_float_dtype)
                                                                              526    0.004    0.082  nanops.py:153(_get_values)
                                                                              526    0.001    0.003  nanops.py:216(_wrap_results)
                                                                              526    0.004    0.031  nanops.py:591(_maybe_null_out)
                                                                              526    0.001    0.024  {method 'sum' of 'numpy.ndarray' objects}
indexing.py:113(__setitem__)                                           ->       1    0.000    0.025  indexing.py:94(_get_setitem_indexer)
                                                                                1    0.006    0.110  indexing.py:199(_setitem_with_indexer)
base.py:79(center_data)                                                ->       2    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    0.000  base.py:865(isspmatrix)
                                                                                1    0.022    0.023  function_base.py:436(average)
                                                                                1    0.000    0.000  numeric.py:141(ones)
                                                                                1    0.005    0.076  validation.py:83(as_float_array)
                                                                                1    0.001    0.026  {isinstance}
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
series.py:119(__init__)                                                ->       2    0.000    0.000  common.py:2144(_default_index)
                                                                                2    0.000    0.000  common.py:2603(is_list_like)
                                                                             1669    0.005    0.005  generic.py:90(__init__)
                                                                              528    0.001    0.005  generic.py:107(_validate_dtype)
                                                                             1107    0.001    0.002  index.py:5677(_ensure_index)
                                                                             1109    0.006    0.025  internals.py:3343(__init__)
                                                                              525    0.000    0.000  internals.py:3444(index)
                                                                             1669    0.006    0.008  series.py:257(_set_axis)
                                                                             1109    0.021    0.051  series.py:2596(_sanitize_array)
                                                                             5010    0.001    0.001  {isinstance}
                                                                                2    0.000    0.000  {len}
gauge_fix.py:6(get_Lambda_mm)                                          ->       1    0.000    0.000  defmatrix.py:244(__new__)
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                            11488    0.005    0.005  {range}
lapack.py:255(get_lapack_funcs)                                        ->       2    0.111    0.111  blas.py:226(_get_funcs)
blas.py:226(_get_funcs)                                                ->       2    0.000    0.000  blas.py:182(find_best_blas_type)
                                                                                3    0.000    0.000  {getattr}
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                2    0.000    0.000  {method 'get' of 'dict' objects}
indexing.py:199(_setitem_with_indexer)                                 ->       2    0.000    0.000  frame.py:414(axes)
                                                                                1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  generic.py:2225(_is_mixed_type)
                                                                                3    0.070    0.070  index.py:1059(__getitem__)
                                                                                1    0.000    0.000  indexing.py:170(_has_valid_setitem_indexer)
                                                                                1    0.000    0.020  indexing.py:397(setter)
                                                                                1    0.000    0.000  indexing.py:417(can_do_equal_len)
                                                                                1    0.000    0.008  indexing.py:510(_align_series)
                                                                                1    0.000    0.000  indexing.py:1584(length_of_indexer)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                1    0.000    0.000  series.py:474(axes)
                                                                                1    0.000    0.000  {any}
                                                                                1    0.000    0.000  {getattr}
                                                                               10    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.007    0.007  {numpy.core.multiarray.array}
                                                                                1    0.000    0.000  {pandas.lib.is_integer}
dia.py:225(tocsr)                                                      ->       1    0.017    0.033  coo.py:325(tocsr)
                                                                                1    0.050    0.069  dia.py:233(tocoo)
defmatrix.py:338(__mul__)                                              ->       2    0.000    0.000  defmatrix.py:66(asmatrix)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.102    0.102  {numpy.core._dotblas.dot}
internals.py:3124(reindex_indexer)                                     ->       1    0.000    0.000  index.py:1843(_can_reindex)
                                                                                6    0.000    0.000  internals.py:115(fill_value)
                                                                                6    0.000    0.042  internals.py:845(take_nd)
                                                                                7    0.000    0.001  internals.py:2163(__init__)
                                                                                7    0.000    0.000  internals.py:2208(ndim)
                                                                                7    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                4    0.000    0.036  internals.py:3168(_slice_take_blocks_ax0)
internals.py:845(take_nd)                                              ->      10    0.002    0.076  common.py:756(take_nd)
                                                                                4    0.000    0.000  internals.py:115(fill_value)
                                                                                6    0.000    0.000  internals.py:119(mgr_locs)
                                                                               10    0.000    0.000  internals.py:128(make_block_same_class)
                                                                               10    0.000    0.000  internals.py:228(dtype)
                                                                               10    0.000    0.000  internals.py:874(get_values)
common.py:756(take_nd)                                                 ->      19    0.000    0.000  common.py:724(_get_take_nd_function)
                                                                               14    0.000    0.000  common.py:1105(_maybe_promote)
                                                                               19    0.000    0.000  {len}
                                                                                3    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
                                                                               19    0.007    0.007  {numpy.core.multiarray.empty}
                                                                               38    0.000    0.000  {pandas.algos.ensure_int64}
                                                                                9    0.000    0.000  {pandas.algos.take_1d_int64_int64}
                                                                                1    0.000    0.000  {pandas.algos.take_2d_axis0_float64_float64}
                                                                                3    0.035    0.035  {pandas.algos.take_2d_axis0_int64_int64}
                                                                                3    0.012    0.012  {pandas.algos.take_2d_axis1_int64_int64}
                                                                                3    0.020    0.020  {pandas.algos.take_2d_axis1_object_object}
validation.py:83(as_float_array)                                       ->       2    0.000    0.000  base.py:865(isspmatrix)
                                                                                1    0.000    0.000  data.py:28(_get_dtype)
                                                                                1    0.002    0.072  data.py:68(copy)
                                                                                2    0.000    0.000  {isinstance}
base.py:155(_set_intercept)                                            ->       1    0.045    0.045  {numpy.core._dotblas.dot}
data.py:68(copy)                                                       ->       1    0.002    0.035  compressed.py:1064(_with_data)
                                                                                1    0.034    0.034  {method 'copy' of 'numpy.ndarray' objects}
frame.py:1816(_getitem_array)                                          ->       6    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                3    0.000    0.000  generic.py:1046(_indexer)
                                                                                6    0.000    0.068  generic.py:1339(take)
                                                                                3    0.000    0.000  index.py:3434(equals)
                                                                                3    0.000    0.001  indexing.py:1007(_convert_to_indexer)
                                                                                3    0.000    0.000  indexing.py:1648(check_bool_indexer)
                                                                                3    0.000    0.000  {isinstance}
                                                                                6    0.000    0.000  {len}
                                                                                3    0.002    0.002  {method 'nonzero' of 'numpy.ndarray' objects}
dia.py:233(tocoo)                                                      ->       3    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    0.005  coo.py:116(__init__)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.001    0.001  {method 'copy' of 'numpy.ndarray' objects}
                                                                                3    0.001    0.001  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.012    0.012  {method 'repeat' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
                                                                                1    0.001    0.001  {numpy.core.multiarray.arange}
generic.py:1339(take)                                                  ->       6    0.000    0.000  frame.py:189(_constructor)
                                                                                6    0.000    0.000  frame.py:200(__init__)
                                                                               12    0.000    0.000  generic.py:318(_get_axis)
                                                                                6    0.000    0.000  generic.py:322(_get_block_manager_axis)
                                                                                3    0.000    0.000  generic.py:1199(_set_is_copy)
                                                                                6    0.000    0.000  generic.py:2118(__finalize__)
                                                                                6    0.000    0.000  generic.py:2197(_consolidate_inplace)
                                                                                3    0.000    0.000  index.py:1233(equals)
                                                                                3    0.000    0.003  index.py:3434(equals)
                                                                                6    0.004    0.064  internals.py:3255(take)
{method 'sum' of 'numpy.ndarray' objects}                              ->    1055    0.001    0.064  _methods.py:31(_sum)
internals.py:3255(take)                                                ->       6    0.000    0.007  index.py:1148(take)
                                                                                6    0.006    0.006  indexing.py:1695(maybe_convert_indices)
                                                                                6    0.000    0.000  internals.py:2204(shape)
                                                                                6    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                6    0.000    0.047  internals.py:3124(reindex_indexer)
                                                                                6    0.000    0.000  numeric.py:464(asanyarray)
                                                                                6    0.000    0.000  {isinstance}
                                                                                6    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
groupby.py:1566(_aggregate)                                            ->       1    0.000    0.001  groupby.py:1363(group_info)
                                                                                1    0.042    0.056  {pandas.algos.group_add_float64}
{pandas.algos.group_add_float64}                                       ->       2    0.000    0.014  numeric.py:81(zeros_like)
series.py:2596(_sanitize_array)                                        ->       2    0.000    0.000  common.py:1961(_possibly_convert_platform)
                                                                                2    0.000    0.000  common.py:1974(_possibly_cast_to_datetime)
                                                                              528    0.001    0.004  common.py:2443(_coerce_to_dtype)
                                                                              528    0.001    0.001  common.py:2507(is_datetime64_dtype)
                                                                              528    0.001    0.002  common.py:2547(is_float_dtype)
                                                                             1107    0.003    0.017  series.py:2611(_try_cast)
                                                                             2801    0.001    0.001  {isinstance}
                                                                             1109    0.001    0.001  {issubclass}
                                                                             2220    0.003    0.004  {len}
                                                                              528    0.001    0.001  {numpy.core.multiarray.array}
frame.py:200(__init__)                                                 ->       2    0.000    0.028  frame.py:295(_init_dict)
                                                                                3    0.000    0.022  frame.py:343(_init_ndarray)
                                                                               19    0.000    0.000  generic.py:90(__init__)
                                                                               14    0.000    0.000  generic.py:120(_init_mgr)
                                                                                3    0.000    0.000  {getattr}
                                                                               49    0.000    0.000  {isinstance}
qc.py:685(validate_model)                                              ->       1    0.000    0.000  frame.py:418(shape)
                                                                                2    0.000    0.000  index.py:1001(__iter__)
                                                                                1    0.016    0.034  index.py:1045(__contains__)
                                                                               44    0.000    0.000  qc.py:88(is_col_type)
                                                                                1    0.000    0.014  qc.py:122(_validate_cols)
                                                                                1    0.000    0.000  {all}
                                                                               12    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'values' of 'dict' objects}
                                                                                1    0.000    0.000  {sorted}
                                                                                1    0.000    0.000  {zip}
{method 'any' of 'numpy.ndarray' objects}                              ->    1108    0.001    0.046  _methods.py:37(_any)
internals.py:479(_try_coerce_and_cast_result)                          ->       1    0.000    0.048  internals.py:435(_try_cast_result)
                                                                                1    0.000    0.000  internals.py:475(_try_coerce_result)
internals.py:435(_try_cast_result)                                     ->       1    0.000    0.048  common.py:1285(_possibly_downcast_to_dtype)
                                                                                1    0.000    0.000  internals.py:228(dtype)
common.py:1285(_possibly_downcast_to_dtype)                            ->       1    0.000    0.002  common.py:368(notnull)
                                                                                2    0.000    0.000  common.py:1293(<lambda>)
                                                                                1    0.000    0.000  fromnumeric.py:2259(prod)
                                                                                1    0.000    0.000  numeric.py:1910(isscalar)
                                                                                2    0.027    0.037  numeric.py:2156(allclose)
                                                                                3    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {issubclass}
                                                                                1    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
                                                                                2    0.004    0.004  {method 'astype' of 'numpy.ndarray' objects}
                                                                                1    0.005    0.005  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
ridge.py:463(__init__)                                                 ->       1    0.000    0.000  ridge.py:346(__init__)
_methods.py:37(_any)                                                   ->    1109    0.046    0.046  {method 'reduce' of 'numpy.ufunc' objects}
{method 'take' of 'numpy.ndarray' objects}                             ->
validation.py:57(safe_asarray)                                         ->       2    0.000    0.000  base.py:865(isspmatrix)
                                                                                1    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.023    0.036  validation.py:37(_assert_all_finite)
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
numeric.py:2156(allclose)                                              ->       4    0.000    0.000  fromnumeric.py:1772(any)
                                                                                2    0.000    0.000  fromnumeric.py:1852(all)
                                                                                2    0.000    0.000  numeric.py:2809(__init__)
                                                                                2    0.000    0.000  numeric.py:2813(__enter__)
                                                                                2    0.000    0.000  numeric.py:2818(__exit__)
                                                                                4    0.009    0.009  {abs}
                                                                                6    0.000    0.000  {numpy.core.multiarray.array}
                                                                                2    0.000    0.000  {numpy.core.multiarray.result_type}
internals.py:3343(__init__)                                            ->      35    0.000    0.000  index.py:5677(_ensure_index)
                                                                             1634    0.009    0.024  internals.py:2073(make_block)
                                                                             5007    0.001    0.001  {isinstance}
                                                                             1704    0.001    0.002  {len}
validation.py:37(_assert_all_finite)                                   ->       2    0.000    0.000  numeric.py:464(asanyarray)
                                                                                1    0.000    0.013  {method 'sum' of 'numpy.ndarray' objects}
internals.py:3168(_slice_take_blocks_ax0)                              ->       8    0.000    0.000  common.py:756(take_nd)
                                                                                4    0.000    0.035  internals.py:845(take_nd)
                                                                                4    0.000    0.000  internals.py:2204(shape)
                                                                                4    0.000    0.000  internals.py:2246(_is_single_block)
                                                                                8    0.000    0.000  internals.py:3935(_get_blkno_placements)
                                                                                4    0.000    0.000  internals.py:4461(_preprocess_slice_or_indexer)
                                                                                4    0.000    0.000  {len}
                                                                                4    0.000    0.000  {method 'append' of 'list' objects}
compressed.py:1064(_with_data)                                         ->       1    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.001    0.002  compressed.py:24(__init__)
                                                                                2    0.031    0.031  {method 'copy' of 'numpy.ndarray' objects}
{pandas.algos.take_2d_axis0_int64_int64}                               ->
fromnumeric.py:1925(cumsum)                                            ->       1    0.033    0.033  {method 'cumsum' of 'numpy.ndarray' objects}
frame.py:2630(reset_index)                                             ->       1    0.000    0.026  frame.py:2213(insert)
                                                                                1    0.000    0.000  frame.py:2666(_maybe_casted_values)
                                                                                5    0.000    0.000  generic.py:2152(__setattr__)
                                                                                1    0.000    0.002  generic.py:2414(copy)
                                                                                6    0.000    0.000  {isinstance}
                                                                                5    0.000    0.000  {len}
                                                                                5    0.005    0.005  {numpy.core.multiarray.arange}
{method 'cumsum' of 'numpy.ndarray' objects}                           ->
coo.py:325(tocsr)                                                      ->       2    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    0.000  compressed.py:24(__init__)
                                                                                1    0.000    0.001  compressed.py:987(sum_duplicates)
                                                                                5    0.000    0.000  coo.py:208(getnnz)
                                                                                1    0.000    0.000  data.py:28(_get_dtype)
                                                                                1    0.000    0.000  sputils.py:26(upcast)
                                                                                1    0.000    0.000  sputils.py:132(get_index_dtype)
                                                                                1    0.000    0.000  {max}
                                                                                2    0.001    0.001  {method 'astype' of 'numpy.ndarray' objects}
                                                                                3    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                1    0.014    0.014  {scipy.sparse._sparsetools.coo_tocsr}
generic.py:1566(drop)                                                  ->       1    0.000    0.000  frame.py:414(axes)
                                                                                1    0.000    0.031  frame.py:2508(reindex)
                                                                                2    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                2    0.000    0.000  generic.py:305(_get_axis_name)
                                                                                2    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  index.py:599(_get_names)
                                                                                1    0.000    0.000  index.py:610(set_names)
                                                                                1    0.000    0.000  index.py:740(is_unique)
                                                                                2    0.000    0.001  index.py:2551(drop)
groupby.py:3214(_get_data_to_aggregate)                                ->       1    0.000    0.000  groupby.py:511(__getattr__)
                                                                                1    0.000    0.031  groupby.py:2624(_obj_with_exclusions)
groupby.py:2624(_obj_with_exclusions)                                  ->       1    0.000    0.031  generic.py:1566(drop)
                                                                                1    0.000    0.000  {len}
nanops.py:591(_maybe_null_out)                                         ->       1    0.000    0.000  fromnumeric.py:1772(any)
                                                                                1    0.000    0.000  {getattr}
                                                                              526    0.000    0.027  {method 'sum' of 'numpy.ndarray' objects}
frame.py:2508(reindex)                                                 ->       1    0.000    0.031  generic.py:1739(reindex)
generic.py:1739(reindex)                                               ->       1    0.000    0.000  common.py:2759(_clean_reindex_fill_method)
                                                                                1    0.000    0.031  frame.py:2459(_reindex_axes)
                                                                                1    0.000    0.000  generic.py:245(_construct_axes_from_arguments)
                                                                                1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  generic.py:1794(_needs_reindex_multi)
                                                                                1    0.000    0.000  generic.py:2118(__finalize__)
                                                                                1    0.000    0.000  generic.py:2197(_consolidate_inplace)
                                                                                1    0.000    0.000  index.py:1245(identical)
                                                                                1    0.000    0.000  {all}
                                                                                1    0.000    0.000  {method 'items' of 'dict' objects}
                                                                                5    0.000    0.000  {method 'pop' of 'dict' objects}
frame.py:2459(_reindex_axes)                                           ->       1    0.000    0.031  frame.py:2482(_reindex_columns)
frame.py:2482(_reindex_columns)                                        ->       1    0.000    0.031  generic.py:1854(_reindex_with_indexers)
                                                                                1    0.000    0.000  index.py:1862(reindex)
generic.py:1854(_reindex_with_indexers)                                ->       1    0.000    0.000  frame.py:189(_constructor)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.000  generic.py:322(_get_block_manager_axis)
                                                                                1    0.000    0.000  generic.py:2118(__finalize__)
                                                                                1    0.000    0.000  index.py:5677(_ensure_index)
                                                                                1    0.000    0.031  internals.py:3124(reindex_indexer)
                                                                                1    0.000    0.000  {method 'keys' of 'dict' objects}
                                                                                1    0.000    0.000  {pandas.algos.ensure_int64}
                                                                                1    0.000    0.000  {sorted}
{scipy.sparse._sparsetools.csr_matmat_pass1}                           ->
merge.py:700(concat)                                                   ->       2    0.000    0.029  merge.py:763(__init__)
                                                                                2    0.000    0.001  merge.py:888(get_result)
index.py:1148(take)                                                    ->       7    0.000    0.000  index.py:343(_shallow_copy)
                                                                                7    0.027    0.027  {method 'take' of 'numpy.ndarray' objects}
                                                                                7    0.002    0.002  {numpy.core.multiarray.array}
                                                                                7    0.000    0.000  {pandas.algos.ensure_platform_int}
merge.py:763(__init__)                                                 ->       6    0.000    0.000  base.py:318(ndim)
                                                                                2    0.000    0.000  frame.py:189(_constructor)
                                                                                2    0.000    0.028  frame.py:200(__init__)
                                                                                2    0.000    0.000  frame.py:418(shape)
                                                                                2    0.000    0.000  fromnumeric.py:1631(sum)
                                                                               10    0.000    0.000  generic.py:386(ndim)
                                                                                4    0.000    0.000  generic.py:2203(consolidate)
                                                                                2    0.000    0.000  merge.py:938(_get_new_axes)
                                                                                2    0.000    0.000  {getattr}
                                                                               12    0.000    0.000  {isinstance}
                                                                                6    0.000    0.000  {len}
                                                                                2    0.000    0.000  {max}
                                                                                4    0.000    0.000  {method 'add' of 'set' objects}
                                                                                4    0.000    0.000  {method 'append' of 'list' objects}
frame.py:295(_init_dict)                                               ->       2    0.000    0.000  common.py:2185(_try_sort)
                                                                                2    0.000    0.028  frame.py:4791(_arrays_to_mgr)
                                                                                2    0.000    0.000  index.py:109(__new__)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'keys' of 'dict' objects}
frame.py:4791(_arrays_to_mgr)                                          ->       2    0.000    0.000  frame.py:4811(extract_index)
                                                                                2    0.000    0.000  frame.py:5092(_homogenize)
                                                                                4    0.000    0.000  index.py:5677(_ensure_index)
                                                                                2    0.000    0.028  internals.py:3553(create_block_manager_from_arrays)
internals.py:3553(create_block_manager_from_arrays)                    ->       2    0.000    0.000  internals.py:2163(__init__)
                                                                                2    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                2    0.000    0.028  internals.py:3563(form_blocks)
internals.py:3563(form_blocks)                                         ->       2    0.000    0.000  index.py:109(__new__)
                                                                                2    0.000    0.000  index.py:1059(__getitem__)
                                                                                2    0.000    0.011  index.py:1233(equals)
                                                                                2    0.016    0.016  internals.py:3687(_multi_blockify)
                                                                               10    0.000    0.000  series.py:288(dtype)
                                                                                2    0.000    0.000  {isinstance}
                                                                                8    0.000    0.000  {issubclass}
                                                                               20    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                2    0.000    0.000  {method 'extend' of 'list' objects}
                                                                                2    0.000    0.000  {numpy.core.multiarray.arange}
frame.py:2213(insert)                                                  ->       1    0.000    0.000  frame.py:2164(_ensure_valid_index)
                                                                                1    0.000    0.007  frame.py:2315(_sanitize_column)
                                                                                1    0.000    0.019  internals.py:3060(insert)
indexing.py:1007(_convert_to_indexer)                                  ->       3    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                3    0.000    0.000  common.py:2347(_asarray_tuplesafe)
                                                                                5    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  index.py:740(is_unique)
                                                                                5    0.000    0.000  index.py:752(is_integer)
                                                                                3    0.000    0.000  index.py:914(_convert_list_indexer)
                                                                                5    0.000    0.025  index.py:1553(get_loc)
                                                                                3    0.000    0.000  index.py:1643(get_indexer)
                                                                                5    0.000    0.000  indexing.py:159(_convert_scalar_indexer)
                                                                                1    0.000    0.000  indexing.py:165(_convert_slice_indexer)
                                                                                3    0.000    0.000  indexing.py:1731(is_nested_tuple)
                                                                                3    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                               10    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
                                                                                5    0.000    0.000  {pandas.lib.is_integer}
                                                                                3    0.000    0.000  {pandas.lib.values_from_object}
internals.py:2073(make_block)                                          ->      28    0.000    0.000  common.py:2565(is_categorical)
                                                                             1659    0.007    0.014  internals.py:64(__init__)
                                                                               37    0.000    0.001  internals.py:1442(__init__)
                                                                             1645    0.000    0.000  {isinstance}
                                                                             6053    0.001    0.001  {issubclass}
index.py:1553(get_loc)                                                 ->       2    0.000    0.000  index.py:958(_engine)
                                                                               79    0.025    0.025  {method 'get_loc' of 'pandas.index.IndexEngine' objects}
                                                                               79    0.000    0.000  {pandas.lib.values_from_object}
indexing.py:94(_get_setitem_indexer)                                   ->       1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.025  indexing.py:144(_convert_tuple)
                                                                                2    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
indexing.py:144(_convert_tuple)                                        ->       2    0.000    0.025  indexing.py:1007(_convert_to_indexer)
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
{method 'get_loc' of 'pandas.index.IndexEngine' objects}               ->
frame.py:2114(__setitem__)                                             ->       1    0.000    0.004  frame.py:2133(_setitem_array)
                                                                                4    0.000    0.019  frame.py:2192(_set_item)
                                                                                5    0.000    0.000  indexing.py:1612(convert_to_index_sliceable)
                                                                                9    0.000    0.000  {isinstance}
abc.py:128(__instancecheck__)                                          ->       1    0.000    0.000  _weakrefset.py:70(__contains__)
                                                                                1    0.021    0.021  abc.py:148(__subclasscheck__)
                                                                                1    0.000    0.000  {getattr}
compressed.py:447(_mul_vector)                                         ->       1    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    0.000  data.py:28(_get_dtype)
                                                                                1    0.000    0.000  sputils.py:65(upcast_char)
                                                                                1    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                                1    0.024    0.024  {scipy.sparse._sparsetools.csc_matvec}
{scipy.sparse._sparsetools.csc_matvec}                                 ->
function_base.py:436(average)                                          ->       1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'any' of 'numpy.generic' objects}
                                                                                2    0.000    0.001  {method 'sum' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
internals.py:2616(get_numeric_data)                                    ->       1    0.000    0.023  internals.py:2626(combine)
                                                                                1    0.000    0.000  internals.py:2837(_consolidate_inplace)
internals.py:2626(combine)                                             ->       1    0.000    0.000  common.py:756(take_nd)
                                                                                1    0.000    0.000  fromnumeric.py:694(sort)
                                                                                1    0.000    0.023  index.py:1148(take)
                                                                                2    0.000    0.000  internals.py:119(mgr_locs)
                                                                                1    0.000    0.000  internals.py:141(mgr_locs)
                                                                                1    0.000    0.000  internals.py:504(copy)
                                                                                1    0.000    0.000  internals.py:2163(__init__)
                                                                                1    0.000    0.000  internals.py:2204(shape)
                                                                                1    0.000    0.000  internals.py:2279(_get_items)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.concatenate}
                                                                                1    0.000    0.000  {pandas.lib.get_reverse_indexer}
frame.py:343(_init_ndarray)                                            ->       6    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                3    0.000    0.000  common.py:2585(is_object_dtype)
                                                                                3    0.000    0.021  frame.py:361(_get_axes)
                                                                                3    0.000    0.000  frame.py:4863(_prep_ndarray)
                                                                                3    0.000    0.001  internals.py:3530(create_block_manager_from_blocks)
                                                                                3    0.000    0.000  {getattr}
                                                                                3    0.000    0.000  {isinstance}
internals.py:2396(apply)                                               ->       1    0.000    0.003  internals.py:371(astype)
                                                                                1    0.000    0.005  internals.py:422(convert)
                                                                                3    0.000    0.013  internals.py:504(copy)
                                                                                4    0.000    0.001  internals.py:2163(__init__)
                                                                                4    0.000    0.000  internals.py:2442(<genexpr>)
                                                                                4    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                5    0.000    0.000  {getattr}
                                                                                5    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
                                                                                4    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {method 'extend' of 'list' objects}
abc.py:148(__subclasscheck__)                                          ->       6    0.000    0.000  _weakrefset.py:36(__init__)
                                                                               19    0.000    0.000  _weakrefset.py:58(__iter__)
                                                                                6    0.000    0.000  _weakrefset.py:70(__contains__)
                                                                                6    0.000    0.000  _weakrefset.py:83(add)
                                                                                6    0.000    0.000  {getattr}
                                                                             18/2    0.000    0.000  {issubclass}
                                                                                6    0.000    0.000  {method '__subclasses__' of 'type' objects}
                                                                                6    0.000    0.000  {method '__subclasshook__' of 'object' objects}
internals.py:504(copy)                                                 ->       6    0.000    0.000  internals.py:119(mgr_locs)
                                                                                6    0.000    0.000  internals.py:2073(make_block)
                                                                                5    0.021    0.021  {method 'copy' of 'numpy.ndarray' objects}
frame.py:361(_get_axes)                                                ->       3    0.021    0.021  common.py:2144(_default_index)
                                                                                3    0.000    0.000  index.py:5677(_ensure_index)
common.py:2144(_default_index)                                         ->       5    0.000    0.000  index.py:3385(__new__)
                                                                                5    0.000    0.000  {numpy.core.multiarray.arange}
{hasattr}                                                              ->       1    0.000    0.000  base.py:485(__getattr__)
                                                                             1050    0.007    0.012  generic.py:2135(__getattr__)
                                                                              529    0.001    0.002  series.py:288(dtype)
{pandas.algos.take_2d_axis1_object_object}                             ->
frame.py:4299(_reduce)                                                 ->       1    0.000    0.000  common.py:2585(is_object_dtype)
                                                                                1    0.000    0.020  frame.py:4302(<lambda>)
                                                                                1    0.000    0.000  frame.py:4432(_get_agg_axis)
                                                                                1    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                1    0.000    0.000  generic.py:2225(_is_mixed_type)
                                                                                1    0.000    0.000  generic.py:2309(values)
                                                                                1    0.000    0.000  series.py:119(__init__)
indexing.py:397(setter)                                                ->       1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.006    0.020  frame.py:2114(__setitem__)
                                                                                1    0.000    0.000  {all}
                                                                                1    0.000    0.000  {isinstance}
frame.py:4302(<lambda>)                                                ->       1    0.000    0.020  nanops.py:38(_f)
frame.py:2192(_set_item)                                               ->       4    0.000    0.000  frame.py:2164(_ensure_valid_index)
                                                                                4    0.000    0.010  frame.py:2315(_sanitize_column)
                                                                                4    0.000    0.010  generic.py:1195(_set_item)
                                                                                4    0.000    0.000  generic.py:1227(_check_setitem_copy)
                                                                                4    0.000    0.000  {len}
common.py:2569(is_categorical_dtype)                                   ->     529    0.000    0.001  series.py:288(dtype)
                                                                             3281    0.003    0.005  {hasattr}
                                                                             3281    0.001    0.001  {isinstance}
internals.py:3060(insert)                                              ->       2    0.000    0.000  function_base.py:3625(insert)
                                                                                1    0.000    0.000  index.py:1045(__contains__)
                                                                                1    0.000    0.000  index.py:2531(insert)
                                                                                2    0.000    0.000  internals.py:119(mgr_locs)
                                                                                1    0.000    0.000  internals.py:141(mgr_locs)
                                                                                1    0.000    0.000  internals.py:2073(make_block)
                                                                                1    0.000    0.000  internals.py:2208(ndim)
                                                                                2    0.000    0.000  internals.py:2279(_get_items)
                                                                                1    0.000    0.000  internals.py:4450(_fast_count_smallints)
                                                                                1    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {len}
                                                                                1    0.018    0.018  {method 'add' of 'pandas.lib.BlockPlacement' objects}
{numpy.core.multiarray.concatenate}                                    ->
{method 'add' of 'pandas.lib.BlockPlacement' objects}                  ->
index.py:958(_engine)                                                  ->      11    0.000    0.000  {len}
series.py:2611(_try_cast)                                              ->    1107    0.003    0.003  common.py:1949(_possibly_castable)
                                                                              558    0.008    0.011  common.py:1974(_possibly_cast_to_datetime)
                                                                              558    0.001    0.001  {numpy.core.multiarray.array}
dia.py:76(__init__)                                                    ->       1    0.000    0.016  arraysetops.py:96(unique)
                                                                                1    0.000    0.000  base.py:71(set_shape)
                                                                                1    0.000    0.000  base.py:865(isspmatrix)
                                                                                1    0.000    0.000  data.py:25(__init__)
                                                                                1    0.000    0.000  dia.py:265(isspmatrix_dia)
                                                                                1    0.000    0.000  shape_base.py:8(atleast_1d)
                                                                                1    0.000    0.000  shape_base.py:60(atleast_2d)
                                                                                1    0.000    0.000  sputils.py:132(get_index_dtype)
                                                                                1    0.000    0.000  sputils.py:205(isshape)
                                                                                1    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {len}
                                                                                1    0.000    0.000  {max}
                                                                                2    0.000    0.000  {numpy.core.multiarray.array}
frame.py:2315(_sanitize_column)                                        ->       2    0.000    0.000  common.py:2049(_possibly_infer_to_datetimelike)
                                                                                2    0.000    0.000  common.py:2585(is_object_dtype)
                                                                                2    0.000    0.000  common.py:2644(is_sequence)
                                                                                3    0.000    0.002  frame.py:2319(reindexer)
                                                                                5    0.000    0.000  index.py:1045(__contains__)
                                                                                5    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  series.py:2575(_sanitize_index)
                                                                                5    0.000    0.000  shape_base.py:60(atleast_2d)
                                                                               22    0.000    0.000  {isinstance}
                                                                                2    0.014    0.014  {method 'copy' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
arraysetops.py:96(unique)                                              ->       1    0.000    0.000  numeric.py:464(asanyarray)
                                                                                1    0.000    0.000  {method 'flatten' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'sort' of 'numpy.ndarray' objects}
                                                                                1    0.016    0.016  {numpy.core.multiarray.concatenate}
internals.py:3687(_multi_blockify)                                     ->       2    0.000    0.000  internals.py:2073(make_block)
                                                                                2    0.000    0.000  internals.py:3691(<lambda>)
                                                                                2    0.000    0.000  internals.py:3721(_stack_arrays)
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
common.py:407(array_equivalent)                                        ->      32    0.000    0.000  numeric.py:394(asarray)
                                                                                8    0.003    0.004  numeric.py:2328(array_equal)
                                                                               26    0.000    0.000  {issubclass}
                                                                                4    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                4    0.011    0.011  {pandas.algos.ensure_object}
                                                                                2    0.000    0.000  {pandas.lib.array_equivalent_object}
common.py:2416(is_iterator)                                            ->    1050    0.002    0.015  {hasattr}
qc.py:122(_validate_cols)                                              ->       1    0.000    0.000  qc.py:140(_validate_seqs_cols)
                                                                                1    0.000    0.000  qc.py:173(_validate_cts_cols)
                                                                                1    0.000    0.008  qc.py:212(_validate_pos_cols)
                                                                                1    0.000    0.000  qc.py:246(_validate_bin_cols)
                                                                                1    0.000    0.000  qc.py:279(_validate_mut_cols)
                                                                                1    0.000    0.000  qc.py:310(_validate_err_cols)
                                                                                1    0.000    0.000  qc.py:344(_validate_std_cols)
                                                                                1    0.001    0.005  qc.py:378(_validate_val_cols)
                                                                                1    0.000    0.000  qc.py:408(_validate_mean_cols)
                                                                                1    0.000    0.000  qc.py:439(_validate_freq_cols)
                                                                                1    0.000    0.000  qc.py:475(_validate_info_cols)
generic.py:2135(__getattr__)                                           ->       1    0.000    0.000  frame.py:1774(__getitem__)
                                                                             1051    0.001    0.001  generic.py:366(_info_axis)
                                                                             1051    0.004    0.004  index.py:1045(__contains__)
internals.py:64(__init__)                                              ->    1696    0.001    0.001  internals.py:119(mgr_locs)
                                                                             1696    0.004    0.005  internals.py:141(mgr_locs)
                                                                             3392    0.001    0.001  {len}
{numpy.core.multiarray.copyto}                                         ->
indexing.py:1648(check_bool_indexer)                                   ->     528    0.001    0.002  index.py:3434(equals)
                                                                              528    0.001    0.010  numeric.py:394(asarray)
                                                                              528    0.000    0.001  {isinstance}
utils.py:428(emat_typical_parameterization)                            ->       1    0.000    0.000  shape_base.py:179(vstack)
                                                                                1    0.000    0.001  utils.py:446(fix_matrix_gauge)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.013    0.013  {method 'reshape' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
generic.py:2414(copy)                                                  ->       2    0.000    0.000  frame.py:189(_constructor)
                                                                                2    0.000    0.000  frame.py:200(__init__)
                                                                                2    0.000    0.000  generic.py:2118(__finalize__)
                                                                                2    0.000    0.014  internals.py:2674(copy)
internals.py:2674(copy)                                                ->       2    0.000    0.013  internals.py:2396(apply)
                                                                                4    0.000    0.000  internals.py:2694(<lambda>)
numeric.py:81(zeros_like)                                              ->       2    0.013    0.013  {numpy.core.multiarray.copyto}
                                                                                2    0.000    0.000  {numpy.core.multiarray.empty_like}
                                                                                2    0.000    0.000  {numpy.core.multiarray.zeros}
{scipy.sparse._sparsetools.coo_tocsr}                                  ->
{numpy.core.multiarray.empty}                                          ->
{pandas.algos.take_2d_axis1_int64_int64}                               ->
{method 'repeat' of 'numpy.ndarray' objects}                           ->
index.py:1233(equals)                                                  ->       8    0.000    0.011  common.py:407(array_equivalent)
                                                                                8    0.000    0.000  index.py:218(is_)
                                                                                8    0.000    0.000  {isinstance}
                                                                               16    0.000    0.000  {pandas.lib.values_from_object}
{pandas.algos.ensure_object}                                           ->
{method 'put' of 'numpy.ndarray' objects}                              ->
common.py:1974(_possibly_cast_to_datetime)                             ->      32    0.000    0.001  common.py:2049(_possibly_infer_to_datetimelike)
                                                                              528    0.000    0.001  common.py:2507(is_datetime64_dtype)
                                                                              528    0.000    0.001  common.py:2516(is_timedelta64_dtype)
                                                                              560    0.000    0.000  {isinstance}
                                                                               32    0.000    0.000  {issubclass}
common.py:70(_check)                                                   ->    6487    0.005    0.005  {getattr}
index.py:5677(_ensure_index)                                           ->      12    0.000    0.001  index.py:109(__new__)
                                                                               12    0.000    0.000  {hasattr}
                                                                             1221    0.001    0.001  {isinstance}
                                                                                2    0.000    0.000  {len}
                                                                                2    0.008    0.008  {pandas.lib.clean_index_list}
index.py:343(_shallow_copy)                                            ->     539    0.003    0.005  index.py:204(_simple_new)
                                                                                5    0.000    0.000  index.py:263(values)
                                                                              539    0.003    0.003  index.py:327(_get_attributes_dict)
                                                                              539    0.000    0.000  {method 'update' of 'dict' objects}
{getattr}                                                              ->       1    0.000    0.000  base.py:485(__getattr__)
                                                                                1    0.000    0.000  generic.py:1046(_indexer)
                                                                              528    0.000    0.002  series.py:308(values)
sputils.py:132(get_index_dtype)                                        ->      31    0.009    0.009  getlimits.py:244(__init__)
                                                                               31    0.000    0.000  getlimits.py:269(max)
                                                                               58    0.000    0.000  numeric.py:394(asarray)
                                                                               31    0.000    0.000  {isinstance}
generic.py:1195(_set_item)                                             ->       4    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                                4    0.000    0.010  internals.py:2943(set)
internals.py:2943(set)                                                 ->       4    0.000    0.000  common.py:2565(is_categorical)
                                                                                4    0.000    0.000  index.py:1553(get_loc)
                                                                                3    0.002    0.002  internals.py:262(set)
                                                                                3    0.000    0.000  internals.py:1304(should_store)
                                                                                1    0.007    0.007  internals.py:1495(set)
                                                                                1    0.000    0.000  internals.py:1542(should_store)
                                                                                4    0.000    0.000  internals.py:2204(shape)
                                                                                4    0.000    0.000  internals.py:2208(ndim)
                                                                                4    0.000    0.000  internals.py:2279(_get_items)
                                                                                4    0.000    0.000  internals.py:2973(value_getitem)
                                                                                8    0.000    0.000  internals.py:3935(_get_blkno_placements)
                                                                                8    0.000    0.000  {isinstance}
                                                                                8    0.000    0.000  {len}
                                                                                4    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
getlimits.py:244(__init__)                                             ->
generic.py:2152(__setattr__)                                           ->       6    0.000    0.009  generic.py:412(_set_axis)
{abs}                                                                  ->
generic.py:412(_set_axis)                                              ->       6    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                                6    0.000    0.009  internals.py:2212(set_axis)
internals.py:2212(set_axis)                                            ->       6    0.000    0.009  index.py:5677(_ensure_index)
                                                                               12    0.000    0.000  {len}
common.py:2121(is_bool_indexer)                                        ->       8    0.000    0.000  numeric.py:394(asarray)
                                                                             1056    0.001    0.002  series.py:288(dtype)
                                                                             1077    0.001    0.003  {isinstance}
{pandas.lib.infer_dtype}                                               ->       3    0.000    0.000  index.py:258(dtype)
                                                                                3    0.000    0.000  index.py:263(values)
common.py:2461(_get_dtype_type)                                        ->   10725    0.002    0.002  {isinstance}
{pandas.lib.clean_index_list}                                          ->
series.py:308(values)                                                  ->    1686    0.002    0.006  internals.py:3477(values)
series.py:257(_set_axis)                                               ->    1669    0.001    0.001  index.py:3427(is_all_dates)
                                                                             1669    0.001    0.001  series.py:277(_set_subtyp)
qc.py:212(_validate_pos_cols)                                          ->       6    0.000    0.000  frame.py:1774(__getitem__)
                                                                                2    0.000    0.000  generic.py:1046(_indexer)
                                                                                1    0.000    0.000  index.py:1045(__contains__)
                                                                                2    0.000    0.007  indexing.py:1185(__getitem__)
                                                                                1    0.000    0.000  numeric.py:2328(array_equal)
                                                                                4    0.000    0.000  series.py:308(values)
                                                                                2    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.arange}
indexing.py:510(_align_series)                                         ->       2    0.000    0.000  common.py:2607(is_null_slice)
                                                                                1    0.000    0.000  common.py:2644(is_sequence)
                                                                                1    0.000    0.000  frame.py:414(axes)
                                                                                2    0.000    0.000  generic.py:386(ndim)
                                                                                1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:1059(__getitem__)
                                                                                1    0.000    0.001  index.py:3434(equals)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                1    0.000    0.000  series.py:308(values)
                                                                                3    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {map}
                                                                                1    0.007    0.007  {method 'copy' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {sum}
index.py:109(__new__)                                                  ->      19    0.000    0.000  common.py:2347(_asarray_tuplesafe)
                                                                               14    0.000    0.000  common.py:2557(is_bool_dtype)
                                                                               38    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                               19    0.000    0.000  index.py:204(_simple_new)
                                                                                3    0.000    0.000  index.py:258(dtype)
                                                                                6    0.000    0.000  index.py:3385(__new__)
                                                                                5    0.000    0.000  numeric.py:1910(isscalar)
                                                                                5    0.000    0.000  {hasattr}
                                                                               55    0.000    0.000  {isinstance}
                                                                               88    0.000    0.000  {issubclass}
                                                                               18    0.006    0.006  {pandas.lib.infer_dtype}
                                                                                5    0.000    0.000  {sorted}
common.py:1169(_maybe_upcast_putmask)                                  ->     526    0.001    0.007  {method 'any' of 'numpy.ndarray' objects}
indexing.py:1185(__getitem__)                                          ->       1    0.000    0.000  indexing.py:698(_getitem_tuple)
                                                                                1    0.000    0.000  indexing.py:1299(_getitem_axis)
                                                                                2    0.000    0.007  indexing.py:1449(_getitem_axis)
indexing.py:1449(_getitem_axis)                                        ->       2    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.007  indexing.py:88(_get_loc)
                                                                                2    0.000    0.000  indexing.py:159(_convert_scalar_indexer)
                                                                                2    0.000    0.000  indexing.py:1387(_is_valid_integer)
                                                                                2    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {pandas.lib.is_integer}
common.py:2443(_coerce_to_dtype)                                       ->    1056    0.003    0.005  common.py:2569(is_categorical_dtype)
common.py:2440(is_datetimelike)                                        ->       3    0.000    0.000  series.py:288(dtype)
                                                                             1060    0.001    0.003  {isinstance}
indexing.py:88(_get_loc)                                               ->       2    0.007    0.007  series.py:478(_ixs)
series.py:478(_ixs)                                                    ->       2    0.000    0.000  series.py:308(values)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {pandas.index.get_value_at}
nanops.py:210(_view_if_needed)                                         ->    1054    0.001    0.006  common.py:2526(is_datetime_or_timedelta_dtype)
internals.py:1495(set)                                                 ->
{method 'ravel' of 'numpy.ndarray' objects}                            ->
internals.py:3477(values)                                              ->    1686    0.002    0.003  internals.py:3394(_values)
                                                                             1686    0.001    0.001  {method 'view' of 'numpy.ndarray' objects}
indexing.py:1695(maybe_convert_indices)                                ->       6    0.000    0.000  {isinstance}
                                                                               12    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
series.py:288(dtype)                                                   ->    2225    0.002    0.004  internals.py:3453(dtype)
index.py:3434(equals)                                                  ->       8    0.000    0.004  common.py:407(array_equivalent)
                                                                              545    0.001    0.001  index.py:218(is_)
                                                                               16    0.000    0.000  {pandas.lib.values_from_object}
common.py:2526(is_datetime_or_timedelta_dtype)                         ->    1056    0.002    0.004  common.py:2461(_get_dtype_type)
                                                                             1056    0.000    0.000  {issubclass}
coo.py:116(__init__)                                                   ->       2    0.000    0.000  base.py:71(set_shape)
                                                                                2    0.000    0.000  base.py:93(get_shape)
                                                                                2    0.000    0.004  coo.py:241(_check)
                                                                                2    0.000    0.000  data.py:25(__init__)
                                                                                2    0.000    0.000  sputils.py:132(get_index_dtype)
                                                                                2    0.000    0.000  sputils.py:205(isshape)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {max}
                                                                                4    0.001    0.001  {method 'astype' of 'numpy.ndarray' objects}
                                                                                6    0.000    0.000  {numpy.core.multiarray.array}
qc.py:378(_validate_val_cols)                                          ->      42    0.000    0.002  frame.py:1774(__getitem__)
                                                                               42    0.000    0.000  generic.py:2135(__getattr__)
                                                                                1    0.000    0.000  qc.py:115(get_cols_from_df)
                                                                               21    0.000    0.000  series.py:308(values)
                                                                               21    0.000    0.000  series.py:391(__array__)
                                                                               21    0.000    0.001  series.py:397(__array_wrap__)
                                                                               21    0.000    0.000  series.py:404(__array_prepare__)
                                                                               21    0.000    0.001  {all}
groupby.py:3251(_wrap_agged_blocks)                                    ->       1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.005  generic.py:2430(convert_objects)
                                                                                1    0.000    0.000  groupby.py:3269(_reindex_output)
                                                                                1    0.000    0.000  internals.py:2163(__init__)
internals.py:141(mgr_locs)                                             ->       3    0.000    0.000  numeric.py:588(require)
                                                                             1698    0.001    0.001  {isinstance}
generic.py:2430(convert_objects)                                       ->       1    0.000    0.000  frame.py:189(_constructor)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.000  generic.py:2118(__finalize__)
                                                                                1    0.000    0.005  internals.py:2506(convert)
internals.py:2506(convert)                                             ->       1    0.000    0.005  internals.py:2396(apply)
{sum}                                                                  ->       3    0.000    0.000  common.py:2194(<genexpr>)
                                                                               35    0.000    0.000  internals.py:2386(<genexpr>)
internals.py:3394(_values)                                             ->    3911    0.002    0.002  internals.py:3390(_block)
internals.py:422(convert)                                              ->       1    0.000    0.005  internals.py:504(copy)
index.py:204(_simple_new)                                              ->     569    0.001    0.001  __init__.py:124(iteritems)
                                                                              569    0.001    0.001  index.py:237(_reset_identity)
                                                                              569    0.000    0.000  {built-in method __new__ of type object at 0x7f1ec966bbc0}
                                                                                7    0.000    0.000  {setattr}
generic.py:90(__init__)                                                ->
generic.py:107(_validate_dtype)                                        ->     528    0.002    0.003  common.py:2443(_coerce_to_dtype)
strings.py:1077(_wrap_result)                                          ->      27    0.000    0.004  series.py:119(__init__)
                                                                               27    0.000    0.000  {getattr}
                                                                               27    0.000    0.000  {hasattr}
                                                                               27    0.000    0.000  {isinstance}
                                                                               27    0.000    0.000  {method 'get' of 'dict' objects}
{issubclass}                                                           ->     5/1    0.000    0.000  abc.py:148(__subclasscheck__)
nanops.py:206(_na_ok_dtype)                                            ->    1054    0.002    0.003  common.py:2501(is_int_or_datetime_dtype)
internals.py:3453(dtype)                                               ->    2225    0.001    0.002  internals.py:3394(_values)
{any}                                                                  ->       2    0.000    0.000  groupby.py:2097(<genexpr>)
                                                                                2    0.000    0.000  groupby.py:2098(<genexpr>)
                                                                             1579    0.002    0.003  nanops.py:41(<genexpr>)
numeric.py:2328(array_equal)                                           ->      30    0.000    0.000  numeric.py:394(asarray)
                                                                               10    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
coo.py:241(_check)                                                     ->       6    0.000    0.000  base.py:93(get_shape)
                                                                                2    0.000    0.000  coo.py:208(getnnz)
                                                                                4    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  sputils.py:102(to_native)
                                                                                2    0.000    0.000  sputils.py:132(get_index_dtype)
                                                                                2    0.000    0.000  {max}
                                                                                4    0.000    0.002  {method 'max' of 'numpy.ndarray' objects}
                                                                                4    0.000    0.002  {method 'min' of 'numpy.ndarray' objects}
frame.py:2133(_setitem_array)                                          ->       1    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.000  frame.py:1774(__getitem__)
                                                                                2    0.000    0.003  frame.py:2114(__setitem__)
                                                                                1    0.000    0.000  index.py:1001(__iter__)
                                                                                1    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
nanops.py:41(<genexpr>)                                                ->    1053    0.001    0.002  nanops.py:33(check)
generic.py:292(_get_axis_number)                                       ->    1066    0.000    0.000  {method 'get' of 'dict' objects}
                                                                             1066    0.000    0.000  {pandas.lib.is_integer}
common.py:2501(is_int_or_datetime_dtype)                               ->    1054    0.001    0.001  common.py:2461(_get_dtype_type)
                                                                             1582    0.000    0.000  {issubclass}
index.py:327(_get_attributes_dict)                                     ->     539    0.000    0.000  {getattr}
generic.py:2394(astype)                                                ->       1    0.000    0.000  frame.py:189(_constructor)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.000  generic.py:2118(__finalize__)
                                                                                1    0.000    0.003  internals.py:2503(astype)
{pandas.algos.ensure_float64}                                          ->
common.py:1949(_possibly_castable)                                     ->
internals.py:2503(astype)                                              ->       1    0.000    0.003  internals.py:2396(apply)
series.py:391(__array__)                                               ->     549    0.000    0.003  series.py:319(get_values)
common.py:2507(is_datetime64_dtype)                                    ->    1590    0.001    0.001  common.py:2461(_get_dtype_type)
                                                                             1590    0.000    0.000  {issubclass}
internals.py:371(astype)                                               ->       1    0.000    0.003  internals.py:375(_astype)
internals.py:375(_astype)                                              ->       1    0.000    0.000  internals.py:97(is_categorical_astype)
                                                                                1    0.000    0.000  internals.py:228(dtype)
                                                                                1    0.000    0.003  internals.py:504(copy)
nanops.py:216(_wrap_results)                                           ->     526    0.001    0.001  common.py:2507(is_datetime64_dtype)
                                                                              526    0.000    0.001  common.py:2516(is_timedelta64_dtype)
{method 'fill' of 'numpy.ndarray' objects}                             ->
common.py:2547(is_float_dtype)                                         ->    1055    0.001    0.001  common.py:2461(_get_dtype_type)
                                                                             1055    0.000    0.000  {issubclass}
internals.py:2163(__init__)                                            ->      40    0.000    0.000  index.py:5677(_ensure_index)
                                                                               26    0.000    0.000  internals.py:2208(ndim)
                                                                               20    0.001    0.002  internals.py:2258(_rebuild_blknos_and_blklocs)
                                                                               15    0.000    0.000  internals.py:2384(_verify_integrity)
                                                                               20    0.000    0.000  internals.py:2568(_consolidate_check)
internals.py:262(set)                                                  ->
index.py:242(__len__)                                                  ->    3016    0.000    0.000  {len}
common.py:2495(is_integer_dtype)                                       ->    1063    0.000    0.001  common.py:2461(_get_dtype_type)
                                                                             1593    0.000    0.000  {issubclass}
frame.py:2319(reindexer)                                               ->       3    0.000    0.000  index.py:3434(equals)
                                                                                3    0.000    0.000  series.py:308(values)
                                                                                3    0.002    0.002  {method 'copy' of 'numpy.ndarray' objects}
compressed.py:938(toarray)                                             ->       1    0.000    0.001  compressed.py:915(tocoo)
                                                                                1    0.000    0.001  coo.py:272(toarray)
nanops.py:33(check)                                                    ->    1053    0.001    0.001  {hasattr}
                                                                              526    0.000    0.000  {issubclass}
{method 'nonzero' of 'numpy.ndarray' objects}                          ->
{method 'max' of 'numpy.ndarray' objects}                              ->       4    0.000    0.002  _methods.py:25(_amax)
_methods.py:25(_amax)                                                  ->       4    0.002    0.002  {method 'reduce' of 'numpy.ufunc' objects}
{method 'min' of 'numpy.ndarray' objects}                              ->       4    0.000    0.002  _methods.py:28(_amin)
_methods.py:28(_amin)                                                  ->       4    0.002    0.002  {method 'reduce' of 'numpy.ufunc' objects}
{pandas.lib.isscalar}                                                  ->
internals.py:2844(get)                                                 ->      35    0.000    0.000  common.py:212(isnull)
                                                                               35    0.000    0.000  index.py:1553(get_loc)
                                                                               70    0.000    0.000  internals.py:2279(_get_items)
                                                                               35    0.000    0.001  internals.py:2872(iget)
common.py:368(notnull)                                                 ->       1    0.000    0.001  common.py:212(isnull)
                                                                                1    0.000    0.000  numeric.py:1910(isscalar)
common.py:2516(is_timedelta64_dtype)                                   ->    1060    0.000    0.001  common.py:2461(_get_dtype_type)
                                                                             1060    0.000    0.000  {issubclass}
generic.py:2118(__finalize__)                                          ->     548    0.000    0.000  {getattr}
                                                                              562    0.000    0.000  {isinstance}
internals.py:2258(_rebuild_blknos_and_blklocs)                         ->      26    0.000    0.000  internals.py:119(mgr_locs)
                                                                               40    0.000    0.000  internals.py:2204(shape)
                                                                               26    0.000    0.000  {len}
                                                                               20    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
                                                                               40    0.000    0.000  {method 'fill' of 'numpy.ndarray' objects}
                                                                               26    0.000    0.000  {numpy.core.multiarray.arange}
                                                                               40    0.000    0.000  {numpy.core.multiarray.empty}
qc.py:88(is_col_type)                                                  ->     268    0.000    0.001  re.py:143(search)
series.py:397(__array_wrap__)                                          ->      21    0.000    0.000  generic.py:2118(__finalize__)
                                                                               21    0.000    0.001  series.py:119(__init__)
                                                                               21    0.000    0.000  series.py:237(_constructor)
series.py:277(_set_subtyp)                                             ->
qc.py:115(get_cols_from_df)                                            ->       8    0.000    0.000  index.py:1001(__iter__)
                                                                              158    0.000    0.001  qc.py:88(is_col_type)
                                                                                8    0.000    0.000  {sorted}
compressed.py:987(sum_duplicates)                                      ->       1    0.000    0.001  compressed.py:957(__get_has_canonical_format)
compressed.py:957(__get_has_canonical_format)                          ->       1    0.000    0.000  compressed.py:979(__set_has_canonical_format)
                                                                                1    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {len}
                                                                                1    0.001    0.001  {scipy.sparse._sparsetools.csr_has_canonical_format}
compressed.py:915(tocoo)                                               ->       2    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    0.001  coo.py:116(__init__)
                                                                                2    0.000    0.000  csc.py:197(_swap)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                1    0.000    0.000  {scipy.sparse._sparsetools.expandptr}
{scipy.sparse._sparsetools.csr_has_canonical_format}                   ->
frame.py:2102(_box_item_values)                                        ->      35    0.000    0.001  frame.py:2109(_box_col_values)
                                                                               35    0.000    0.000  index.py:1059(__getitem__)
                                                                               35    0.000    0.000  index.py:1553(get_loc)
generic.py:366(_info_axis)                                             ->    1052    0.000    0.000  {getattr}
{pandas.index.convert_scalar}                                          ->
utils.py:446(fix_matrix_gauge)                                         ->       1    0.000    0.000  fromnumeric.py:1631(sum)
                                                                               25    0.000    0.001  fromnumeric.py:2651(mean)
                                                                                1    0.000    0.000  fromnumeric.py:2838(var)
                                                                                2    0.000    0.000  scimath.py:176(sqrt)
                                                                                1    0.000    0.000  {range}
internals.py:2872(iget)                                                ->      35    0.000    0.000  internals.py:128(make_block_same_class)
                                                                               35    0.000    0.000  internals.py:259(iget)
                                                                               35    0.000    0.000  internals.py:3343(__init__)
                                                                               35    0.000    0.000  {len}
__init__.py:124(iteritems)                                             ->     569    0.000    0.000  {getattr}
                                                                              569    0.000    0.000  {method 'iteritems' of 'dict' objects}
common.py:2049(_possibly_infer_to_datetimelike)                        ->      34    0.000    0.000  common.py:2603(is_list_like)
                                                                               68    0.000    0.000  {len}
                                                                               34    0.000    0.000  {min}
                                                                               34    0.000    0.000  {numpy.core.multiarray.array}
                                                                               34    0.000    0.000  {pandas.lib.infer_dtype}
coo.py:272(toarray)                                                    ->       1    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    0.000  base.py:782(_process_toarray_args)
                                                                                1    0.000    0.000  coo.py:208(getnnz)
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.001    0.001  {scipy.sparse._sparsetools.coo_todense}
re.py:143(search)                                                      ->     268    0.000    0.000  re.py:230(_compile)
                                                                              268    0.000    0.000  {method 'search' of '_sre.SRE_Pattern' objects}
internals.py:3530(create_block_manager_from_blocks)                    ->       3    0.000    0.001  internals.py:2073(make_block)
                                                                                3    0.000    0.000  internals.py:2163(__init__)
                                                                                3    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                3    0.000    0.000  {isinstance}
                                                                                9    0.000    0.000  {len}
groupby.py:1363(group_info)                                            ->       1    0.000    0.001  groupby.py:1372(_get_compressed_labels)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {pandas.algos.ensure_int64}
groupby.py:1372(_get_compressed_labels)                                ->       2    0.000    0.000  groupby.py:2020(labels)
                                                                                1    0.000    0.000  groupby.py:2026(group_index)
                                                                                2    0.000    0.000  {len}
                                                                                1    0.001    0.001  {numpy.core.multiarray.arange}
common.py:2557(is_bool_dtype)                                          ->     543    0.000    0.000  common.py:2461(_get_dtype_type)
                                                                              543    0.000    0.000  {issubclass}
__init__.py:143(itervalues)                                            ->     526    0.000    0.000  {getattr}
                                                                              526    0.000    0.000  {method 'itervalues' of 'dict' objects}
{method 'all' of 'numpy.ndarray' objects}                              ->      21    0.000    0.001  _methods.py:40(_all)
_methods.py:40(_all)                                                   ->      21    0.001    0.001  {method 'reduce' of 'numpy.ufunc' objects}
defmatrix.py:244(__new__)                                              ->       8    0.000    0.000  {isinstance}
                                                                                3    0.001    0.001  {method 'copy' of 'numpy.ndarray' objects}
                                                                                3    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
{all}                                                                  ->       2    0.000    0.000  groupby.py:2103(<genexpr>)
                                                                                2    0.000    0.000  indexing.py:405(<genexpr>)
                                                                               21    0.000    0.001  series.py:1003(__iter__)
merge.py:888(get_result)                                               ->       2    0.000    0.000  generic.py:280(_from_axes)
                                                                                2    0.000    0.000  generic.py:2118(__finalize__)
                                                                                4    0.000    0.000  index.py:3434(equals)
                                                                                2    0.000    0.001  internals.py:4044(concatenate_block_managers)
                                                                                4    0.000    0.000  {method 'append' of 'list' objects}
series.py:1003(__iter__)                                               ->      23    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                               46    0.000    0.000  numerictypes.py:736(issubdtype)
                                                                               69    0.000    0.000  series.py:288(dtype)
                                                                               23    0.000    0.000  series.py:308(values)
                                                                               23    0.000    0.000  {iter}
index.py:218(is_)                                                      ->     553    0.000    0.000  {getattr}
index.py:237(_reset_identity)                                          ->
frame.py:2109(_box_col_values)                                         ->      35    0.000    0.001  series.py:227(from_array)
{scipy.sparse._sparsetools.coo_todense}                                ->
base.py:184(__get__)                                                   ->      27    0.000    0.001  base.py:507(_make_str_accessor)
internals.py:128(make_block_same_class)                                ->      45    0.000    0.001  internals.py:2073(make_block)
internals.py:4044(concatenate_block_managers)                          ->       4    0.000    0.000  internals.py:2073(make_block)
                                                                                2    0.000    0.000  internals.py:2163(__init__)
                                                                                4    0.000    0.000  internals.py:4144(concatenate_join_units)
                                                                                4    0.000    0.000  internals.py:4168(get_mgr_concatenation_plan)
                                                                                6    0.000    0.000  internals.py:4246(combine_concat_plans)
index.py:2551(drop)                                                    ->       2    0.000    0.000  common.py:2380(_index_labels_to_array)
                                                                                2    0.000    0.000  index.py:1643(get_indexer)
                                                                                1    0.000    0.000  index.py:2521(delete)
                                                                                1    0.000    0.000  numeric.py:1681(array_str)
                                                                                2    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
base.py:507(_make_str_accessor)                                        ->      27    0.000    0.000  common.py:2585(is_object_dtype)
                                                                               27    0.000    0.000  series.py:288(dtype)
                                                                               27    0.000    0.000  strings.py:1059(__init__)
                                                                               54    0.000    0.000  {isinstance}
series.py:227(from_array)                                              ->      35    0.000    0.000  series.py:119(__init__)
                                                                               35    0.000    0.000  {isinstance}
index.py:3427(is_all_dates)                                            ->
internals.py:119(mgr_locs)                                             ->
internals.py:2204(shape)                                               ->     222    0.000    0.000  internals.py:2206(<genexpr>)
function_base.py:550(asarray_chkfinite)                                ->       3    0.000    0.000  numeric.py:394(asarray)
                                                                                3    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
fromnumeric.py:2651(mean)                                              ->      25    0.000    0.001  _methods.py:53(_mean)
fromnumeric.py:1772(any)                                               ->       7    0.000    0.000  numeric.py:464(asanyarray)
                                                                                7    0.000    0.001  {method 'any' of 'numpy.ndarray' objects}
numeric.py:141(ones)                                                   ->       3    0.001    0.001  {numpy.core.multiarray.copyto}
                                                                                3    0.000    0.000  {numpy.core.multiarray.empty}
internals.py:1442(__init__)                                            ->      37    0.000    0.000  internals.py:64(__init__)
                                                                               37    0.000    0.000  {issubclass}
_methods.py:53(_mean)                                                  ->      25    0.000    0.000  _methods.py:43(_count_reduce_items)
                                                                               25    0.000    0.000  numeric.py:464(asanyarray)
                                                                               25    0.000    0.000  {hasattr}
                                                                               25    0.000    0.000  {isinstance}
                                                                               25    0.000    0.000  {issubclass}
                                                                               25    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
fromnumeric.py:889(argmax)                                             ->      25    0.000    0.000  fromnumeric.py:40(_wrapit)
internals.py:3444(index)                                               ->
index.py:1643(get_indexer)                                             ->       6    0.000    0.000  common.py:2477(is_dtype_equal)
                                                                                6    0.000    0.000  common.py:2759(_clean_reindex_fill_method)
                                                                                6    0.000    0.000  index.py:258(dtype)
                                                                                6    0.000    0.000  index.py:263(values)
                                                                                6    0.000    0.000  index.py:1783(_possibly_promote)
                                                                                6    0.000    0.000  index.py:5677(_ensure_index)
                                                                                6    0.000    0.000  {method 'get_indexer' of 'pandas.index.IndexEngine' objects}
                                                                                6    0.000    0.000  {pandas.algos.ensure_platform_int}
re.py:230(_compile)                                                    ->
merge.py:938(_get_new_axes)                                            ->       2    0.000    0.000  merge.py:932(_get_result_dim)
                                                                                2    0.000    0.000  merge.py:962(_get_comb_axis)
                                                                                2    0.000    0.000  merge.py:974(_get_concat_axis)
{built-in method __new__ of type object at 0x7f1ec966bbc0}             ->
fromnumeric.py:40(_wrapit)                                             ->      25    0.000    0.000  numeric.py:394(asarray)
                                                                               25    0.000    0.000  {getattr}
                                                                               25    0.000    0.000  {method 'argmax' of 'numpy.ndarray' objects}
common.py:2347(_asarray_tuplesafe)                                     ->       2    0.000    0.000  index.py:263(values)
                                                                               22    0.000    0.000  numeric.py:394(asarray)
                                                                               14    0.000    0.000  {hasattr}
                                                                               70    0.000    0.000  {isinstance}
                                                                               17    0.000    0.000  {issubclass}
                                                                                5    0.000    0.000  {pandas.lib.list_to_object_array}
{method 'update' of 'dict' objects}                                    ->
generic.py:1093(_set_as_cached)                                        ->      35    0.000    0.000  generic.py:2152(__setattr__)
internals.py:2384(_verify_integrity)                                   ->      20    0.000    0.000  internals.py:220(shape)
                                                                               15    0.000    0.000  internals.py:2204(shape)
                                                                               15    0.000    0.000  internals.py:2279(_get_items)
                                                                               15    0.000    0.000  {len}
                                                                               15    0.000    0.000  {sum}
qc.py:140(_validate_seqs_cols)                                         ->       1    0.000    0.000  qc.py:115(get_cols_from_df)
common.py:1105(_maybe_promote)                                         ->      14    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                8    0.000    0.000  numeric.py:394(asarray)
                                                                               14    0.000    0.000  {isinstance}
                                                                               56    0.000    0.000  {issubclass}
                                                                                8    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                                8    0.000    0.000  {pandas.lib.is_bool}
                                                                               14    0.000    0.000  {pandas.lib.is_float}
                                                                                8    0.000    0.000  {pandas.lib.is_integer}
generic.py:3108(groupby)                                               ->       1    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                1    0.000    0.000  groupby.py:1190(groupby)
{map}                                                                  ->       2    0.000    0.000  function_base.py:550(asarray_chkfinite)
                                                                                2    0.000    0.000  indexing.py:518(<lambda>)
                                                                                2    0.000    0.000  numeric.py:394(asarray)
nanops.py:130(_get_fill_value)                                         ->
base.py:485(__getattr__)                                               ->       2    0.000    0.000  csr.py:127(transpose)
{method 'any' of 'numpy.generic' objects}                              ->       1    0.000    0.000  _methods.py:37(_any)
csr.py:127(transpose)                                                  ->       2    0.000    0.000  base.py:93(get_shape)
                                                                                2    0.000    0.000  compressed.py:24(__init__)
internals.py:4144(concatenate_join_units)                              ->       4    0.000    0.000  internals.py:4068(get_empty_dtype_and_na)
                                                                                4    0.000    0.000  internals.py:4396(get_reindexed_values)
                                                                                8    0.000    0.000  {len}
                                                                                4    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
groupby.py:1190(groupby)                                               ->       1    0.000    0.000  groupby.py:364(__init__)
                                                                                2    0.000    0.000  {isinstance}
groupby.py:364(__init__)                                               ->       1    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                1    0.000    0.000  generic.py:2197(_consolidate_inplace)
                                                                                1    0.000    0.000  groupby.py:2043(_get_grouper)
                                                                                1    0.000    0.000  {isinstance}
{method 'iteritems' of 'dict' objects}                                 ->
{method 'search' of '_sre.SRE_Pattern' objects}                        ->
internals.py:2206(<genexpr>)                                           ->     148    0.000    0.000  {len}
fromnumeric.py:1852(all)                                               ->       3    0.000    0.000  numeric.py:464(asanyarray)
                                                                                3    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
{pandas.lib.is_integer}                                                ->
internals.py:4068(get_empty_dtype_and_na)                              ->       4    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                4    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                                4    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                4    0.000    0.000  internals.py:4357(dtype)
                                                                                4    0.000    0.000  internals.py:4370(is_null)
                                                                                8    0.000    0.000  {issubclass}
                                                                                8    0.000    0.000  {len}
                                                                                4    0.000    0.000  {method 'add' of 'set' objects}
groupby.py:2043(_get_grouper)                                          ->       1    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  groupby.py:1225(__init__)
                                                                                1    0.000    0.000  groupby.py:1874(__init__)
                                                                                1    0.000    0.000  groupby.py:2125(is_in_axis)
                                                                                1    0.000    0.000  groupby.py:2135(is_in_obj)
                                                                                1    0.000    0.000  {all}
                                                                                2    0.000    0.000  {any}
                                                                                5    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
frame.py:4672(isin)                                                    ->       1    0.000    0.000  common.py:2603(is_list_like)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.000  frame.py:418(shape)
                                                                                1    0.000    0.000  generic.py:2309(values)
                                                                                3    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {pandas.lib.ismember}
index.py:2531(insert)                                                  ->       2    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:258(dtype)
                                                                                1    0.000    0.000  index.py:263(values)
                                                                                1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  {numpy.core.multiarray.concatenate}
internals.py:2568(_consolidate_check)                                  ->      28    0.000    0.000  internals.py:232(ftype)
                                                                               42    0.000    0.000  {len}
index.py:3385(__new__)                                                 ->      11    0.000    0.000  index.py:204(_simple_new)
                                                                               11    0.000    0.000  index.py:312(_coerce_to_ndarray)
                                                                               22    0.000    0.000  {issubclass}
                                                                               11    0.000    0.000  {numpy.core.multiarray.array}
numeric.py:2125(identity)                                              ->       1    0.000    0.000  twodim_base.py:190(eye)
{method 'itervalues' of 'dict' objects}                                ->
merge.py:974(_get_concat_axis)                                         ->       2    0.000    0.000  merge.py:1020(_maybe_check_integrity)
                                                                                2    0.000    0.000  merge.py:1028(_concat_indexes)
base.py:782(_process_toarray_args)                                     ->       1    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    0.000  data.py:28(_get_dtype)
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
twodim_base.py:190(eye)                                                ->       1    0.000    0.000  {numpy.core.multiarray.zeros}
series.py:381(__len__)                                                 ->      35    0.000    0.000  {len}
common.py:2603(is_list_like)                                           ->      55    0.000    0.000  {hasattr}
                                                                               50    0.000    0.000  {isinstance}
numerictypes.py:736(issubdtype)                                        ->      48    0.000    0.000  numerictypes.py:668(issubclass_)
                                                                               48    0.000    0.000  {issubclass}
                                                                                2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'mro' of 'type' objects}
groupby.py:480(_set_selection_from_grouper)                            ->       1    0.000    0.000  generic.py:366(_info_axis)
                                                                                1    0.000    0.000  generic.py:386(ndim)
                                                                                1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:273(tolist)
                                                                                1    0.000    0.000  index.py:1481(difference)
                                                                                1    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {len}
merge.py:1028(_concat_indexes)                                         ->       2    0.000    0.000  index.py:1121(append)
common.py:2565(is_categorical)                                         ->      64    0.000    0.000  {isinstance}
index.py:1121(append)                                                  ->       2    0.000    0.000  index.py:109(__new__)
                                                                                2    0.000    0.000  index.py:1093(_ensure_compat_append)
                                                                                2    0.000    0.000  {numpy.core.multiarray.concatenate}
numeric.py:1681(array_str)                                             ->       1    0.000    0.000  arrayprint.py:343(array2string)
arrayprint.py:343(array2string)                                        ->       1    0.000    0.000  arrayprint.py:233(_array2string)
                                                                                1    0.000    0.000  {_functools.reduce}
series.py:237(_constructor)                                            ->
generic.py:2197(_consolidate_inplace)                                  ->      15    0.000    0.000  generic.py:2189(_protect_consolidate)
sputils.py:26(upcast)                                                  ->       1    0.000    0.000  fromnumeric.py:1852(all)
                                                                                2    0.000    0.000  numerictypes.py:736(issubdtype)
                                                                                1    0.000    0.000  numerictypes.py:970(find_common_type)
                                                                                6    0.000    0.000  {hash}
                                                                                5    0.000    0.000  {method 'get' of 'dict' objects}
                                                                               11    0.000    0.000  {numpy.core.multiarray.can_cast}
index.py:263(values)                                                   ->      82    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
arrayprint.py:233(_array2string)                                       ->       1    0.000    0.000  arrayprint.py:465(_formatArray)
                                                                                1    0.000    0.000  arrayprint.py:533(__init__)
                                                                                1    0.000    0.000  arrayprint.py:639(__init__)
                                                                                1    0.000    0.000  arrayprint.py:661(__init__)
                                                                                1    0.000    0.000  arrayprint.py:689(__init__)
                                                                                1    0.000    0.000  arrayprint.py:700(__init__)
                                                                                1    0.000    0.000  arrayprint.py:716(__init__)
                                                                                1    0.000    0.000  arrayprint.py:744(__init__)
                                                                                1    0.000    0.000  fromnumeric.py:1291(ravel)
                                                                                6    0.000    0.000  {issubclass}
                                                                                2    0.000    0.000  {len}
generic.py:2189(_protect_consolidate)                                  ->      15    0.000    0.000  generic.py:2199(f)
                                                                                2    0.000    0.000  generic.py:2227(<lambda>)
                                                                               34    0.000    0.000  {len}
merge.py:962(_get_comb_axis)                                           ->       2    0.000    0.000  index.py:5721(_get_combined_index)
internals.py:3935(_get_blkno_placements)                               ->       8    0.000    0.000  {pandas.algos.ensure_int64}
                                                                                8    0.000    0.000  {pandas.lib.get_blkno_indexers}
index.py:5721(_get_combined_index)                                     ->       2    0.000    0.000  index.py:5677(_ensure_index)
                                                                                2    0.000    0.000  index.py:5736(_get_distinct_indexes)
                                                                                2    0.000    0.000  index.py:5740(_union_indexes)
                                                                                4    0.000    0.000  {len}
generic.py:318(_get_axis)                                              ->      40    0.000    0.000  generic.py:305(_get_axis_name)
                                                                               40    0.000    0.000  {getattr}
{pandas.lib.checknull}                                                 ->
qc.py:279(_validate_mut_cols)                                          ->       1    0.000    0.000  qc.py:115(get_cols_from_df)
qc.py:439(_validate_freq_cols)                                         ->       1    0.000    0.000  qc.py:115(get_cols_from_df)
compressed.py:1044(prune)                                              ->      11    0.000    0.000  base.py:93(get_shape)
                                                                               44    0.000    0.000  compressed.py:90(getnnz)
                                                                                5    0.000    0.000  csc.py:197(_swap)
                                                                                6    0.000    0.000  csr.py:211(_swap)
                                                                               33    0.000    0.000  {len}
series.py:404(__array_prepare__)                                       ->      21    0.000    0.000  series.py:308(values)
                                                                               21    0.000    0.000  {isinstance}
internals.py:2369(__len__)                                             ->      42    0.000    0.000  internals.py:2279(_get_items)
                                                                               42    0.000    0.000  {len}
qc.py:475(_validate_info_cols)                                         ->       1    0.000    0.000  qc.py:115(get_cols_from_df)
qc.py:173(_validate_cts_cols)                                          ->       1    0.000    0.000  qc.py:115(get_cols_from_df)
indexing.py:698(_getitem_tuple)                                        ->       1    0.000    0.000  indexing.py:799(_getitem_lowerdim)
indexing.py:799(_getitem_lowerdim)                                     ->       1    0.000    0.000  base.py:318(ndim)
                                                                                1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  generic.py:386(ndim)
                                                                                1    0.000    0.000  indexing.py:139(_is_nested_tuple_indexer)
                                                                                1    0.000    0.000  indexing.py:1185(__getitem__)
                                                                                1    0.000    0.000  indexing.py:1299(_getitem_axis)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                2    0.000    0.000  indexing.py:1748(is_label_like)
                                                                                1    0.000    0.000  {getattr}
                                                                                3    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
index.py:5740(_union_indexes)                                          ->       2    0.000    0.000  index.py:1365(union)
                                                                                2    0.000    0.000  index.py:5787(_sanitize_and_check)
                                                                                2    0.000    0.000  {hasattr}
                                                                                2    0.000    0.000  {isinstance}
                                                                                8    0.000    0.000  {len}
qc.py:310(_validate_err_cols)                                          ->       1    0.000    0.000  qc.py:115(get_cols_from_df)
data.py:25(__init__)                                                   ->      14    0.000    0.000  base.py:63(__init__)
{scipy.sparse._sparsetools.expandptr}                                  ->
sputils.py:205(isshape)                                                ->       2    0.000    0.000  fromnumeric.py:2422(ndim)
                                                                                5    0.000    0.000  sputils.py:189(isintlike)
generic.py:2199(f)                                                     ->      15    0.000    0.000  generic.py:2152(__setattr__)
                                                                               15    0.000    0.000  internals.py:2821(consolidate)
common.py:2585(is_object_dtype)                                        ->      33    0.000    0.000  common.py:2461(_get_dtype_type)
                                                                               33    0.000    0.000  {issubclass}
index.py:2521(delete)                                                  ->       1    0.000    0.000  function_base.py:3427(delete)
                                                                                1    0.000    0.000  index.py:109(__new__)
internals.py:4370(is_null)                                             ->       2    0.000    0.000  common.py:212(isnull)
                                                                                2    0.000    0.000  {max}
                                                                                2    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
index.py:1365(union)                                                   ->       2    0.000    0.000  index.py:582(_assert_can_do_setop)
                                                                                2    0.000    0.000  index.py:3434(equals)
                                                                                2    0.000    0.000  index.py:5677(_ensure_index)
                                                                                2    0.000    0.000  {len}
internals.py:4168(get_mgr_concatenation_plan)                          ->       4    0.000    0.000  internals.py:119(mgr_locs)
                                                                                4    0.000    0.000  internals.py:2204(shape)
                                                                                4    0.000    0.000  internals.py:2246(_is_single_block)
                                                                                4    0.000    0.000  internals.py:4338(__init__)
                                                                                4    0.000    0.000  {method 'items' of 'dict' objects}
index.py:1001(__iter__)                                                ->      17    0.000    0.000  index.py:263(values)
                                                                               17    0.000    0.000  {iter}
function_base.py:3625(insert)                                          ->       2    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  numeric.py:1347(rollaxis)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'item' of 'numpy.ndarray' objects}
                                                                                4    0.000    0.000  {numpy.core.multiarray.array}
                                                                                2    0.000    0.000  {numpy.core.multiarray.empty}
base.py:63(__init__)                                                   ->
generic.py:305(_get_axis_name)                                         ->      42    0.000    0.000  {isinstance}
                                                                               42    0.000    0.000  {method 'get' of 'dict' objects}
fromnumeric.py:2838(var)                                               ->       1    0.000    0.000  _methods.py:77(_var)
index.py:1481(difference)                                              ->       1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:582(_assert_can_do_setop)
                                                                                1    0.000    0.000  index.py:587(_convert_can_do_setop)
                                                                                2    0.000    0.000  index.py:1001(__iter__)
                                                                                1    0.000    0.000  index.py:1233(equals)
                                                                                1    0.000    0.000  {sorted}
_methods.py:43(_count_reduce_items)                                    ->      26    0.000    0.000  {isinstance}
                                                                               25    0.000    0.000  {range}
_methods.py:77(_var)                                                   ->       1    0.000    0.000  _methods.py:43(_count_reduce_items)
                                                                                2    0.000    0.000  numeric.py:464(asanyarray)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {issubclass}
                                                                                1    0.000    0.000  {max}
                                                                                2    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
shape_base.py:60(atleast_2d)                                           ->       8    0.000    0.000  numeric.py:464(asanyarray)
                                                                               24    0.000    0.000  {len}
                                                                                8    0.000    0.000  {method 'append' of 'list' objects}
internals.py:232(ftype)                                                ->      28    0.000    0.000  internals.py:228(dtype)
{pandas.lib.maybe_convert_objects}                                     ->
scimath.py:176(sqrt)                                                   ->       2    0.000    0.000  scimath.py:97(_fix_real_lt_zero)
arrayprint.py:533(__init__)                                            ->       3    0.000    0.000  arrayprint.py:547(fillFormat)
internals.py:4450(_fast_count_smallints)                               ->       1    0.000    0.000  index_tricks.py:251(__getitem__)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'nonzero' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.lib._compiled_base.bincount}
generic.py:1046(_indexer)                                              ->       6    0.000    0.000  indexing.py:41(__init__)
                                                                                8    0.000    0.000  {getattr}
                                                                                6    0.000    0.000  {setattr}
index.py:752(is_integer)                                               ->       2    0.000    0.000  index.py:987(inferred_type)
                                                                                2    0.000    0.000  index.py:3413(inferred_type)
utils.py:110(get_column_headers)                                       ->       3    0.000    0.000  index.py:1001(__iter__)
indexing.py:159(_convert_scalar_indexer)                               ->       8    0.000    0.000  generic.py:318(_get_axis)
                                                                                8    0.000    0.000  index.py:773(_convert_scalar_indexer)
                                                                                8    0.000    0.000  {min}
common.py:1961(_possibly_convert_platform)                             ->       2    0.000    0.000  {getattr}
                                                                                2    0.000    0.000  {hasattr}
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {pandas.lib.list_to_object_array}
                                                                                2    0.000    0.000  {pandas.lib.maybe_convert_objects}
index.py:987(inferred_type)                                            ->       3    0.000    0.000  {pandas.lib.infer_dtype}
numerictypes.py:970(find_common_type)                                  ->       8    0.000    0.000  numerictypes.py:949(_can_coerce_all)
numeric.py:2428(seterr)                                                ->      10    0.000    0.000  numeric.py:2524(geterr)
                                                                               10    0.000    0.000  {numpy.core.umath.geterrobj}
                                                                               10    0.000    0.000  {numpy.core.umath.seterrobj}
indexing.py:1299(_getitem_axis)                                        ->       1    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  indexing.py:72(_get_label)
                                                                                1    0.000    0.000  indexing.py:1203(_get_slice_axis)
                                                                                2    0.000    0.000  indexing.py:1247(_has_valid_type)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                2    0.000    0.000  {isinstance}
_weakrefset.py:58(__iter__)                                            ->       6    0.000    0.000  _weakrefset.py:16(__init__)
                                                                                6    0.000    0.000  _weakrefset.py:20(__enter__)
                                                                                6    0.000    0.000  _weakrefset.py:26(__exit__)
scimath.py:97(_fix_real_lt_zero)                                       ->       2    0.000    0.000  fromnumeric.py:1772(any)
                                                                                2    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  type_check.py:207(isreal)
internals.py:259(iget)                                                 ->
arrayprint.py:547(fillFormat)                                          ->       3    0.000    0.000  numeric.py:2809(__init__)
                                                                                3    0.000    0.000  numeric.py:2813(__enter__)
                                                                                3    0.000    0.000  numeric.py:2818(__exit__)
sputils.py:102(to_native)                                              ->      13    0.000    0.000  numeric.py:394(asarray)
                                                                               13    0.000    0.000  {method 'newbyteorder' of 'numpy.dtype' objects}
common.py:2380(_index_labels_to_array)                                 ->       2    0.000    0.000  common.py:2347(_asarray_tuplesafe)
                                                                                4    0.000    0.000  {isinstance}
index.py:268(get_values)                                               ->      32    0.000    0.000  index.py:263(values)
internals.py:2694(<lambda>)                                            ->       4    0.000    0.000  index.py:331(view)
common.py:724(_get_take_nd_function)                                   ->      19    0.000    0.000  {method 'get' of 'dict' objects}
internals.py:2246(_is_single_block)                                    ->      14    0.000    0.000  internals.py:119(mgr_locs)
                                                                               11    0.000    0.000  internals.py:2208(ndim)
                                                                               18    0.000    0.000  {len}
internals.py:3721(_stack_arrays)                                       ->       2    0.000    0.000  internals.py:3724(_asarray_compat)
                                                                                2    0.000    0.000  internals.py:3730(_shape_compat)
                                                                                2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {numpy.core.multiarray.empty}
base.py:71(set_shape)                                                  ->      14    0.000    0.000  {len}
numerictypes.py:668(issubclass_)                                       ->      48    0.000    0.000  {issubclass}
{pandas.lib.list_to_object_array}                                      ->
numerictypes.py:949(_can_coerce_all)                                   ->      58    0.000    0.000  {len}
index_tricks.py:251(__getitem__)                                       ->       1    0.000    0.000  index_tricks.py:231(_retval)
                                                                                1    0.000    0.000  numerictypes.py:970(find_common_type)
                                                                                8    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                4    0.000    0.000  {method 'append' of 'list' objects}
                                                                                2    0.000    0.000  {method 'transpose' of 'numpy.ndarray' objects}
                                                                                4    0.000    0.000  {numpy.core.multiarray.array}
                                                                                1    0.000    0.000  {numpy.core.multiarray.concatenate}
                                                                                3    0.000    0.000  {range}
index.py:331(view)                                                     ->       4    0.000    0.000  index.py:343(_shallow_copy)
                                                                                4    0.000    0.000  {isinstance}
generic.py:2309(values)                                                ->       3    0.000    0.000  generic.py:2268(as_matrix)
index.py:610(set_names)                                                ->       4    0.000    0.000  common.py:2603(is_list_like)
                                                                                1    0.000    0.000  index.py:343(_shallow_copy)
                                                                                2    0.000    0.000  index.py:602(_set_names)
indexing.py:417(can_do_equal_len)                                      ->       1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  function_base.py:47(iterable)
                                                                                1    0.000    0.000  index.py:1059(__getitem__)
                                                                                3    0.000    0.000  {len}
index.py:740(is_unique)                                                ->       1    0.000    0.000  index.py:958(_engine)
                                                                                2    0.000    0.000  index.py:961(<lambda>)
generic.py:2268(as_matrix)                                             ->       3    0.000    0.000  generic.py:2197(_consolidate_inplace)
                                                                                3    0.000    0.000  internals.py:2701(as_matrix)
numeric.py:2813(__enter__)                                             ->       5    0.000    0.000  numeric.py:2428(seterr)
blas.py:182(find_best_blas_type)                                       ->       2    0.000    0.000  numerictypes.py:970(find_common_type)
                                                                                2    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                2    0.000    0.000  {method 'index' of 'list' objects}
indexing.py:1612(convert_to_index_sliceable)                           ->       4    0.000    0.000  index.py:1045(__contains__)
                                                                                4    0.000    0.000  internals.py:2279(_get_items)
                                                                               22    0.000    0.000  {isinstance}
{method 'argmax' of 'numpy.ndarray' objects}                           ->
function_base.py:3427(delete)                                          ->       1    0.000    0.000  numeric.py:141(ones)
                                                                                2    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.can_cast}
indexing.py:165(_convert_slice_indexer)                                ->       1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  index.py:817(_convert_slice_indexer)
                                                                                1    0.000    0.000  {min}
internals.py:2279(_get_items)                                          ->
fromnumeric.py:2259(prod)                                              ->       1    0.000    0.000  _methods.py:34(_prod)
{method 'get_indexer' of 'pandas.index.IndexEngine' objects}           ->
frame.py:2666(_maybe_casted_values)                                    ->       1    0.000    0.000  index.py:263(values)
                                                                                2    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {pandas.lib.maybe_convert_objects}
internals.py:2208(ndim)                                                ->      69    0.000    0.000  {len}
arrayprint.py:700(__init__)                                            ->       2    0.000    0.000  arrayprint.py:533(__init__)
compressed.py:90(getnnz)                                               ->
{min}                                                                  ->
{pandas.lib.ismember}                                                  ->
index.py:1093(_ensure_compat_append)                                   ->       4    0.000    0.000  index.py:263(values)
                                                                                2    0.000    0.000  index.py:1136(_ensure_compat_concat)
                                                                               10    0.000    0.000  {isinstance}
getlimits.py:269(max)                                                  ->
{numpy.core.multiarray.empty_like}                                     ->
shape_base.py:179(vstack)                                              ->       2    0.000    0.000  shape_base.py:60(atleast_2d)
                                                                                1    0.000    0.000  {numpy.core.multiarray.concatenate}
{pandas.lib.get_blkno_indexers}                                        ->
{pandas.algos.take_1d_int64_int64}                                     ->
index.py:1862(reindex)                                                 ->       1    0.000    0.000  index.py:1233(equals)
                                                                                1    0.000    0.000  index.py:1643(get_indexer)
                                                                                1    0.000    0.000  index.py:5677(_ensure_index)
                                                                                1    0.000    0.000  index.py:5843(_ensure_has_len)
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
numeric.py:588(require)                                                ->       3    0.000    0.000  {method 'upper' of 'str' objects}
                                                                                3    0.000    0.000  {numpy.core.multiarray.array}
index.py:1783(_possibly_promote)                                       ->       1    0.000    0.000  index.py:987(inferred_type)
defmatrix.py:290(__array_finalize__)                                   ->       1    0.000    0.000  defmatrix.py:290(__array_finalize__)
                                                                               11    0.000    0.000  {isinstance}
_methods.py:34(_prod)                                                  ->       1    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
generic.py:2203(consolidate)                                           ->       4    0.000    0.000  generic.py:2197(_consolidate_inplace)
generic.py:386(ndim)                                                   ->      20    0.000    0.000  internals.py:2208(ndim)
index.py:668(rename)                                                   ->       1    0.000    0.000  index.py:610(set_names)
numeric.py:2818(__exit__)                                              ->       5    0.000    0.000  numeric.py:2428(seterr)
internals.py:2821(consolidate)                                         ->      13    0.000    0.000  internals.py:2560(is_consolidated)
                                                                                2    0.000    0.000  internals.py:3493(is_consolidated)
indexing.py:1744(is_list_like_indexer)                                 ->      11    0.000    0.000  common.py:2603(is_list_like)
                                                                                6    0.000    0.000  {isinstance}
{sorted}                                                               ->
groupby.py:1443(_get_aggregate_function)                               ->       2    0.000    0.000  groupby.py:1447(get_func)
                                                                                2    0.000    0.000  {isinstance}
internals.py:1304(should_store)                                        ->       3    0.000    0.000  common.py:2495(is_integer_dtype)
                                                                                3    0.000    0.000  internals.py:228(dtype)
internals.py:2837(_consolidate_inplace)                                ->      25    0.000    0.000  internals.py:2560(is_consolidated)
frame.py:599(__len__)                                                  ->       9    0.000    0.000  {len}
internals.py:2560(is_consolidated)                                     ->       1    0.000    0.000  internals.py:2568(_consolidate_check)
generic.py:120(_init_mgr)                                              ->      14    0.000    0.000  {method 'items' of 'dict' objects}
groupby.py:1874(__init__)                                              ->       1    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                1    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                                1    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  groupby.py:2175(_convert_grouper)
                                                                                1    0.000    0.000  {getattr}
                                                                                6    0.000    0.000  {isinstance}
internals.py:2386(<genexpr>)                                           ->      20    0.000    0.000  internals.py:119(mgr_locs)
                                                                               20    0.000    0.000  {len}
index.py:961(<lambda>)                                                 ->      10    0.000    0.000  index.py:263(values)
generic.py:322(_get_block_manager_axis)                                ->       7    0.000    0.000  generic.py:292(_get_axis_number)
frame.py:4811(extract_index)                                           ->       2    0.000    0.000  index.py:5677(_ensure_index)
                                                                                2    0.000    0.000  index.py:5740(_union_indexes)
                                                                                2    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
internals.py:2701(as_matrix)                                           ->       3    0.000    0.000  internals.py:874(get_values)
                                                                                3    0.000    0.000  internals.py:2246(_is_single_block)
                                                                                3    0.000    0.000  {len}
indexing.py:1247(_has_valid_type)                                      ->       1    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  index.py:1045(__contains__)
                                                                                1    0.000    0.000  indexing.py:159(_convert_scalar_indexer)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                2    0.000    0.000  {isinstance}
generic.py:280(_from_axes)                                             ->       2    0.000    0.000  frame.py:200(__init__)
                                                                                2    0.000    0.000  {isinstance}
internals.py:228(dtype)                                                ->
coo.py:208(getnnz)                                                     ->      24    0.000    0.000  {len}
indexing.py:41(__init__)                                               ->       2    0.000    0.000  base.py:318(ndim)
                                                                                4    0.000    0.000  generic.py:386(ndim)
numeric.py:2524(geterr)                                                ->      10    0.000    0.000  {numpy.core.umath.geterrobj}
generic.py:661(__hash__)                                               ->       3    0.000    0.000  {method 'format' of 'str' objects}
{setattr}                                                              ->       6    0.000    0.000  generic.py:2152(__setattr__)
internals.py:4246(combine_concat_plans)                                ->       2    0.000    0.000  {len}
                                                                                4    0.000    0.000  {method 'add' of 'pandas.lib.BlockPlacement' objects}
index.py:1136(_ensure_compat_concat)                                   ->       2    0.000    0.000  {any}
                                                                                4    0.000    0.000  {isinstance}
utils.py:87(choose_dict)                                               ->       3    0.000    0.000  utils.py:99(<dictcomp>)
                                                                                3    0.000    0.000  {method 'items' of 'dict' objects}
compressed.py:115(_set_self)                                           ->       3    0.000    0.000  base.py:71(set_shape)
                                                                                3    0.000    0.000  base.py:93(get_shape)
{method 'newbyteorder' of 'numpy.dtype' objects}                       ->
generic.py:1172(_clear_item_cache)                                     ->      10    0.000    0.000  {method 'clear' of 'dict' objects}
internals.py:4461(_preprocess_slice_or_indexer)                        ->       4    0.000    0.000  numeric.py:464(asanyarray)
                                                                                8    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
sputils.py:189(isintlike)                                              ->       5    0.000    0.000  sputils.py:220(issequence)
type_check.py:207(isreal)                                              ->       2    0.000    0.000  type_check.py:141(imag)
internals.py:3730(_shape_compat)                                       ->       2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
index.py:773(_convert_scalar_indexer)                                  ->       6    0.000    0.000  {pandas.lib.is_float}
                                                                                2    0.000    0.000  {pandas.lib.is_integer}
strings.py:1059(__init__)                                              ->
index.py:817(_convert_slice_indexer)                                   ->       1    0.000    0.000  index.py:752(is_integer)
                                                                                3    0.000    0.000  index.py:851(validate)
                                                                                2    0.000    0.000  index.py:871(is_int)
                                                                                3    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {isinstance}
{pandas.algos.take_2d_axis0_float64_float64}                           ->
{iter}                                                                 ->
generic.py:2225(_is_mixed_type)                                        ->       2    0.000    0.000  generic.py:2189(_protect_consolidate)
index.py:248(__array__)                                                ->       9    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
internals.py:4396(get_reindexed_values)                                ->       4    0.000    0.000  internals.py:874(get_values)
                                                                                4    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
sputils.py:65(upcast_char)                                             ->       1    0.000    0.000  sputils.py:26(upcast)
                                                                                1    0.000    0.000  {map}
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
sputils.py:184(isscalarlike)                                           ->       2    0.000    0.000  numeric.py:1910(isscalar)
                                                                                2    0.000    0.000  sputils.py:230(isdense)
{method 'flatten' of 'numpy.ndarray' objects}                          ->
indexing.py:72(_get_label)                                             ->       1    0.000    0.000  generic.py:1368(xs)
                                                                                1    0.000    0.000  {isinstance}
groupby.py:1447(get_func)                                              ->       3    0.000    0.000  {getattr}
algorithms.py:403(_get_data_algo)                                      ->       1    0.000    0.000  common.py:2495(is_integer_dtype)
                                                                                1    0.000    0.000  common.py:2526(is_datetime_or_timedelta_dtype)
                                                                                1    0.000    0.000  common.py:2547(is_float_dtype)
                                                                                1    0.000    0.000  {pandas.algos.ensure_object}
index.py:5736(_get_distinct_indexes)                                   ->       6    0.000    0.000  index.py:5737(<genexpr>)
                                                                                2    0.000    0.000  {method 'values' of 'dict' objects}
internals.py:1542(should_store)                                        ->       1    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  {issubclass}
sputils.py:106(getdtype)                                               ->
common.py:2644(is_sequence)                                            ->       2    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {iter}
                                                                                2    0.000    0.000  {len}
{method 'astype' of 'numpy.generic' objects}                           ->
internals.py:4357(dtype)                                               ->       4    0.000    0.000  internals.py:228(dtype)
                                                                                4    0.000    0.000  internals.py:4348(needs_filling)
index.py:914(_convert_list_indexer)                                    ->       3    0.000    0.000  common.py:2495(is_integer_dtype)
sputils.py:220(issequence)                                             ->      10    0.000    0.000  {isinstance}
internals.py:220(shape)                                                ->
_weakrefset.py:20(__enter__)                                           ->       6    0.000    0.000  {method 'add' of 'set' objects}
fromnumeric.py:2422(ndim)                                              ->       2    0.000    0.000  numeric.py:394(asarray)
arrayprint.py:465(_formatArray)                                        ->       1    0.000    0.000  arrayprint.py:230(repr_format)
                                                                                1    0.000    0.000  arrayprint.py:457(_extendLine)
                                                                                2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {range}
frame.py:4863(_prep_ndarray)                                           ->       3    0.000    0.000  numeric.py:394(asarray)
                                                                                3    0.000    0.000  {isinstance}
frame.py:418(shape)                                                    ->       8    0.000    0.000  {len}
index.py:602(_set_names)                                               ->       1    0.000    0.000  base.py:218(__getitem__)
                                                                                2    0.000    0.000  {len}
internals.py:3724(_asarray_compat)                                     ->       2    0.000    0.000  series.py:308(values)
                                                                                2    0.000    0.000  {isinstance}
arrayprint.py:639(__init__)                                            ->       2    0.000    0.000  {len}
                                                                                1    0.000    0.000  {max}
                                                                                2    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
indexing.py:1387(_is_valid_integer)                                    ->       2    0.000    0.000  generic.py:318(_get_axis)
                                                                                2    0.000    0.000  {len}
fromnumeric.py:694(sort)                                               ->       1    0.000    0.000  numeric.py:464(asanyarray)
                                                                                1    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'sort' of 'numpy.ndarray' objects}
frame.py:5092(_homogenize)                                             ->       2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
generic.py:1368(xs)                                                    ->       1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                1    0.000    0.000  generic.py:318(_get_axis)
_weakrefset.py:36(__init__)                                            ->
_weakrefset.py:26(__exit__)                                            ->       6    0.000    0.000  _weakrefset.py:52(_commit_removals)
                                                                                6    0.000    0.000  {method 'remove' of 'set' objects}
index.py:312(_coerce_to_ndarray)                                       ->      11    0.000    0.000  {isinstance}
common.py:2477(is_dtype_equal)                                         ->      12    0.000    0.000  common.py:2461(_get_dtype_type)
generic.py:1199(_set_is_copy)                                          ->       3    0.000    0.000  generic.py:2152(__setattr__)
frame.py:2164(_ensure_valid_index)                                     ->       5    0.000    0.000  {len}
indexing.py:139(_is_nested_tuple_indexer)                              ->       1    0.000    0.000  frame.py:414(axes)
                                                                                1    0.000    0.000  {any}
                                                                                2    0.000    0.000  {isinstance}
_weakrefset.py:70(__contains__)                                        ->
{method 'format' of 'str' objects}                                     ->
index.py:1245(identical)                                               ->       1    0.000    0.000  index.py:1233(equals)
csr.py:211(_swap)                                                      ->
index.py:582(_assert_can_do_setop)                                     ->       3    0.000    0.000  common.py:2603(is_list_like)
internals.py:115(fill_value)                                           ->
{numpy.core.multiarray.result_type}                                    ->
numeric.py:2809(__init__)                                              ->       5    0.000    0.000  {method 'pop' of 'dict' objects}
{pandas.lib.get_reverse_indexer}                                       ->
generic.py:2227(<lambda>)                                              ->       2    0.000    0.000  internals.py:2573(is_mixed_type)
series.py:2575(_sanitize_index)                                        ->       6    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
{numpy.core.umath.seterrobj}                                           ->
ridge.py:346(__init__)                                                 ->
groupby.py:2175(_convert_grouper)                                      ->       1    0.000    0.000  index.py:3434(equals)
                                                                                1    0.000    0.000  series.py:308(values)
                                                                                2    0.000    0.000  {isinstance}
{method 'mro' of 'type' objects}                                       ->
{pandas.algos.ensure_int64}                                            ->
{method 'to_array' of 'pandas.hashtable.ObjectVector' objects}         ->
common.py:2759(_clean_reindex_fill_method)                             ->       7    0.000    0.000  common.py:2738(_clean_fill_method)
base.py:218(__getitem__)                                               ->       1    0.000    0.000  {function __getitem__ at 0x7f1eafb57c08}
                                                                                1    0.000    0.000  {isinstance}
index.py:5787(_sanitize_and_check)                                     ->       2    0.000    0.000  {len}
{method 'items' of 'dict' objects}                                     ->
utils.py:148(is_seq_valid)                                             ->       1    0.000    0.000  {method 'issubset' of 'set' objects}
                                                                                1    0.000    0.000  {method 'keys' of 'dict' objects}
defmatrix.py:66(asmatrix)                                              ->       2    0.000    0.000  defmatrix.py:244(__new__)
csc.py:197(_swap)                                                      ->
{method 'transpose' of 'numpy.ndarray' objects}                        ->       1    0.000    0.000  defmatrix.py:290(__array_finalize__)
internals.py:3691(<lambda>)                                            ->       2    0.000    0.000  series.py:288(dtype)
generic.py:1794(_needs_reindex_multi)                                  ->       1    0.000    0.000  common.py:2193(_count_not_none)
                                                                                1    0.000    0.000  {method 'values' of 'dict' objects}
_weakrefset.py:16(__init__)                                            ->
generic.py:245(_construct_axes_from_arguments)                         ->       2    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                2    0.000    0.000  {method 'pop' of 'dict' objects}
frame.py:189(_constructor)                                             ->
internals.py:2573(is_mixed_type)                                       ->       2    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                2    0.000    0.000  {len}
common.py:2185(_try_sort)                                              ->       2    0.000    0.000  {sorted}
common.py:2541(is_numeric_dtype)                                       ->       1    0.000    0.000  common.py:2461(_get_dtype_type)
                                                                                2    0.000    0.000  {issubclass}
utils.py:99(<dictcomp>)                                                ->
internals.py:874(get_values)                                           ->
{pandas.lib.array_equivalent_object}                                   ->
{pandas.algos.ensure_platform_int}                                     ->
{method 'sort' of 'numpy.ndarray' objects}                             ->
data.py:28(_get_dtype)                                                 ->
groupby.py:2135(is_in_obj)                                             ->       1    0.000    0.000  {id}
internals.py:97(is_categorical_astype)                                 ->       1    0.000    0.000  common.py:2569(is_categorical_dtype)
groupby.py:2103(<genexpr>)                                             ->       1    0.000    0.000  index.py:1045(__contains__)
index.py:258(dtype)                                                    ->
learn_model.py:181(<dictcomp>)                                        ->      21    0.000    0.000  {len}
frame.py:414(axes)                                                     ->
{method 'swapaxes' of 'numpy.ndarray' objects}                         ->
indexing.py:1748(is_label_like)                                        ->       1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                2    0.000    0.000  {isinstance}
_weakrefset.py:83(add)                                                 ->       6    0.000    0.000  {method 'add' of 'set' objects}
indexing.py:1584(length_of_indexer)                                    ->       1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
internals.py:2973(value_getitem)                                       ->
index.py:273(tolist)                                                   ->       1    0.000    0.000  index.py:263(values)
compressed.py:979(__set_has_canonical_format)                          ->       1    0.000    0.000  compressed.py:1019(__set_sorted)
defmatrix.py:928(getT)                                                 ->       1    0.000    0.000  {method 'transpose' of 'numpy.ndarray' objects}
type_check.py:141(imag)                                                ->       2    0.000    0.000  numeric.py:464(asanyarray)
internals.py:4348(needs_filling)                                       ->       4    0.000    0.000  {method 'values' of 'dict' objects}
common.py:2193(_count_not_none)                                        ->       1    0.000    0.000  {sum}
qc.py:408(_validate_mean_cols)                                         ->       1    0.000    0.000  index.py:1045(__contains__)
arrayprint.py:716(__init__)                                            ->
merge.py:932(_get_result_dim)                                          ->       2    0.000    0.000  generic.py:386(ndim)
arrayprint.py:457(_extendLine)                                         ->       2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'rstrip' of 'str' objects}
qc.py:246(_validate_bin_cols)                                          ->       1    0.000    0.000  index.py:1045(__contains__)
internals.py:4338(__init__)                                            ->
indexing.py:405(<genexpr>)                                             ->       1    0.000    0.000  common.py:2607(is_null_slice)
groupby.py:2097(<genexpr>)                                             ->       1    0.000    0.000  {callable}
                                                                                1    0.000    0.000  {isinstance}
groupby.py:1225(__init__)                                              ->       1    0.000    0.000  {len}
generic.py:1227(_check_setitem_copy)                                   ->
function_base.py:47(iterable)                                          ->       1    0.000    0.000  {iter}
{numpy.core.multiarray.can_cast}                                       ->
lil.py:134(set_shape)                                                  ->       1    0.000    0.000  {len}
fromnumeric.py:495(transpose)                                          ->       1    0.000    0.000  {method 'transpose' of 'numpy.ndarray' objects}
{method 'item' of 'numpy.ndarray' objects}                             ->
{numpy.core.umath.geterrobj}                                           ->
fromnumeric.py:1291(ravel)                                             ->       1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
groupby.py:511(__getattr__)                                            ->
{method '__subclasses__' of 'type' objects}                            ->
index.py:5737(<genexpr>)                                               ->       4    0.000    0.000  {id}
{numpy.lib._compiled_base.bincount}                                    ->
{method 'clear' of 'dict' objects}                                     ->
{method 'keys' of 'dict' objects}                                      ->
_weakrefset.py:52(_commit_removals)                                    ->
groupby.py:2125(is_in_axis)                                            ->       1    0.000    0.000  groupby.py:2171(_is_label_like)
{method 'values' of 'dict' objects}                                    ->
arrayprint.py:689(__init__)                                            ->       2    0.000    0.000  arrayprint.py:661(__init__)
common.py:2607(is_null_slice)                                          ->       3    0.000    0.000  {isinstance}
numeric.py:1347(rollaxis)                                              ->
indexing.py:1731(is_nested_tuple)                                      ->       3    0.000    0.000  {isinstance}
index.py:5843(_ensure_has_len)                                         ->       1    0.000    0.000  {len}
qc.py:344(_validate_std_cols)                                          ->       1    0.000    0.000  index.py:1045(__contains__)
indexing.py:1203(_get_slice_axis)                                      ->       1    0.000    0.000  indexing.py:1753(need_slice)
{pandas.index.get_value_at}                                            ->
groupby.py:3269(_reindex_output)                                       ->       1    0.000    0.000  {len}
compressed.py:1019(__set_sorted)                                       ->
{method 'pop' of 'dict' objects}                                       ->
{method 'upper' of 'str' objects}                                      ->
groupby.py:1319(names)                                                 ->
{method 'add' of 'set' objects}                                        ->
dia.py:265(isspmatrix_dia)                                             ->       1    0.000    0.000  {isinstance}
misc.py:126(_datacopied)                                               ->
groupby.py:2098(<genexpr>)                                             ->       1    0.000    0.000  {isinstance}
index_tricks.py:231(_retval)                                           ->
index.py:3413(inferred_type)                                           ->
indexing.py:1753(need_slice)                                           ->
{id}                                                                   ->
sputils.py:230(isdense)                                                ->       2    0.000    0.000  {isinstance}
{method '__subclasshook__' of 'object' objects}                        ->
common.py:1293(<lambda>)                                               ->
index.py:587(_convert_can_do_setop)                                    ->       1    0.000    0.000  {isinstance}
{method 'rstrip' of 'str' objects}                                     ->
base.py:318(ndim)                                                      ->
groupby.py:2020(labels)                                                ->
arrayprint.py:230(repr_format)                                         ->       1    0.000    0.000  {repr}
groupby.py:2171(_is_label_like)                                        ->       1    0.000    0.000  {isinstance}
index.py:599(_get_names)                                               ->
{_functools.reduce}                                                    ->
arrayprint.py:661(__init__)                                            ->
ridge.py:179(_deprecate_dense_cholesky)                                ->
{method 'index' of 'list' objects}                                     ->
{pandas.lib.is_bool}                                                   ->
arrayprint.py:744(__init__)                                            ->
{repr}                                                                 ->
internals.py:3493(is_consolidated)                                     ->
indexing.py:518(<lambda>)                                              ->       2    0.000    0.000  {isinstance}
series.py:474(axes)                                                    ->
frame.py:4432(_get_agg_axis)                                           ->
merge.py:1020(_maybe_check_integrity)                                  ->
common.py:2738(_clean_fill_method)                                     ->
index.py:851(validate)                                                 ->
index.py:1843(_can_reindex)                                            ->
internals.py:2442(<genexpr>)                                           ->
{method 'issubset' of 'set' objects}                                   ->
{callable}                                                             ->
internals.py:467(_try_operate)                                         ->
internals.py:475(_try_coerce_result)                                   ->
index.py:871(is_int)                                                   ->
{function __getitem__ at 0x7f1eafb57c08}                               ->
common.py:2194(<genexpr>)                                              ->
indexing.py:170(_has_valid_setitem_indexer)                            ->
{method 'disable' of '_lsprof.Profiler' objects}                       ->


