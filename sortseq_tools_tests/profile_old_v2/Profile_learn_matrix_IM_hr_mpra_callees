   Ordered by: cumulative time

Function                                                               called...
                                                                           ncalls  tottime  cumtime
<string>:1(<module>)                                                   ->       1    0.126    2.132  learn_model.py:159(main)
learn_model.py:159(main)                                              ->       1    0.000    0.000  base.py:184(__get__)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                            26908    0.056    0.138  frame.py:1774(__getitem__)
                                                                                2    0.000    0.001  frame.py:2114(__setitem__)
                                                                                2    0.000    0.000  frame.py:2630(reset_index)
                                                                                1    0.000    0.000  fromnumeric.py:495(transpose)
                                                                                1    0.000    0.079  gauge_fix.py:101(fix_matrix)
                                                                                2    0.000    0.000  generic.py:1046(_indexer)
                                                                                1    0.000    0.000  generic.py:2152(__setattr__)
                                                                                1    0.000    0.000  generic.py:2394(astype)
                                                                                1    0.000    0.001  generic.py:4243(stat_func)
                                                                                1    0.000    0.002  indexing.py:113(__setitem__)
                                                                                1    0.000    0.000  indexing.py:1185(__getitem__)
                                                                                1    0.000    0.817  learn_model.py:73(MaximizeMI_memsaver)
                                                                                1    0.000    0.000  learn_model.py:181(<dictcomp>)
                                                                                1    0.000    0.001  merge.py:700(concat)
                                                                                1    0.000    0.001  ops.py:574(wrapper)
                                                                                1    0.000    0.000  qc.py:115(get_cols_from_df)
                                                                                1    0.000    0.002  qc.py:685(validate_model)
                                                                                1    0.000    0.000  series.py:119(__init__)
                                                                            26903    0.036    0.269  series.py:519(__getitem__)
                                                                                1    0.000    0.000  series.py:1003(__iter__)
                                                                                2    0.000    0.010  series.py:2020(apply)
                                                                                1    0.000    0.008  strings.py:1299(slice)
                                                                                2    0.000    0.000  utils.py:87(choose_dict)
                                                                                1    0.000    0.000  utils.py:110(get_column_headers)
                                                                                1    0.000    0.053  utils.py:134(collapse_further)
                                                                            26899    0.577    0.621  utils.py:407(seq2mat)
                                                                                1    0.000    0.002  utils.py:468(RandEmat)
                                                                               11    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'items' of 'dict' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                                3    0.000    0.000  {range}
learn_model.py:73(MaximizeMI_memsaver)                                ->       3    0.000    0.000  InstantiationDecorators.py:128(stochastic)
                                                                                3    0.000    0.137  InstantiationDecorators.py:174(instantiate_p)
                                                                                1    0.000    0.000  MCMC.py:60(__init__)
                                                                                1    0.000    0.000  MCMC.py:93(use_step_method)
                                                                                1    0.000    0.000  Model.py:829(trace)
                                                                                1    0.000    0.000  __init__.py:20(new_decorator)
                                                                                1    0.000    0.680  __init__.py:40(func_wrapper)
                                                                                1    0.000    0.000  fromnumeric.py:2651(mean)
                                                                                1    0.000    0.000  ram.py:132(__getitem__)
learn_model.py:84(emat)                                               ->       1    0.000    0.000  CommonDeterministics.py:684(new_method)
                                                                                6    0.069    0.570  EstimateMutualInfoforMImax.py:195(alt4)
                                                                                6    0.000    0.002  frame.py:2114(__setitem__)
                                                                                6    0.000    0.003  frame.py:2630(reset_index)
                                                                                6    0.000    0.022  frame.py:2881(sort)
                                                                               12    0.000    0.093  {method 'sum' of 'numpy.ndarray' objects}
__init__.py:40(func_wrapper)                                           ->       1    0.000    0.680  MCMC.py:199(sample)
                                                                                1    0.000    0.000  {open}
MCMC.py:199(sample)                                                    ->       1    0.000    0.000  MCMC.py:135(assign_step_methods)
                                                                                1    0.000    0.679  Model.py:227(sample)
                                                                                1    0.000    0.000  fromnumeric.py:2633(round_)
                                                                                1    0.000    0.000  progressbar.py:121(progress_bar)
                                                                                1    0.000    0.000  {max}
Model.py:227(sample)                                                   ->       1    0.000    0.679  MCMC.py:279(_loop)
                                                                                1    0.000    0.000  Model.py:121(seed)
                                                                                1    0.000    0.000  Model.py:254(_finalize)
                                                                                1    0.000    0.000  base.py:232(_initialize)
                                                                                1    0.000    0.000  base.py:285(connect_model)
MCMC.py:279(_loop)                                                     ->      11    0.000    0.000  Model.py:511(fget)
                                                                                1    0.000    0.000  Model.py:514(fset)
                                                                                1    0.000    0.000  Model.py:616(tally)
                                                                                1    0.000    0.000  Model.py:631(commit)
                                                                                5    0.000    0.679  StepMethods.py:485(step)
                                                                                5    0.000    0.000  progressbar.py:29(update)
StepMethods.py:485(step)                                               ->      10    0.000    0.671  StepMethods.py:307(logp_plus_loglike)
                                                                                5    0.000    0.000  StepMethods.py:478(hastings_factor)
                                                                                2    0.000    0.000  StepMethods.py:556(reject)
                                                                                5    0.005    0.008  stepper.py:23(propose)
                                                                                5    0.000    0.000  {method 'random_sample' of 'mtrand.RandomState' objects}
StepMethods.py:307(logp_plus_loglike)                                  ->      10    0.000    0.671  Node.py:25(logp_of_set)
Node.py:25(logp_of_set)                                                ->      10    0.000    0.671  PyMCObjects.py:903(get_logp)
PyMCObjects.py:903(get_logp)                                           ->      17    0.002    0.671  {method 'get' of 'pymc.LazyFunction.LazyFunction' objects}
{method 'get' of 'pymc.LazyFunction.LazyFunction' objects}             ->       5    0.000    0.000  Container.py:539(get_value)
                                                                                5    0.095    0.669  learn_model.py:84(emat)
utils.py:407(seq2mat)                                                  ->   53798    0.005    0.005  {len}
                                                                            26899    0.038    0.038  {numpy.core.multiarray.zeros}
EstimateMutualInfoforMImax.py:195(alt4)                                ->       6    0.001    0.001  filters.py:180(gaussian_filter1d)
                                                                             4023    0.011    0.132  frame.py:556(iterrows)
                                                                               12    0.000    0.004  frame.py:1774(__getitem__)
                                                                                6    0.000    0.002  frame.py:2114(__setitem__)
                                                                                6    0.000    0.012  frame.py:2881(sort)
                                                                                6    0.000    0.001  fromnumeric.py:2737(std)
                                                                                6    0.000    0.001  generic.py:2394(astype)
                                                                                6    0.000    0.007  generic.py:2414(copy)
                                                                                6    0.000    0.003  generic.py:3108(groupby)
                                                                             4029    0.006    0.297  generic.py:4243(stat_func)
                                                                                6    0.000    0.023  groupby.py:2634(aggregate)
                                                                                6    0.000    0.003  info.py:15(mutualinfo)
                                                                             4023    0.003    0.012  series.py:308(values)
                                                                                6    0.000    0.000  utils.py:110(get_column_headers)
                                                                               12    0.000    0.000  {len}
                                                                             3000    0.003    0.003  {method 'copy' of 'numpy.ndarray' objects}
                                                                               12    0.000    0.000  {numpy.core.multiarray.zeros}
generic.py:4243(stat_func)                                             ->       7    0.000    0.002  frame.py:4299(_reduce)
                                                                             4023    0.011    0.290  series.py:2068(_reduce)
series.py:2068(_reduce)                                                ->    4024    0.005    0.006  generic.py:292(_get_axis_number)
                                                                             4023    0.010    0.260  nanops.py:38(_f)
                                                                                1    0.000    0.000  nanops.py:233(nanany)
                                                                             4024    0.002    0.012  series.py:308(values)
                                                                             4024    0.001    0.001  {isinstance}
series.py:519(__getitem__)                                             ->   26903    0.030    0.201  index.py:1582(get_value)
                                                                            26903    0.021    0.032  numeric.py:1910(isscalar)
nanops.py:38(_f)                                                       ->    4030    0.003    0.004  __init__.py:143(itervalues)
                                                                             4030    0.008    0.227  nanops.py:63(f)
                                                                             4030    0.002    0.020  {any}
nanops.py:63(f)                                                        ->    4030    0.010    0.218  nanops.py:243(nansum)
                                                                             4030    0.001    0.001  {len}
nanops.py:243(nansum)                                                  ->    4030    0.002    0.005  common.py:2547(is_float_dtype)
                                                                             4030    0.018    0.137  nanops.py:153(_get_values)
                                                                             4030    0.003    0.015  nanops.py:216(_wrap_results)
                                                                             4030    0.008    0.025  nanops.py:591(_maybe_null_out)
                                                                             4030    0.003    0.026  {method 'sum' of 'numpy.ndarray' objects}
index.py:1582(get_value)                                               ->       2    0.000    0.000  index.py:958(_engine)
                                                                            26903    0.033    0.033  {method 'get_value' of 'pandas.index.IndexEngine' objects}
                                                                            26903    0.004    0.004  {pandas.lib.is_float}
                                                                            53806    0.036    0.134  {pandas.lib.values_from_object}
frame.py:1774(__getitem__)                                             ->   26950    0.021    0.042  frame.py:1799(_getitem_column)
                                                                                9    0.000    0.006  frame.py:1816(_getitem_array)
                                                                            26959    0.025    0.028  index.py:1045(__contains__)
                                                                                9    0.000    0.000  indexing.py:1612(convert_to_index_sliceable)
                                                                            26968    0.013    0.013  {isinstance}
{pandas.lib.values_from_object}                                        ->      68    0.000    0.000  index.py:268(get_values)
                                                                            26905    0.012    0.098  series.py:319(get_values)
{method 'sum' of 'numpy.ndarray' objects}                              ->    8120    0.004    0.133  _methods.py:31(_sum)
nanops.py:153(_get_values)                                             ->    4031    0.002    0.061  common.py:212(isnull)
                                                                                1    0.000    0.000  common.py:1169(_maybe_upcast_putmask)
                                                                             4031    0.002    0.005  common.py:2495(is_integer_dtype)
                                                                             4029    0.002    0.005  common.py:2547(is_float_dtype)
                                                                             4030    0.003    0.005  common.py:2557(is_bool_dtype)
                                                                             4031    0.001    0.001  nanops.py:130(_get_fill_value)
                                                                             4031    0.002    0.011  nanops.py:206(_na_ok_dtype)
                                                                             4031    0.002    0.016  nanops.py:210(_view_if_needed)
                                                                             4031    0.005    0.005  {method 'copy' of 'numpy.ndarray' objects}
                                                                             4030    0.006    0.006  {numpy.core.multiarray.putmask}
                                                                             4031    0.003    0.003  {pandas.lib.values_from_object}
InstantiationDecorators.py:174(instantiate_p)                          ->       3    0.000    0.000  InstantiationDecorators.py:46(_extract)
                                                                                3    0.000    0.136  PyMCObjects.py:655(__init__)
PyMCObjects.py:655(__init__)                                           ->       3    0.000    0.136  Node.py:210(__init__)
                                                                                3    0.000    0.000  PyMCObjects.py:903(get_logp)
                                                                                6    0.000    0.000  fromnumeric.py:1462(shape)
                                                                                2    0.000    0.000  numeric.py:464(asanyarray)
                                                                                6    0.000    0.000  {isinstance}
Node.py:210(__init__)                                                  ->       3    0.000    0.136  Node.py:112(__init__)
Node.py:112(__init__)                                                  ->       3    0.000    0.136  Node.py:135(_set_parents)
                                                                                3    0.000    0.000  {isinstance}
Node.py:135(_set_parents)                                              ->       3    0.000    0.000  PyMCObjects.py:108(__init__)
                                                                                3    0.000    0.000  PyMCObjects.py:134(attach_parents)
                                                                                3    0.000    0.136  PyMCObjects.py:780(gen_lazy_function)
PyMCObjects.py:780(gen_lazy_function)                                  ->       3    0.000    0.000  Container.py:505(__init__)
                                                                                3    0.000    0.000  Node.py:131(_get_parents)
                                                                                3    0.000    0.000  six.py:560(iteritems)
                                                                                3    0.000    0.136  {method 'force_compute' of 'pymc.LazyFunction.LazyFunction' objects}
                                                                                3    0.000    0.000  {method 'update' of 'dict' objects}
{method 'force_compute' of 'pymc.LazyFunction.LazyFunction' objects}   ->       3    0.000    0.000  Container.py:539(get_value)
                                                                                1    0.000    0.000  learn_model.py:78(sequences)
                                                                                1    0.000    0.000  learn_model.py:81(pymcdf)
                                                                                1    0.019    0.135  learn_model.py:84(emat)
_methods.py:31(_sum)                                                   ->    8160    0.129    0.129  {method 'reduce' of 'numpy.ufunc' objects}
frame.py:556(iterrows)                                                 ->       6    0.000    0.000  generic.py:2309(values)
                                                                                6    0.000    0.000  index.py:1001(__iter__)
                                                                             4017    0.025    0.121  series.py:119(__init__)
{method 'reduce' of 'numpy.ufunc' objects}                             ->
series.py:119(__init__)                                                ->       1    0.000    0.000  common.py:2144(_default_index)
                                                                                1    0.000    0.000  common.py:2603(is_list_like)
                                                                             4071    0.006    0.006  generic.py:90(__init__)
                                                                                1    0.000    0.000  generic.py:107(_validate_dtype)
                                                                             4033    0.002    0.003  index.py:5677(_ensure_index)
                                                                             4034    0.011    0.045  internals.py:3343(__init__)
                                                                             4071    0.006    0.009  series.py:257(_set_axis)
                                                                             4034    0.012    0.030  series.py:2596(_sanitize_array)
                                                                            16180    0.004    0.004  {isinstance}
                                                                                1    0.000    0.000  {len}
series.py:319(get_values)                                              ->   26911    0.035    0.086  internals.py:3481(get_values)
internals.py:3481(get_values)                                          ->   26911    0.012    0.025  internals.py:112(to_dense)
                                                                            26911    0.006    0.006  internals.py:3390(_block)
                                                                            26911    0.020    0.020  {numpy.core.multiarray.array}
gauge_fix.py:101(fix_matrix)                                           ->       1    0.000    0.031  basic.py:557(pinv)
                                                                                2    0.000    0.000  defmatrix.py:244(__new__)
                                                                                2    0.000    0.002  defmatrix.py:338(__mul__)
                                                                                1    0.000    0.000  defmatrix.py:928(getT)
                                                                                1    0.045    0.046  gauge_fix.py:6(get_Lambda_mm)
                                                                                1    0.000    0.000  {method 'flatten' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
groupby.py:105(f)                                                      ->       7    0.000    0.001  groupby.py:480(_set_selection_from_grouper)
                                                                                7    0.000    0.073  groupby.py:2559(_cython_agg_general)
groupby.py:2559(_cython_agg_general)                                   ->       7    0.000    0.071  groupby.py:2586(_cython_agg_blocks)
                                                                                7    0.000    0.002  groupby.py:3251(_wrap_agged_blocks)
groupby.py:2586(_cython_agg_blocks)                                    ->      13    0.000    0.057  groupby.py:1482(aggregate)
                                                                                7    0.000    0.009  groupby.py:3214(_get_data_to_aggregate)
                                                                               13    0.000    0.000  internals.py:119(mgr_locs)
                                                                               13    0.000    0.000  internals.py:467(_try_operate)
                                                                               13    0.000    0.003  internals.py:479(_try_coerce_and_cast_result)
                                                                               13    0.000    0.000  internals.py:2073(make_block)
                                                                                7    0.000    0.000  internals.py:2279(_get_items)
                                                                                7    0.000    0.001  internals.py:2616(get_numeric_data)
                                                                                7    0.000    0.000  {len}
                                                                               13    0.000    0.000  {method 'append' of 'list' objects}
{isinstance}                                                           ->   12274    0.006    0.015  common.py:70(_check)
common.py:212(isnull)                                                  ->    4090    0.007    0.061  common.py:233(_isnull_new)
common.py:233(_isnull_new)                                             ->    4053    0.016    0.042  common.py:303(_isnull_ndarraylike)
                                                                             8106    0.004    0.009  {isinstance}
                                                                               37    0.000    0.000  {pandas.lib.checknull}
                                                                             4090    0.003    0.003  {pandas.lib.isscalar}
groupby.py:1482(aggregate)                                             ->      26    0.000    0.000  common.py:2495(is_integer_dtype)
                                                                               13    0.000    0.000  common.py:2526(is_datetime_or_timedelta_dtype)
                                                                               13    0.000    0.000  common.py:2541(is_numeric_dtype)
                                                                               13    0.000    0.000  common.py:2557(is_bool_dtype)
                                                                                7    0.000    0.051  groupby.py:1382(ngroups)
                                                                               20    0.000    0.000  groupby.py:1443(_get_aggregate_function)
                                                                               13    0.000    0.004  groupby.py:1566(_aggregate)
                                                                                7    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                               13    0.000    0.000  {method 'fill' of 'numpy.ndarray' objects}
                                                                               13    0.000    0.000  {method 'get' of 'dict' objects}
                                                                               26    0.000    0.000  {method 'swapaxes' of 'numpy.ndarray' objects}
                                                                               13    0.000    0.000  {numpy.core.multiarray.empty}
                                                                               13    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                               13    0.001    0.001  {pandas.algos.ensure_float64}
utils.py:134(collapse_further)                                         ->       1    0.000    0.001  frame.py:2630(reset_index)
                                                                                1    0.000    0.000  generic.py:1566(drop)
                                                                                1    0.000    0.000  generic.py:3108(groupby)
                                                                                1    0.000    0.052  groupby.py:105(f)
                                                                                1    0.000    0.000  index.py:1001(__iter__)
{method 'argsort' of 'numpy.ndarray' objects}                          ->
groupby.py:1382(ngroups)                                               ->       7    0.000    0.051  groupby.py:1393(result_index)
                                                                                7    0.000    0.000  {len}
groupby.py:1393(result_index)                                          ->       7    0.000    0.000  groupby.py:1319(names)
                                                                                7    0.000    0.051  groupby.py:2026(group_index)
                                                                                7    0.000    0.000  index.py:668(rename)
                                                                                7    0.000    0.000  {len}
groupby.py:2026(group_index)                                           ->       7    0.000    0.051  groupby.py:2032(_make_labels)
groupby.py:2032(_make_labels)                                          ->       7    0.001    0.051  algorithms.py:98(factorize)
                                                                                7    0.000    0.000  index.py:109(__new__)
algorithms.py:98(factorize)                                            ->       7    0.000    0.000  algorithms.py:403(_get_data_algo)
                                                                                7    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                7    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                                7    0.000    0.000  numeric.py:394(asarray)
                                                                               14    0.000    0.000  {isinstance}
                                                                               28    0.000    0.000  {len}
                                                                                7    0.040    0.040  {method 'argsort' of 'numpy.ndarray' objects}
                                                                                6    0.003    0.003  {method 'get_labels' of 'pandas.hashtable.Float64HashTable' objects}
                                                                                1    0.006    0.006  {method 'get_labels' of 'pandas.hashtable.PyObjectHashTable' objects}
                                                                                7    0.000    0.000  {method 'put' of 'numpy.ndarray' objects}
                                                                               14    0.001    0.001  {method 'take' of 'numpy.ndarray' objects}
                                                                                6    0.000    0.000  {method 'to_array' of 'pandas.hashtable.Float64Vector' objects}
                                                                                1    0.000    0.000  {method 'to_array' of 'pandas.hashtable.ObjectVector' objects}
                                                                                7    0.000    0.000  {numpy.core.multiarray.arange}
                                                                                7    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                7    0.000    0.000  {numpy.core.multiarray.putmask}
                                                                                7    0.000    0.000  {pandas.algos.ensure_platform_int}
gauge_fix.py:6(get_Lambda_mm)                                          ->       1    0.000    0.000  defmatrix.py:244(__new__)
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                             1413    0.001    0.001  {range}
internals.py:3343(__init__)                                            ->      37    0.000    0.000  index.py:5677(_ensure_index)
                                                                             4034    0.009    0.028  internals.py:2073(make_block)
                                                                            12213    0.003    0.003  {isinstance}
                                                                             4108    0.002    0.004  {len}
common.py:303(_isnull_ndarraylike)                                     ->    4052    0.008    0.016  common.py:2440(is_datetimelike)
                                                                                1    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  series.py:119(__init__)
                                                                             4053    0.002    0.002  {getattr}
                                                                             4053    0.002    0.007  {isinstance}
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                1    0.001    0.001  {pandas.lib.isnullobj}
frame.py:1799(_getitem_column)                                         ->   26950    0.014    0.021  generic.py:1079(_get_item_cache)
                                                                               16    0.000    0.000  index.py:740(is_unique)
{numpy.core.multiarray.zeros}                                          ->
frame.py:2881(sort)                                                    ->      12    0.000    0.034  frame.py:2917(sort_index)
frame.py:2917(sort_index)                                              ->      12    0.000    0.000  common.py:2644(is_sequence)
                                                                                6    0.000    0.000  frame.py:189(_constructor)
                                                                                6    0.000    0.000  frame.py:200(__init__)
                                                                               12    0.000    0.001  frame.py:1774(__getitem__)
                                                                               12    0.000    0.000  generic.py:292(_get_axis_number)
                                                                               12    0.000    0.000  generic.py:318(_get_axis)
                                                                               12    0.000    0.000  generic.py:322(_get_block_manager_axis)
                                                                                6    0.000    0.001  generic.py:1625(_update_inplace)
                                                                                6    0.000    0.000  generic.py:2118(__finalize__)
                                                                               12    0.002    0.016  groupby.py:3696(_nargsort)
                                                                               12    0.000    0.015  internals.py:3255(take)
                                                                               12    0.000    0.000  series.py:308(values)
                                                                               24    0.000    0.000  {isinstance}
                                                                               12    0.000    0.000  {len}
{method 'get_value' of 'pandas.index.IndexEngine' objects}             ->       2    0.000    0.000  index.py:961(<lambda>)
numeric.py:1910(isscalar)                                              ->   26991    0.011    0.011  {isinstance}
basic.py:557(pinv)                                                     ->       1    0.030    0.030  basic.py:456(lstsq)
                                                                                1    0.000    0.000  function_base.py:550(asarray_chkfinite)
                                                                                1    0.000    0.000  numeric.py:2125(identity)
series.py:2596(_sanitize_array)                                        ->       1    0.000    0.000  common.py:1961(_possibly_convert_platform)
                                                                                1    0.000    0.000  common.py:1974(_possibly_cast_to_datetime)
                                                                                1    0.000    0.000  common.py:2443(_coerce_to_dtype)
                                                                                1    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                1    0.000    0.000  common.py:2547(is_float_dtype)
                                                                             4033    0.003    0.009  series.py:2611(_try_cast)
                                                                            12102    0.002    0.002  {isinstance}
                                                                             4034    0.001    0.001  {issubclass}
                                                                             8069    0.004    0.006  {len}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
basic.py:456(lstsq)                                                    ->       1    0.000    0.000  lapack.py:255(get_lapack_funcs)
                                                                                2    0.000    0.000  misc.py:126(_datacopied)
                                                                                1    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  {len}
                                                                                1    0.000    0.000  {map}
                                                                                1    0.000    0.000  {method 'astype' of 'numpy.generic' objects}
internals.py:2073(make_block)                                          ->       2    0.000    0.000  common.py:2565(is_categorical)
                                                                             4204    0.009    0.018  internals.py:64(__init__)
                                                                               33    0.000    0.000  internals.py:1442(__init__)
                                                                             4083    0.001    0.001  {isinstance}
                                                                             4203    0.001    0.001  {issubclass}
index.py:1045(__contains__)                                            ->      17    0.000    0.000  index.py:958(_engine)
                                                                               17    0.000    0.000  index.py:961(<lambda>)
                                                                            27031    0.003    0.003  {hash}
nanops.py:591(_maybe_null_out)                                         ->       7    0.000    0.000  fromnumeric.py:1772(any)
                                                                                7    0.000    0.000  {getattr}
                                                                             4030    0.002    0.018  {method 'sum' of 'numpy.ndarray' objects}
common.py:2461(_get_dtype_type)                                        ->   44970    0.008    0.008  {isinstance}
internals.py:112(to_dense)                                             ->   26911    0.013    0.013  {method 'view' of 'numpy.ndarray' objects}
series.py:308(values)                                                  ->    8092    0.006    0.019  internals.py:3477(values)
groupby.py:2634(aggregate)                                             ->       6    0.000    0.000  collections.py:38(__init__)
                                                                                6    0.000    0.022  groupby.py:105(f)
                                                                                6    0.000    0.000  groupby.py:3865(_intercept_cython)
                                                                                6    0.000    0.000  {getattr}
                                                                               18    0.000    0.000  {isinstance}
internals.py:3124(reindex_indexer)                                     ->       7    0.000    0.000  index.py:1843(_can_reindex)
                                                                               38    0.000    0.000  internals.py:115(fill_value)
                                                                               38    0.000    0.013  internals.py:845(take_nd)
                                                                               28    0.000    0.003  internals.py:2163(__init__)
                                                                               28    0.000    0.000  internals.py:2208(ndim)
                                                                               28    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                               15    0.000    0.006  internals.py:3168(_slice_take_blocks_ax0)
{numpy.core.multiarray.array}                                          ->       2    0.000    0.000  generic.py:2135(__getattr__)
                                                                               43    0.000    0.000  index.py:248(__array__)
                                                                                1    0.000    0.000  series.py:391(__array__)
generic.py:1079(_get_item_cache)                                       ->      37    0.000    0.001  frame.py:2102(_box_item_values)
                                                                               37    0.000    0.000  generic.py:1093(_set_as_cached)
                                                                               37    0.000    0.000  generic.py:2152(__setattr__)
                                                                               37    0.000    0.001  internals.py:2844(get)
                                                                            26950    0.004    0.004  {method 'get' of 'dict' objects}
{any}                                                                  ->      14    0.000    0.000  groupby.py:2097(<genexpr>)
                                                                               14    0.000    0.000  groupby.py:2098(<genexpr>)
                                                                            12097    0.006    0.018  nanops.py:41(<genexpr>)
internals.py:3477(values)                                              ->    8092    0.005    0.008  internals.py:3394(_values)
                                                                             8092    0.005    0.005  {method 'view' of 'numpy.ndarray' objects}
internals.py:3255(take)                                                ->      21    0.000    0.002  index.py:1148(take)
                                                                                9    0.000    0.000  indexing.py:1695(maybe_convert_indices)
                                                                               21    0.000    0.000  internals.py:2204(shape)
                                                                               21    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                               21    0.000    0.016  internals.py:3124(reindex_indexer)
                                                                               21    0.000    0.000  numeric.py:464(asanyarray)
                                                                               21    0.000    0.000  {isinstance}
                                                                                9    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
{method 'view' of 'numpy.ndarray' objects}                             ->       3    0.000    0.000  defmatrix.py:290(__array_finalize__)
{len}                                                                  ->      25    0.000    0.000  frame.py:599(__len__)
                                                                             8855    0.003    0.004  index.py:242(__len__)
                                                                               20    0.000    0.000  internals.py:2369(__len__)
                                                                                5    0.000    0.000  series.py:381(__len__)
internals.py:64(__init__)                                              ->    4237    0.001    0.001  internals.py:119(mgr_locs)
                                                                             4237    0.005    0.007  internals.py:141(mgr_locs)
                                                                             8474    0.002    0.002  {len}
common.py:756(take_nd)                                                 ->     108    0.000    0.000  common.py:724(_get_take_nd_function)
                                                                               68    0.001    0.001  common.py:1105(_maybe_promote)
                                                                              108    0.000    0.000  {len}
                                                                               13    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
                                                                              108    0.001    0.001  {numpy.core.multiarray.empty}
                                                                              216    0.000    0.000  {pandas.algos.ensure_int64}
                                                                               43    0.000    0.000  {pandas.algos.take_1d_int64_int64}
                                                                                6    0.000    0.000  {pandas.algos.take_2d_axis0_float64_float64}
                                                                               15    0.001    0.001  {pandas.algos.take_2d_axis0_int64_int64}
                                                                                6    0.002    0.002  {pandas.algos.take_2d_axis0_object_object}
                                                                               12    0.001    0.001  {pandas.algos.take_2d_axis1_float64_float64}
                                                                               13    0.003    0.003  {pandas.algos.take_2d_axis1_int64_int64}
                                                                               13    0.007    0.007  {pandas.algos.take_2d_axis1_object_object}
nanops.py:41(<genexpr>)                                                ->    8067    0.005    0.011  nanops.py:33(check)
internals.py:845(take_nd)                                              ->      65    0.001    0.016  common.py:756(take_nd)
                                                                               27    0.000    0.000  internals.py:115(fill_value)
                                                                               38    0.000    0.000  internals.py:119(mgr_locs)
                                                                               65    0.000    0.001  internals.py:128(make_block_same_class)
                                                                               65    0.000    0.000  internals.py:228(dtype)
                                                                               65    0.000    0.000  internals.py:874(get_values)
nanops.py:210(_view_if_needed)                                         ->    4031    0.003    0.014  common.py:2526(is_datetime_or_timedelta_dtype)
common.py:2440(is_datetimelike)                                        ->       1    0.000    0.000  series.py:288(dtype)
                                                                             4052    0.002    0.007  {isinstance}
groupby.py:3696(_nargsort)                                             ->      12    0.000    0.001  common.py:212(isnull)
                                                                               12    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                               12    0.000    0.000  fromnumeric.py:1380(nonzero)
                                                                               12    0.000    0.000  numeric.py:464(asanyarray)
                                                                               12    0.000    0.000  {len}
                                                                               12    0.012    0.012  {method 'argsort' of 'numpy.ndarray' objects}
                                                                               12    0.000    0.000  {numpy.core.multiarray.arange}
                                                                               12    0.000    0.000  {numpy.core.multiarray.concatenate}
nanops.py:216(_wrap_results)                                           ->    4030    0.003    0.007  common.py:2507(is_datetime64_dtype)
                                                                             4030    0.002    0.005  common.py:2516(is_timedelta64_dtype)
common.py:70(_check)                                                   ->   12274    0.008    0.008  {getattr}
common.py:2526(is_datetime_or_timedelta_dtype)                         ->    4045    0.005    0.010  common.py:2461(_get_dtype_type)
                                                                             4045    0.001    0.001  {issubclass}
{method 'copy' of 'numpy.ndarray' objects}                             ->       3    0.000    0.000  defmatrix.py:290(__array_finalize__)
{issubclass}                                                           ->
{getattr}                                                              ->       1    0.000    0.000  Model.py:511(fget)
                                                                                2    0.000    0.000  PyMCObjects.py:880(fget)
                                                                                2    0.000    0.000  PyMCObjects.py:1055(_get_coparents)
                                                                                2    0.000    0.000  PyMCObjects.py:1065(_get_moral_neighbors)
                                                                                2    0.000    0.000  PyMCObjects.py:1075(_get_markov_blanket)
                                                                                1    0.000    0.000  generic.py:1046(_indexer)
                                                                               12    0.000    0.000  generic.py:2135(__getattr__)
                                                                                1    0.000    0.000  series.py:308(values)
nanops.py:33(check)                                                    ->    8067    0.005    0.005  {hasattr}
                                                                             4030    0.001    0.001  {issubclass}
nanops.py:206(_na_ok_dtype)                                            ->    4031    0.004    0.009  common.py:2501(is_int_or_datetime_dtype)
series.py:2020(apply)                                                  ->       2    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                2    0.000    0.000  generic.py:2118(__finalize__)
                                                                                2    0.000    0.000  series.py:119(__init__)
                                                                                2    0.000    0.000  series.py:237(_constructor)
                                                                                4    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
                                                                                2    0.009    0.009  {pandas.lib.map_infer}
                                                                                2    0.000    0.000  {pandas.lib.values_from_object}
common.py:2547(is_float_dtype)                                         ->    8067    0.003    0.004  common.py:2461(_get_dtype_type)
                                                                             8067    0.001    0.001  {issubclass}
generic.py:1566(drop)                                                  ->       7    0.000    0.000  frame.py:414(axes)
                                                                                7    0.000    0.007  frame.py:2508(reindex)
                                                                                8    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                8    0.000    0.000  generic.py:305(_get_axis_name)
                                                                                8    0.000    0.000  generic.py:318(_get_axis)
                                                                                7    0.000    0.000  index.py:599(_get_names)
                                                                                7    0.000    0.000  index.py:610(set_names)
                                                                                1    0.000    0.000  index.py:740(is_unique)
                                                                                8    0.000    0.002  index.py:2551(drop)
internals.py:3390(_block)                                              ->
{pandas.lib.map_infer}                                                 ->
groupby.py:3214(_get_data_to_aggregate)                                ->       7    0.000    0.000  groupby.py:511(__getattr__)
                                                                                7    0.000    0.009  groupby.py:2624(_obj_with_exclusions)
groupby.py:2624(_obj_with_exclusions)                                  ->       7    0.000    0.009  generic.py:1566(drop)
                                                                                7    0.000    0.000  {len}
common.py:2501(is_int_or_datetime_dtype)                               ->    4031    0.002    0.003  common.py:2461(_get_dtype_type)
                                                                             8061    0.002    0.002  {issubclass}
series.py:2611(_try_cast)                                              ->    4033    0.005    0.005  common.py:1949(_possibly_castable)
                                                                                5    0.000    0.000  common.py:1974(_possibly_cast_to_datetime)
                                                                                5    0.000    0.000  {numpy.core.multiarray.array}
series.py:257(_set_axis)                                               ->       6    0.000    0.000  index.py:995(is_all_dates)
                                                                               48    0.000    0.000  index.py:3427(is_all_dates)
                                                                             4071    0.002    0.002  series.py:277(_set_subtyp)
internals.py:3394(_values)                                             ->    8133    0.003    0.003  internals.py:3390(_block)
strings.py:1299(slice)                                                 ->       1    0.000    0.008  strings.py:768(str_slice)
                                                                                1    0.000    0.000  strings.py:1077(_wrap_result)
strings.py:768(str_slice)                                              ->       1    0.000    0.008  strings.py:119(_na_map)
strings.py:119(_na_map)                                                ->       1    0.000    0.008  strings.py:124(_map)
strings.py:124(_map)                                                   ->       1    0.000    0.001  common.py:212(isnull)
                                                                                1    0.000    0.000  series.py:308(values)
                                                                                2    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
                                                                                1    0.005    0.007  {pandas.lib.map_infer_mask}
internals.py:2396(apply)                                               ->       7    0.000    0.000  internals.py:371(astype)
                                                                               13    0.000    0.000  internals.py:422(convert)
                                                                               25    0.000    0.003  internals.py:504(copy)
                                                                               21    0.000    0.001  internals.py:2163(__init__)
                                                                               21    0.000    0.000  internals.py:2442(<genexpr>)
                                                                               21    0.000    0.003  internals.py:2837(_consolidate_inplace)
                                                                               45    0.000    0.000  {getattr}
                                                                               45    0.000    0.000  {isinstance}
                                                                               21    0.000    0.000  {len}
                                                                               32    0.000    0.000  {method 'append' of 'list' objects}
                                                                               13    0.000    0.000  {method 'extend' of 'list' objects}
stepper.py:23(propose)                                                 ->       5    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                5    0.000    0.000  PyMCObjects.py:834(set_value)
                                                                               20    0.000    0.000  fromnumeric.py:1631(sum)
                                                                                5    0.000    0.000  numeric.py:81(zeros_like)
                                                                              435    0.000    0.002  numeric.py:141(ones)
                                                                               10    0.000    0.000  scimath.py:176(sqrt)
                                                                                5    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                                5    0.000    0.000  {method 'standard_normal' of 'mtrand.RandomState' objects}
                                                                                5    0.000    0.000  {range}
common.py:2507(is_datetime64_dtype)                                    ->    4056    0.002    0.003  common.py:2461(_get_dtype_type)
                                                                             4056    0.002    0.002  {issubclass}
{pandas.lib.map_infer_mask}                                            ->   27000    0.003    0.003  strings.py:783(<lambda>)
frame.py:2508(reindex)                                                 ->       7    0.000    0.007  generic.py:1739(reindex)
generic.py:1739(reindex)                                               ->       7    0.000    0.000  common.py:2759(_clean_reindex_fill_method)
                                                                                7    0.000    0.006  frame.py:2459(_reindex_axes)
                                                                                7    0.000    0.000  generic.py:245(_construct_axes_from_arguments)
                                                                                7    0.000    0.000  generic.py:318(_get_axis)
                                                                                7    0.000    0.000  generic.py:1794(_needs_reindex_multi)
                                                                                7    0.000    0.000  generic.py:2118(__finalize__)
                                                                                7    0.000    0.000  generic.py:2197(_consolidate_inplace)
                                                                                7    0.000    0.000  index.py:1245(identical)
                                                                                7    0.000    0.000  {all}
                                                                                7    0.000    0.000  {method 'items' of 'dict' objects}
                                                                               35    0.000    0.000  {method 'pop' of 'dict' objects}
internals.py:141(mgr_locs)                                             ->      26    0.000    0.000  numeric.py:588(require)
                                                                             4269    0.001    0.001  {isinstance}
generic.py:2414(copy)                                                  ->       7    0.000    0.000  frame.py:189(_constructor)
                                                                                7    0.000    0.000  frame.py:200(__init__)
                                                                                7    0.000    0.000  generic.py:2118(__finalize__)
                                                                                7    0.000    0.007  internals.py:2674(copy)
internals.py:2674(copy)                                                ->       7    0.000    0.006  internals.py:2396(apply)
                                                                               14    0.000    0.000  internals.py:2694(<lambda>)
{numpy.core.multiarray.putmask}                                        ->
{pandas.algos.take_2d_axis1_object_object}                             ->
frame.py:2459(_reindex_axes)                                           ->       7    0.000    0.006  frame.py:2482(_reindex_columns)
frame.py:2482(_reindex_columns)                                        ->       7    0.000    0.006  generic.py:1854(_reindex_with_indexers)
                                                                                7    0.000    0.000  index.py:1862(reindex)
internals.py:3168(_slice_take_blocks_ax0)                              ->      30    0.000    0.001  common.py:756(take_nd)
                                                                               27    0.000    0.005  internals.py:845(take_nd)
                                                                               15    0.000    0.000  internals.py:2204(shape)
                                                                               15    0.000    0.000  internals.py:2246(_is_single_block)
                                                                               42    0.000    0.000  internals.py:3935(_get_blkno_placements)
                                                                               15    0.000    0.000  internals.py:4461(_preprocess_slice_or_indexer)
                                                                               15    0.000    0.000  {len}
                                                                               27    0.000    0.000  {method 'append' of 'list' objects}
generic.py:292(_get_axis_number)                                       ->    4094    0.001    0.001  {method 'get' of 'dict' objects}
                                                                             4094    0.001    0.001  {pandas.lib.is_integer}
generic.py:90(__init__)                                                ->
generic.py:1854(_reindex_with_indexers)                                ->       7    0.000    0.000  frame.py:189(_constructor)
                                                                                7    0.000    0.000  frame.py:200(__init__)
                                                                                7    0.000    0.000  generic.py:322(_get_block_manager_axis)
                                                                                7    0.000    0.000  generic.py:2118(__finalize__)
                                                                                7    0.000    0.000  index.py:5677(_ensure_index)
                                                                                7    0.000    0.006  internals.py:3124(reindex_indexer)
                                                                                7    0.000    0.000  {method 'keys' of 'dict' objects}
                                                                                7    0.000    0.000  {pandas.algos.ensure_int64}
                                                                                7    0.000    0.000  {sorted}
frame.py:1816(_getitem_array)                                          ->       9    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                8    0.000    0.000  generic.py:1046(_indexer)
                                                                                9    0.000    0.004  generic.py:1339(take)
                                                                                1    0.000    0.000  index.py:3434(equals)
                                                                                8    0.000    0.002  indexing.py:1007(_convert_to_indexer)
                                                                                1    0.000    0.000  indexing.py:1648(check_bool_indexer)
                                                                                1    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'nonzero' of 'numpy.ndarray' objects}
internals.py:2163(__init__)                                            ->     144    0.000    0.000  index.py:5677(_ensure_index)
                                                                              164    0.000    0.000  internals.py:2208(ndim)
                                                                               72    0.002    0.004  internals.py:2258(_rebuild_blknos_and_blklocs)
                                                                               44    0.000    0.001  internals.py:2384(_verify_integrity)
                                                                               72    0.000    0.001  internals.py:2568(_consolidate_check)
{method 'get_labels' of 'pandas.hashtable.PyObjectHashTable' objects}  ->
{hasattr}                                                              ->       8    0.000    0.000  series.py:288(dtype)
common.py:1949(_possibly_castable)                                     ->
common.py:2557(is_bool_dtype)                                          ->    4084    0.002    0.002  common.py:2461(_get_dtype_type)
                                                                             4084    0.001    0.001  {issubclass}
common.py:2495(is_integer_dtype)                                       ->    4069    0.002    0.002  common.py:2461(_get_dtype_type)
                                                                             4080    0.001    0.001  {issubclass}
frame.py:2114(__setitem__)                                             ->       1    0.000    0.000  frame.py:2133(_setitem_array)
                                                                               16    0.000    0.004  frame.py:2192(_set_item)
                                                                               17    0.000    0.000  indexing.py:1612(convert_to_index_sliceable)
                                                                               33    0.000    0.000  {isinstance}
common.py:2516(is_timedelta64_dtype)                                   ->    4053    0.001    0.002  common.py:2461(_get_dtype_type)
                                                                             4053    0.001    0.001  {issubclass}
{method 'get' of 'dict' objects}                                       ->
internals.py:2837(_consolidate_inplace)                                ->      12    0.000    0.001  internals.py:2258(_rebuild_blknos_and_blklocs)
                                                                               87    0.000    0.000  internals.py:2560(is_consolidated)
                                                                               12    0.000    0.004  internals.py:3809(_consolidate)
__init__.py:143(itervalues)                                            ->    4030    0.001    0.001  {getattr}
                                                                             4030    0.001    0.001  {method 'itervalues' of 'dict' objects}
internals.py:2258(_rebuild_blknos_and_blklocs)                         ->     200    0.000    0.000  internals.py:119(mgr_locs)
                                                                              168    0.000    0.001  internals.py:2204(shape)
                                                                              200    0.000    0.000  {len}
                                                                               84    0.000    0.001  {method 'any' of 'numpy.ndarray' objects}
                                                                              168    0.000    0.000  {method 'fill' of 'numpy.ndarray' objects}
                                                                              200    0.000    0.000  {numpy.core.multiarray.arange}
                                                                              168    0.000    0.000  {numpy.core.multiarray.empty}
frame.py:2192(_set_item)                                               ->      16    0.000    0.000  frame.py:2164(_ensure_valid_index)
                                                                               16    0.000    0.001  frame.py:2315(_sanitize_column)
                                                                               16    0.000    0.003  generic.py:1195(_set_item)
                                                                               16    0.000    0.000  generic.py:1227(_check_setitem_copy)
                                                                               16    0.000    0.000  {len}
index.py:5677(_ensure_index)                                           ->      26    0.000    0.001  index.py:109(__new__)
                                                                               26    0.000    0.000  {hasattr}
                                                                             4292    0.001    0.001  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {pandas.lib.clean_index_list}
frame.py:2630(reset_index)                                             ->       7    0.000    0.003  frame.py:2213(insert)
                                                                                7    0.000    0.000  frame.py:2666(_maybe_casted_values)
                                                                                6    0.000    0.000  generic.py:702(__contains__)
                                                                                9    0.000    0.000  generic.py:2152(__setattr__)
                                                                                1    0.000    0.000  generic.py:2414(copy)
                                                                               16    0.000    0.000  {isinstance}
                                                                                9    0.000    0.000  {len}
                                                                                9    0.000    0.000  {numpy.core.multiarray.arange}
index.py:109(__new__)                                                  ->      70    0.000    0.001  common.py:2347(_asarray_tuplesafe)
                                                                               41    0.000    0.000  common.py:2557(is_bool_dtype)
                                                                              140    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                               70    0.000    0.000  index.py:204(_simple_new)
                                                                                2    0.000    0.000  index.py:258(dtype)
                                                                               10    0.000    0.000  index.py:3385(__new__)
                                                                                6    0.000    0.000  index.py:3489(__new__)
                                                                               29    0.000    0.000  numeric.py:1910(isscalar)
                                                                               29    0.000    0.000  {hasattr}
                                                                              201    0.000    0.000  {isinstance}
                                                                              259    0.000    0.000  {issubclass}
                                                                               56    0.001    0.001  {pandas.lib.infer_dtype}
                                                                               29    0.000    0.000  {sorted}
generic.py:1339(take)                                                  ->       9    0.000    0.000  frame.py:189(_constructor)
                                                                                9    0.000    0.000  frame.py:200(__init__)
                                                                               18    0.000    0.000  generic.py:318(_get_axis)
                                                                                9    0.000    0.000  generic.py:322(_get_block_manager_axis)
                                                                                8    0.000    0.000  generic.py:1199(_set_is_copy)
                                                                                9    0.000    0.000  generic.py:2118(__finalize__)
                                                                                9    0.000    0.000  generic.py:2197(_consolidate_inplace)
                                                                                8    0.000    0.000  index.py:1233(equals)
                                                                                1    0.000    0.000  index.py:3434(equals)
                                                                                9    0.000    0.003  internals.py:3255(take)
groupby.py:1566(_aggregate)                                            ->       7    0.000    0.000  groupby.py:1363(group_info)
                                                                               13    0.003    0.004  {pandas.algos.group_add_float64}
index.py:242(__len__)                                                  ->    8855    0.001    0.001  {len}
{pandas.lib.is_float}                                                  ->
{pandas.algos.group_add_float64}                                       ->      26    0.000    0.001  numeric.py:81(zeros_like)
generic.py:3108(groupby)                                               ->       7    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                7    0.000    0.004  groupby.py:1190(groupby)
internals.py:3809(_consolidate)                                        ->      48    0.000    0.000  internals.py:3815(<lambda>)
                                                                               36    0.001    0.003  internals.py:3830(_merge_blocks)
                                                                               36    0.000    0.000  {isinstance}
                                                                               36    0.000    0.000  {method 'append' of 'list' objects}
                                                                               12    0.000    0.000  {sorted}
groupby.py:1190(groupby)                                               ->       7    0.000    0.004  groupby.py:364(__init__)
                                                                               14    0.000    0.000  {isinstance}
groupby.py:364(__init__)                                               ->       7    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                7    0.000    0.002  generic.py:2197(_consolidate_inplace)
                                                                                7    0.000    0.001  groupby.py:2043(_get_grouper)
                                                                                7    0.000    0.000  {isinstance}
internals.py:3060(insert)                                              ->      14    0.000    0.000  function_base.py:3625(insert)
                                                                               14    0.000    0.000  function_base.py:3832(append)
                                                                               14    0.000    0.000  index.py:1045(__contains__)
                                                                               14    0.000    0.002  index.py:2531(insert)
                                                                               38    0.000    0.000  internals.py:119(mgr_locs)
                                                                               19    0.000    0.000  internals.py:141(mgr_locs)
                                                                               14    0.000    0.000  internals.py:2073(make_block)
                                                                               14    0.000    0.000  internals.py:2208(ndim)
                                                                               28    0.000    0.000  internals.py:2279(_get_items)
                                                                               14    0.000    0.001  internals.py:4450(_fast_count_smallints)
                                                                               14    0.000    0.000  {isinstance}
                                                                               47    0.000    0.000  {len}
                                                                               19    0.000    0.000  {method 'add' of 'pandas.lib.BlockPlacement' objects}
internals.py:3830(_merge_blocks)                                       ->      12    0.000    0.000  fromnumeric.py:803(argsort)
                                                                               24    0.000    0.000  internals.py:119(mgr_locs)
                                                                               12    0.000    0.000  internals.py:2073(make_block)
                                                                               12    0.000    0.001  internals.py:3866(_vstack)
                                                                               36    0.000    0.000  {len}
                                                                               12    0.000    0.000  {numpy.core.multiarray.concatenate}
internals.py:504(copy)                                                 ->      52    0.000    0.000  internals.py:119(mgr_locs)
                                                                               52    0.000    0.000  internals.py:2073(make_block)
                                                                               39    0.003    0.003  {method 'copy' of 'numpy.ndarray' objects}
internals.py:479(_try_coerce_and_cast_result)                          ->      13    0.000    0.003  internals.py:435(_try_cast_result)
                                                                               13    0.000    0.000  internals.py:475(_try_coerce_result)
internals.py:435(_try_cast_result)                                     ->       7    0.000    0.003  common.py:1285(_possibly_downcast_to_dtype)
                                                                               19    0.000    0.000  internals.py:228(dtype)
                                                                               12    0.000    0.000  {isinstance}
                                                                                6    0.000    0.000  {issubclass}
frame.py:2213(insert)                                                  ->       7    0.000    0.000  frame.py:2164(_ensure_valid_index)
                                                                                7    0.000    0.001  frame.py:2315(_sanitize_column)
                                                                                7    0.000    0.002  internals.py:3060(insert)
common.py:1285(_possibly_downcast_to_dtype)                            ->       7    0.000    0.000  common.py:368(notnull)
                                                                               14    0.000    0.000  common.py:1293(<lambda>)
                                                                                7    0.000    0.000  fromnumeric.py:2259(prod)
                                                                                7    0.000    0.000  numeric.py:1910(isscalar)
                                                                               14    0.001    0.002  numeric.py:2156(allclose)
                                                                               21    0.000    0.000  {isinstance}
                                                                               21    0.000    0.000  {issubclass}
                                                                                7    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
                                                                               14    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                                7    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                7    0.000    0.000  {numpy.core.multiarray.array}
{pandas.lib.isscalar}                                                  ->
generic.py:1195(_set_item)                                             ->      16    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                               16    0.000    0.003  internals.py:2943(set)
{method 'get_labels' of 'pandas.hashtable.Float64HashTable' objects}   ->
{pandas.algos.take_2d_axis1_int64_int64}                               ->
{hash}                                                                 ->       1    0.000    0.000  generic.py:661(__hash__)
internals.py:2943(set)                                                 ->      16    0.000    0.000  common.py:2565(is_categorical)
                                                                               16    0.000    0.000  index.py:1553(get_loc)
                                                                                8    0.000    0.000  internals.py:262(set)
                                                                                5    0.000    0.000  internals.py:1258(should_store)
                                                                                3    0.000    0.000  internals.py:1304(should_store)
                                                                                1    0.000    0.000  internals.py:1495(set)
                                                                                1    0.000    0.000  internals.py:1542(should_store)
                                                                               16    0.000    0.000  internals.py:2204(shape)
                                                                               16    0.000    0.000  internals.py:2208(ndim)
                                                                               23    0.000    0.000  internals.py:2279(_get_items)
                                                                                9    0.000    0.000  internals.py:2973(value_getitem)
                                                                                7    0.000    0.001  internals.py:3060(insert)
                                                                               18    0.000    0.000  internals.py:3935(_get_blkno_placements)
                                                                               25    0.000    0.000  {isinstance}
                                                                               25    0.000    0.000  {len}
                                                                                9    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
strings.py:783(<lambda>)                                               ->
info.py:15(mutualinfo)                                                 ->      18    0.000    0.001  info.py:40(entropy)
                                                                                6    0.000    0.001  info.py:293(fix_probs_2d)
                                                                               12    0.000    0.000  info.py:301(fix_probs)
                                                                                6    0.000    0.000  {abs}
                                                                               12    0.000    0.000  {method 'sum' of 'numpy.ndarray' objects}
{numpy.core.multiarray.empty}                                          ->
generic.py:2197(_consolidate_inplace)                                  ->      38    0.000    0.002  generic.py:2189(_protect_consolidate)
generic.py:2189(_protect_consolidate)                                  ->       6    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                               38    0.000    0.002  generic.py:2199(f)
                                                                                2    0.000    0.000  generic.py:2227(<lambda>)
                                                                               80    0.000    0.000  {len}
frame.py:4299(_reduce)                                                 ->       7    0.000    0.000  common.py:2585(is_object_dtype)
                                                                                7    0.000    0.002  frame.py:4302(<lambda>)
                                                                                7    0.000    0.000  frame.py:4432(_get_agg_axis)
                                                                                7    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                1    0.000    0.000  generic.py:2225(_is_mixed_type)
                                                                                7    0.000    0.000  generic.py:2309(values)
                                                                                7    0.000    0.000  series.py:119(__init__)
generic.py:2199(f)                                                     ->      38    0.000    0.000  generic.py:2152(__setattr__)
                                                                               38    0.000    0.002  internals.py:2821(consolidate)
frame.py:2315(_sanitize_column)                                        ->       2    0.000    0.000  common.py:2049(_possibly_infer_to_datetimelike)
                                                                               20    0.000    0.000  common.py:2585(is_object_dtype)
                                                                               20    0.000    0.000  common.py:2644(is_sequence)
                                                                                3    0.000    0.000  frame.py:2319(reindexer)
                                                                               23    0.000    0.000  index.py:1045(__contains__)
                                                                               23    0.000    0.000  numeric.py:394(asarray)
                                                                               20    0.000    0.000  series.py:2575(_sanitize_index)
                                                                               23    0.000    0.000  shape_base.py:60(atleast_2d)
                                                                              135    0.000    0.000  {isinstance}
                                                                               20    0.001    0.001  {method 'copy' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
internals.py:2821(consolidate)                                         ->       6    0.000    0.001  internals.py:2163(__init__)
                                                                               37    0.000    0.000  internals.py:2560(is_consolidated)
                                                                                6    0.000    0.001  internals.py:2837(_consolidate_inplace)
                                                                                1    0.000    0.000  internals.py:3493(is_consolidated)
defmatrix.py:338(__mul__)                                              ->       2    0.000    0.000  defmatrix.py:66(asmatrix)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.002    0.002  {numpy.core._dotblas.dot}
numeric.py:2156(allclose)                                              ->      28    0.000    0.000  fromnumeric.py:1772(any)
                                                                               14    0.000    0.000  fromnumeric.py:1852(all)
                                                                               14    0.000    0.000  numeric.py:2809(__init__)
                                                                               14    0.000    0.000  numeric.py:2813(__enter__)
                                                                               14    0.000    0.000  numeric.py:2818(__exit__)
                                                                               28    0.000    0.000  {abs}
                                                                               42    0.000    0.000  {numpy.core.multiarray.array}
                                                                               14    0.000    0.000  {numpy.core.multiarray.result_type}
{numpy.core._dotblas.dot}                                              ->       2    0.000    0.000  defmatrix.py:290(__array_finalize__)
qc.py:685(validate_model)                                              ->       1    0.000    0.000  frame.py:418(shape)
                                                                                2    0.000    0.000  index.py:1001(__iter__)
                                                                                1    0.000    0.000  index.py:1045(__contains__)
                                                                               10    0.000    0.000  qc.py:88(is_col_type)
                                                                                1    0.000    0.002  qc.py:122(_validate_cols)
                                                                                2    0.000    0.000  {all}
                                                                               12    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'values' of 'dict' objects}
                                                                                1    0.000    0.000  {sorted}
                                                                                2    0.000    0.000  {zip}
{pandas.algos.take_2d_axis0_object_object}                             ->
utils.py:468(RandEmat)                                                 ->       1    0.001    0.002  utils.py:446(fix_matrix_gauge)
                                                                                1    0.000    0.000  {method 'randn' of 'mtrand.RandomState' objects}
series.py:277(_set_subtyp)                                             ->
utils.py:446(fix_matrix_gauge)                                         ->       1    0.000    0.000  fromnumeric.py:1631(sum)
                                                                               87    0.000    0.001  fromnumeric.py:2651(mean)
                                                                                1    0.000    0.000  fromnumeric.py:2838(var)
                                                                                2    0.000    0.000  scimath.py:176(sqrt)
                                                                                1    0.000    0.000  {range}
index.py:2551(drop)                                                    ->       8    0.000    0.000  common.py:2380(_index_labels_to_array)
                                                                                8    0.000    0.001  index.py:1643(get_indexer)
                                                                                7    0.000    0.001  index.py:2521(delete)
                                                                                1    0.000    0.000  numeric.py:1681(array_str)
                                                                                8    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
qc.py:122(_validate_cols)                                              ->       1    0.000    0.000  qc.py:140(_validate_seqs_cols)
                                                                                1    0.000    0.000  qc.py:173(_validate_cts_cols)
                                                                                1    0.000    0.000  qc.py:212(_validate_pos_cols)
                                                                                1    0.000    0.000  qc.py:246(_validate_bin_cols)
                                                                                1    0.000    0.000  qc.py:279(_validate_mut_cols)
                                                                                1    0.000    0.000  qc.py:310(_validate_err_cols)
                                                                                1    0.000    0.000  qc.py:344(_validate_std_cols)
                                                                                1    0.000    0.001  qc.py:378(_validate_val_cols)
                                                                                1    0.000    0.000  qc.py:408(_validate_mean_cols)
                                                                                1    0.000    0.000  qc.py:439(_validate_freq_cols)
                                                                                1    0.000    0.000  qc.py:475(_validate_info_cols)
numeric.py:141(ones)                                                   ->     443    0.001    0.001  {numpy.core.multiarray.copyto}
                                                                              443    0.001    0.001  {numpy.core.multiarray.empty}
generic.py:2152(__setattr__)                                           ->      10    0.000    0.000  generic.py:412(_set_axis)
index.py:1148(take)                                                    ->      28    0.000    0.000  index.py:343(_shallow_copy)
                                                                               28    0.001    0.001  {method 'take' of 'numpy.ndarray' objects}
                                                                               28    0.000    0.000  {numpy.core.multiarray.array}
                                                                               28    0.000    0.000  {pandas.algos.ensure_platform_int}
index.py:2531(insert)                                                  ->      28    0.000    0.001  index.py:109(__new__)
                                                                                8    0.000    0.000  index.py:258(dtype)
                                                                               14    0.000    0.000  index.py:263(values)
                                                                               14    0.000    0.000  numeric.py:394(asarray)
                                                                               14    0.000    0.000  {numpy.core.multiarray.concatenate}
frame.py:4302(<lambda>)                                                ->       7    0.000    0.002  nanops.py:38(_f)
{method 'take' of 'numpy.ndarray' objects}                             ->
indexing.py:1007(_convert_to_indexer)                                  ->       8    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                8    0.000    0.000  common.py:2347(_asarray_tuplesafe)
                                                                               10    0.000    0.000  generic.py:318(_get_axis)
                                                                                6    0.000    0.000  index.py:740(is_unique)
                                                                               10    0.000    0.000  index.py:752(is_integer)
                                                                                8    0.000    0.000  index.py:914(_convert_list_indexer)
                                                                               10    0.000    0.000  index.py:1553(get_loc)
                                                                                8    0.000    0.001  index.py:1643(get_indexer)
                                                                               10    0.000    0.000  indexing.py:159(_convert_scalar_indexer)
                                                                                1    0.000    0.000  indexing.py:165(_convert_slice_indexer)
                                                                                8    0.000    0.000  indexing.py:1731(is_nested_tuple)
                                                                                8    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                               25    0.000    0.000  {isinstance}
                                                                                8    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
                                                                               10    0.000    0.000  {pandas.lib.is_integer}
                                                                                8    0.000    0.000  {pandas.lib.values_from_object}
internals.py:2204(shape)                                               ->     819    0.000    0.001  internals.py:2206(<genexpr>)
groupby.py:3251(_wrap_agged_blocks)                                    ->       7    0.000    0.000  frame.py:200(__init__)
                                                                                7    0.000    0.001  generic.py:2430(convert_objects)
                                                                                7    0.000    0.000  groupby.py:3269(_reindex_output)
                                                                                7    0.000    0.001  internals.py:2163(__init__)
{numpy.core.multiarray.concatenate}                                    ->
indexing.py:113(__setitem__)                                           ->       1    0.000    0.000  indexing.py:94(_get_setitem_indexer)
                                                                                1    0.000    0.001  indexing.py:199(_setitem_with_indexer)
frame.py:200(__init__)                                                 ->       1    0.000    0.001  frame.py:295(_init_dict)
                                                                                1    0.000    0.000  frame.py:343(_init_ndarray)
                                                                               53    0.000    0.000  generic.py:90(__init__)
                                                                               51    0.000    0.000  generic.py:120(_init_mgr)
                                                                                1    0.000    0.000  {getattr}
                                                                              110    0.000    0.000  {isinstance}
index.py:1643(get_indexer)                                             ->      23    0.000    0.000  common.py:2477(is_dtype_equal)
                                                                               23    0.000    0.000  common.py:2759(_clean_reindex_fill_method)
                                                                               23    0.000    0.000  index.py:258(dtype)
                                                                               23    0.000    0.000  index.py:263(values)
                                                                               23    0.000    0.000  index.py:1783(_possibly_promote)
                                                                               23    0.000    0.001  index.py:5677(_ensure_index)
                                                                               23    0.000    0.000  {method 'get_indexer' of 'pandas.index.IndexEngine' objects}
                                                                               23    0.000    0.000  {pandas.algos.ensure_platform_int}
internals.py:2616(get_numeric_data)                                    ->       7    0.000    0.001  internals.py:2626(combine)
                                                                                7    0.000    0.000  internals.py:2837(_consolidate_inplace)
{method 'any' of 'numpy.ndarray' objects}                              ->     189    0.000    0.001  _methods.py:37(_any)
merge.py:700(concat)                                                   ->       1    0.000    0.001  merge.py:763(__init__)
                                                                                1    0.000    0.000  merge.py:888(get_result)
filters.py:180(gaussian_filter1d)                                      ->       6    0.000    0.001  filters.py:110(correlate1d)
                                                                              480    0.000    0.000  {math.exp}
                                                                               18    0.000    0.000  {range}
internals.py:2626(combine)                                             ->      13    0.000    0.000  common.py:756(take_nd)
                                                                                7    0.000    0.000  fromnumeric.py:694(sort)
                                                                                7    0.000    0.000  index.py:1148(take)
                                                                               26    0.000    0.000  internals.py:119(mgr_locs)
                                                                               13    0.000    0.000  internals.py:141(mgr_locs)
                                                                               13    0.000    0.000  internals.py:504(copy)
                                                                                7    0.000    0.000  internals.py:2163(__init__)
                                                                                7    0.000    0.000  internals.py:2204(shape)
                                                                                7    0.000    0.000  internals.py:2279(_get_items)
                                                                                7    0.000    0.000  {len}
                                                                               13    0.000    0.000  {method 'append' of 'list' objects}
                                                                                7    0.000    0.000  {numpy.core.multiarray.concatenate}
                                                                                7    0.000    0.000  {pandas.lib.get_reverse_indexer}
internals.py:2844(get)                                                 ->      37    0.000    0.000  common.py:212(isnull)
                                                                               37    0.000    0.000  index.py:1553(get_loc)
                                                                               74    0.000    0.000  internals.py:2279(_get_items)
                                                                               37    0.000    0.001  internals.py:2872(iget)
internals.py:3866(_vstack)                                             ->      12    0.000    0.001  shape_base.py:179(vstack)
fromnumeric.py:2651(mean)                                              ->      88    0.000    0.001  _methods.py:53(_mean)
shape_base.py:179(vstack)                                              ->      24    0.000    0.000  shape_base.py:60(atleast_2d)
                                                                               12    0.001    0.001  {numpy.core.multiarray.concatenate}
indexing.py:199(_setitem_with_indexer)                                 ->       2    0.000    0.000  frame.py:414(axes)
                                                                                1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  generic.py:2225(_is_mixed_type)
                                                                                3    0.000    0.000  index.py:1059(__getitem__)
                                                                                1    0.000    0.000  indexing.py:170(_has_valid_setitem_indexer)
                                                                                1    0.000    0.001  indexing.py:397(setter)
                                                                                1    0.000    0.000  indexing.py:417(can_do_equal_len)
                                                                                1    0.000    0.000  indexing.py:510(_align_series)
                                                                                1    0.000    0.000  indexing.py:1584(length_of_indexer)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                1    0.000    0.000  series.py:474(axes)
                                                                                1    0.000    0.000  {any}
                                                                                1    0.000    0.000  {getattr}
                                                                               10    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
                                                                                1    0.000    0.000  {pandas.lib.is_integer}
info.py:40(entropy)                                                    ->      18    0.000    0.000  fromnumeric.py:1631(sum)
                                                                               18    0.000    0.001  info.py:301(fix_probs)
info.py:301(fix_probs)                                                 ->      30    0.000    0.001  info.py:272(fix_counts)
                                                                               30    0.000    0.000  {method 'sum' of 'numpy.ndarray' objects}
{numpy.core.multiarray.arange}                                         ->
groupby.py:2043(_get_grouper)                                          ->       7    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                7    0.000    0.001  frame.py:1774(__getitem__)
                                                                                7    0.000    0.000  generic.py:318(_get_axis)
                                                                                7    0.000    0.000  groupby.py:1225(__init__)
                                                                                7    0.000    0.000  groupby.py:1874(__init__)
                                                                                7    0.000    0.000  groupby.py:2125(is_in_axis)
                                                                                7    0.000    0.000  groupby.py:2135(is_in_obj)
                                                                                7    0.000    0.000  {all}
                                                                               14    0.000    0.000  {any}
                                                                               35    0.000    0.000  {isinstance}
                                                                               28    0.000    0.000  {len}
                                                                               14    0.000    0.000  {method 'append' of 'list' objects}
_methods.py:53(_mean)                                                  ->      88    0.000    0.000  _methods.py:43(_count_reduce_items)
                                                                               88    0.000    0.000  numeric.py:464(asanyarray)
                                                                               87    0.000    0.000  {hasattr}
                                                                               88    0.000    0.000  {isinstance}
                                                                               88    0.000    0.000  {issubclass}
                                                                               88    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
_methods.py:37(_any)                                                   ->     189    0.001    0.001  {method 'reduce' of 'numpy.ufunc' objects}
{pandas.algos.take_2d_axis0_int64_int64}                               ->
common.py:2347(_asarray_tuplesafe)                                     ->       1    0.000    0.000  index.py:263(values)
                                                                               72    0.000    0.000  numeric.py:394(asarray)
                                                                               41    0.000    0.000  {hasattr}
                                                                              257    0.000    0.000  {isinstance}
                                                                               56    0.000    0.000  {issubclass}
                                                                               29    0.000    0.000  {pandas.lib.list_to_object_array}
generic.py:1625(_update_inplace)                                       ->       6    0.000    0.000  base.py:103(_reset_cache)
                                                                                6    0.000    0.000  generic.py:1137(_maybe_update_cacher)
                                                                                6    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                                6    0.001    0.001  generic.py:2152(__setattr__)
                                                                                6    0.000    0.000  {getattr}
{numpy.core.multiarray.copyto}                                         ->
{all}                                                                  ->      14    0.000    0.000  groupby.py:2103(<genexpr>)
                                                                                2    0.000    0.000  indexing.py:405(<genexpr>)
                                                                                4    0.000    0.000  series.py:1003(__iter__)
frame.py:2102(_box_item_values)                                        ->      37    0.000    0.001  frame.py:2109(_box_col_values)
                                                                               37    0.000    0.000  index.py:1059(__getitem__)
                                                                               37    0.000    0.000  index.py:1553(get_loc)
internals.py:119(mgr_locs)                                             ->
qc.py:378(_validate_val_cols)                                          ->       8    0.000    0.000  frame.py:1774(__getitem__)
                                                                                8    0.000    0.000  generic.py:2135(__getattr__)
                                                                                1    0.000    0.000  qc.py:115(get_cols_from_df)
                                                                                4    0.000    0.000  series.py:308(values)
                                                                                4    0.000    0.000  series.py:391(__array__)
                                                                                4    0.000    0.000  series.py:397(__array_wrap__)
                                                                                4    0.000    0.000  series.py:404(__array_prepare__)
                                                                                4    0.000    0.000  {all}
{range}                                                                ->
common.py:1105(_maybe_promote)                                         ->      68    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                               30    0.000    0.000  numeric.py:394(asarray)
                                                                               68    0.000    0.000  {isinstance}
                                                                              272    0.000    0.000  {issubclass}
                                                                               30    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                               30    0.000    0.000  {pandas.lib.is_bool}
                                                                               68    0.000    0.000  {pandas.lib.is_float}
                                                                               30    0.000    0.000  {pandas.lib.is_integer}
groupby.py:480(_set_selection_from_grouper)                            ->       7    0.000    0.000  generic.py:366(_info_axis)
                                                                                7    0.000    0.000  generic.py:386(ndim)
                                                                                7    0.000    0.000  index.py:109(__new__)
                                                                                7    0.000    0.000  index.py:273(tolist)
                                                                                7    0.000    0.001  index.py:1481(difference)
                                                                                7    0.000    0.000  {getattr}
                                                                                7    0.000    0.000  {len}
{pandas.algos.ensure_float64}                                          ->
common.py:2569(is_categorical_dtype)                                   ->       8    0.000    0.000  series.py:288(dtype)
                                                                              257    0.000    0.000  {hasattr}
                                                                              257    0.000    0.000  {isinstance}
numeric.py:394(asarray)                                                ->     327    0.001    0.001  {numpy.core.multiarray.array}
info.py:272(fix_counts)                                                ->      90    0.001    0.001  {all}
                                                                               30    0.000    0.000  {len}
                                                                               30    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                               30    0.000    0.000  {method 'flatten' of 'numpy.ndarray' objects}
                                                                               30    0.000    0.000  {numpy.core.multiarray.array}
internals.py:128(make_block_same_class)                                ->     102    0.000    0.001  internals.py:2073(make_block)
internals.py:2872(iget)                                                ->      37    0.000    0.000  internals.py:128(make_block_same_class)
                                                                               37    0.000    0.000  internals.py:259(iget)
                                                                               37    0.000    0.000  internals.py:3343(__init__)
                                                                               37    0.000    0.000  {len}
merge.py:763(__init__)                                                 ->       3    0.000    0.000  base.py:318(ndim)
                                                                                1    0.000    0.000  frame.py:189(_constructor)
                                                                                1    0.000    0.001  frame.py:200(__init__)
                                                                                1    0.000    0.000  frame.py:418(shape)
                                                                                1    0.000    0.000  fromnumeric.py:1631(sum)
                                                                                5    0.000    0.000  generic.py:386(ndim)
                                                                                2    0.000    0.000  generic.py:2203(consolidate)
                                                                                1    0.000    0.000  merge.py:938(_get_new_axes)
                                                                                1    0.000    0.000  {getattr}
                                                                                6    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {len}
                                                                                1    0.000    0.000  {max}
                                                                                2    0.000    0.000  {method 'add' of 'set' objects}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
generic.py:2394(astype)                                                ->       7    0.000    0.000  frame.py:189(_constructor)
                                                                                7    0.000    0.000  frame.py:200(__init__)
                                                                                7    0.000    0.000  generic.py:2118(__finalize__)
                                                                                7    0.000    0.001  internals.py:2503(astype)
generic.py:2430(convert_objects)                                       ->       7    0.000    0.000  frame.py:189(_constructor)
                                                                                7    0.000    0.000  frame.py:200(__init__)
                                                                                7    0.000    0.000  generic.py:2118(__finalize__)
                                                                                7    0.000    0.001  internals.py:2506(convert)
internals.py:2384(_verify_integrity)                                   ->     106    0.000    0.000  internals.py:220(shape)
                                                                               44    0.000    0.000  internals.py:2204(shape)
                                                                               44    0.000    0.000  internals.py:2279(_get_items)
                                                                               44    0.000    0.000  {len}
                                                                               44    0.000    0.000  {sum}
{pandas.lib.infer_dtype}                                               ->      14    0.000    0.000  index.py:258(dtype)
                                                                               14    0.000    0.000  index.py:263(values)
nanops.py:130(_get_fill_value)                                         ->
index.py:204(_simple_new)                                              ->     140    0.000    0.000  __init__.py:124(iteritems)
                                                                              140    0.000    0.000  index.py:237(_reset_identity)
                                                                              140    0.000    0.000  {built-in method __new__ of type object at 0x7f39ffe8abc0}
                                                                               28    0.000    0.000  {setattr}
internals.py:2206(<genexpr>)                                           ->     546    0.000    0.001  {len}
fromnumeric.py:2737(std)                                               ->       6    0.000    0.001  _methods.py:123(_std)
{method 'itervalues' of 'dict' objects}                                ->
internals.py:2503(astype)                                              ->       7    0.000    0.001  internals.py:2396(apply)
_methods.py:77(_var)                                                   ->       7    0.000    0.000  _methods.py:43(_count_reduce_items)
                                                                               14    0.000    0.000  numeric.py:464(asanyarray)
                                                                                6    0.000    0.000  {hasattr}
                                                                               14    0.000    0.000  {isinstance}
                                                                               14    0.000    0.000  {issubclass}
                                                                                7    0.000    0.000  {max}
                                                                               14    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
_methods.py:123(_std)                                                  ->       6    0.000    0.001  _methods.py:77(_var)
                                                                                6    0.000    0.000  {hasattr}
                                                                                6    0.000    0.000  {isinstance}
internals.py:2506(convert)                                             ->       7    0.000    0.001  internals.py:2396(apply)
index.py:343(_shallow_copy)                                            ->      51    0.000    0.000  index.py:204(_simple_new)
                                                                               21    0.000    0.000  index.py:263(values)
                                                                               51    0.000    0.000  index.py:327(_get_attributes_dict)
                                                                               51    0.000    0.000  {method 'update' of 'dict' objects}
filters.py:110(correlate1d)                                            ->       6    0.000    0.000  _ni_support.py:38(_extend_mode_to_code)
                                                                                6    0.000    0.000  _ni_support.py:70(_get_output)
                                                                                6    0.000    0.000  _ni_support.py:90(_check_axis)
                                                                               12    0.000    0.000  numeric.py:394(asarray)
                                                                                6    0.000    0.000  type_check.py:237(iscomplexobj)
                                                                               18    0.000    0.000  {len}
                                                                                6    0.001    0.001  {scipy.ndimage._nd_image.correlate1d}
{pandas.lib.is_integer}                                                ->
index.py:2521(delete)                                                  ->       7    0.000    0.000  function_base.py:3427(delete)
                                                                                7    0.000    0.000  index.py:109(__new__)
frame.py:2109(_box_col_values)                                         ->      37    0.000    0.001  series.py:227(from_array)
{pandas.algos.take_2d_axis1_float64_float64}                           ->
internals.py:2568(_consolidate_check)                                  ->     193    0.000    0.000  internals.py:232(ftype)
                                                                              160    0.000    0.000  {len}
series.py:227(from_array)                                              ->      37    0.000    0.000  series.py:119(__init__)
                                                                               37    0.000    0.000  {isinstance}
ops.py:574(wrapper)                                                    ->       1    0.000    0.000  common.py:212(isnull)
                                                                                1    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  generic.py:4294(logical_func)
                                                                                1    0.000    0.000  numeric.py:1910(isscalar)
                                                                                1    0.000    0.000  ops.py:543(na_op)
                                                                                1    0.000    0.000  series.py:119(__init__)
                                                                                1    0.000    0.000  series.py:319(get_values)
                                                                                4    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {issubclass}
                                                                                1    0.000    0.000  {pandas.index.convert_scalar}
                                                                                2    0.000    0.000  {pandas.lib.values_from_object}
{pandas.lib.isnullobj}                                                 ->
index.py:1481(difference)                                              ->       7    0.000    0.000  index.py:109(__new__)
                                                                                7    0.000    0.000  index.py:582(_assert_can_do_setop)
                                                                                7    0.000    0.000  index.py:587(_convert_can_do_setop)
                                                                               14    0.000    0.000  index.py:1001(__iter__)
                                                                                7    0.000    0.000  index.py:1233(equals)
                                                                                7    0.000    0.000  {sorted}
numeric.py:464(asanyarray)                                             ->     299    0.000    0.000  {numpy.core.multiarray.array}
indexing.py:397(setter)                                                ->       1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.001  frame.py:2114(__setitem__)
                                                                                1    0.000    0.000  {all}
                                                                                1    0.000    0.000  {isinstance}
numeric.py:81(zeros_like)                                              ->      31    0.000    0.000  {numpy.core.multiarray.copyto}
                                                                               31    0.000    0.000  {numpy.core.multiarray.empty_like}
                                                                               31    0.000    0.000  {numpy.core.multiarray.zeros}
frame.py:295(_init_dict)                                               ->       1    0.000    0.000  common.py:2185(_try_sort)
                                                                                1    0.000    0.000  frame.py:4791(_arrays_to_mgr)
                                                                                1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'keys' of 'dict' objects}
{scipy.ndimage._nd_image.correlate1d}                                  ->
info.py:293(fix_probs_2d)                                              ->       6    0.000    0.000  info.py:251(fix_counts_2d)
                                                                                6    0.000    0.000  {method 'flatten' of 'numpy.ndarray' objects}
                                                                                6    0.000    0.000  {method 'sum' of 'numpy.ndarray' objects}
internals.py:4450(_fast_count_smallints)                               ->       7    0.000    0.000  index_tricks.py:251(__getitem__)
                                                                               14    0.000    0.000  {len}
                                                                                7    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                                7    0.000    0.000  {method 'nonzero' of 'numpy.ndarray' objects}
                                                                                7    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                7    0.000    0.000  {numpy.lib._compiled_base.bincount}
index.py:1553(get_loc)                                                 ->       7    0.000    0.000  index.py:958(_engine)
                                                                              100    0.000    0.000  {method 'get_loc' of 'pandas.index.IndexEngine' objects}
                                                                              100    0.000    0.000  {pandas.lib.values_from_object}
merge.py:888(get_result)                                               ->       1    0.000    0.000  generic.py:280(_from_axes)
                                                                                1    0.000    0.000  generic.py:2118(__finalize__)
                                                                                2    0.000    0.000  index.py:3434(equals)
                                                                                1    0.000    0.000  internals.py:4044(concatenate_block_managers)
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
frame.py:2133(_setitem_array)                                          ->       1    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.000  frame.py:1774(__getitem__)
                                                                                2    0.000    0.000  frame.py:2114(__setitem__)
                                                                                1    0.000    0.000  index.py:1001(__iter__)
                                                                                1    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
generic.py:412(_set_axis)                                              ->      10    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                               10    0.000    0.000  internals.py:2212(set_axis)
frame.py:4791(_arrays_to_mgr)                                          ->       1    0.000    0.000  frame.py:4811(extract_index)
                                                                                1    0.000    0.000  frame.py:5092(_homogenize)
                                                                                2    0.000    0.000  index.py:5677(_ensure_index)
                                                                                1    0.000    0.000  internals.py:3553(create_block_manager_from_arrays)
internals.py:2212(set_axis)                                            ->      10    0.000    0.000  index.py:5677(_ensure_index)
                                                                               20    0.000    0.000  {len}
info.py:251(fix_counts_2d)                                             ->      18    0.000    0.000  {all}
                                                                                6    0.000    0.000  {len}
                                                                                6    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                               18    0.000    0.000  {method 'flatten' of 'numpy.ndarray' objects}
                                                                                6    0.000    0.000  {numpy.core.multiarray.array}
fromnumeric.py:1772(any)                                               ->      47    0.000    0.000  numeric.py:464(asanyarray)
                                                                               47    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
index.py:1233(equals)                                                  ->      30    0.000    0.000  common.py:407(array_equivalent)
                                                                               30    0.000    0.000  index.py:218(is_)
                                                                               30    0.000    0.000  {isinstance}
                                                                               60    0.000    0.000  {pandas.lib.values_from_object}
{method 'put' of 'numpy.ndarray' objects}                              ->
internals.py:3935(_get_blkno_placements)                               ->       6    0.000    0.000  numeric.py:588(require)
                                                                               24    0.000    0.000  {pandas.algos.ensure_int64}
                                                                               24    0.000    0.000  {pandas.lib.get_blkno_indexers}
internals.py:3553(create_block_manager_from_arrays)                    ->       1    0.000    0.000  internals.py:2163(__init__)
                                                                                1    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                1    0.000    0.000  internals.py:3563(form_blocks)
internals.py:4044(concatenate_block_managers)                          ->       2    0.000    0.000  internals.py:2073(make_block)
                                                                                1    0.000    0.000  internals.py:2163(__init__)
                                                                                2    0.000    0.000  internals.py:4144(concatenate_join_units)
                                                                                2    0.000    0.000  internals.py:4168(get_mgr_concatenation_plan)
                                                                                3    0.000    0.000  internals.py:4246(combine_concat_plans)
qc.py:115(get_cols_from_df)                                            ->       8    0.000    0.000  index.py:1001(__iter__)
                                                                               39    0.000    0.000  qc.py:88(is_col_type)
                                                                                8    0.000    0.000  {sorted}
index_tricks.py:251(__getitem__)                                       ->       7    0.000    0.000  index_tricks.py:231(_retval)
                                                                                7    0.000    0.000  numerictypes.py:970(find_common_type)
                                                                               56    0.000    0.000  {isinstance}
                                                                                7    0.000    0.000  {len}
                                                                               28    0.000    0.000  {method 'append' of 'list' objects}
                                                                               14    0.000    0.000  {method 'transpose' of 'numpy.ndarray' objects}
                                                                               28    0.000    0.000  {numpy.core.multiarray.array}
                                                                                7    0.000    0.000  {numpy.core.multiarray.concatenate}
                                                                               21    0.000    0.000  {range}
fromnumeric.py:1631(sum)                                               ->      40    0.000    0.000  _methods.py:31(_sum)
                                                                               40    0.000    0.000  {isinstance}
generic.py:245(_construct_axes_from_arguments)                         ->      14    0.000    0.000  {method 'get' of 'dict' objects}
                                                                               14    0.000    0.000  {method 'pop' of 'dict' objects}
qc.py:88(is_col_type)                                                  ->      64    0.000    0.000  re.py:143(search)
common.py:407(array_equivalent)                                        ->      68    0.000    0.000  numeric.py:394(asarray)
                                                                                4    0.000    0.000  numeric.py:2328(array_equal)
                                                                               13    0.000    0.000  {issubclass}
                                                                                2    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {pandas.algos.ensure_object}
                                                                                1    0.000    0.000  {pandas.lib.array_equivalent_object}
qc.py:212(_validate_pos_cols)                                          ->       6    0.000    0.000  frame.py:1774(__getitem__)
                                                                                2    0.000    0.000  generic.py:1046(_indexer)
                                                                                1    0.000    0.000  index.py:1045(__contains__)
                                                                                2    0.000    0.000  indexing.py:1185(__getitem__)
                                                                                1    0.000    0.000  numeric.py:2328(array_equal)
                                                                                4    0.000    0.000  series.py:308(values)
                                                                                2    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.arange}
function_base.py:3427(delete)                                          ->       7    0.000    0.000  numeric.py:141(ones)
                                                                               14    0.000    0.000  numeric.py:394(asarray)
                                                                               14    0.000    0.000  {isinstance}
                                                                               14    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
                                                                                7    0.000    0.000  {numpy.core.multiarray.can_cast}
generic.py:4294(logical_func)                                          ->       1    0.000    0.000  series.py:2068(_reduce)
internals.py:371(astype)                                               ->       7    0.000    0.000  internals.py:375(_astype)
frame.py:343(_init_ndarray)                                            ->       2    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  common.py:2585(is_object_dtype)
                                                                                1    0.000    0.000  frame.py:361(_get_axes)
                                                                                1    0.000    0.000  frame.py:4863(_prep_ndarray)
                                                                                1    0.000    0.000  internals.py:3530(create_block_manager_from_blocks)
                                                                                1    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {isinstance}
indexing.py:510(_align_series)                                         ->       2    0.000    0.000  common.py:2607(is_null_slice)
                                                                                1    0.000    0.000  common.py:2644(is_sequence)
                                                                                1    0.000    0.000  frame.py:414(axes)
                                                                                2    0.000    0.000  generic.py:386(ndim)
                                                                                1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:1059(__getitem__)
                                                                                1    0.000    0.000  index.py:3434(equals)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                1    0.000    0.000  series.py:308(values)
                                                                                3    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {map}
                                                                                1    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {sum}
internals.py:375(_astype)                                              ->       6    0.000    0.000  common.py:2683(_astype_nansafe)
                                                                                7    0.000    0.000  internals.py:97(is_categorical_astype)
                                                                                6    0.000    0.000  internals.py:119(mgr_locs)
                                                                               12    0.000    0.000  internals.py:220(shape)
                                                                                7    0.000    0.000  internals.py:228(dtype)
                                                                                1    0.000    0.000  internals.py:504(copy)
                                                                                6    0.000    0.000  internals.py:2073(make_block)
                                                                                6    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                6    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
function_base.py:3625(insert)                                          ->      14    0.000    0.000  numeric.py:394(asarray)
                                                                               14    0.000    0.000  numeric.py:1347(rollaxis)
                                                                               14    0.000    0.000  {isinstance}
                                                                               14    0.000    0.000  {method 'item' of 'numpy.ndarray' objects}
                                                                               28    0.000    0.000  {numpy.core.multiarray.array}
                                                                               14    0.000    0.000  {numpy.core.multiarray.empty}
nanops.py:233(nanany)                                                  ->       1    0.000    0.000  nanops.py:153(_get_values)
                                                                                1    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
Container.py:505(__init__)                                             ->       7    0.000    0.000  Container.py:168(file_items)
                                                                                7    0.000    0.000  Node.py:399(__init__)
                                                                                7    0.000    0.000  copy.py:66(copy)
                                                                                7    0.000    0.000  six.py:560(iteritems)
                                                                                7    0.000    0.000  {isinstance}
                                                                               14    0.000    0.000  {len}
                                                                               28    0.000    0.000  {method 'append' of 'list' objects}
                                                                               21    0.000    0.000  {numpy.core.multiarray.array}
scimath.py:176(sqrt)                                                   ->      12    0.000    0.000  scimath.py:97(_fix_real_lt_zero)
{method 'all' of 'numpy.ndarray' objects}                              ->      43    0.000    0.000  _methods.py:40(_all)
shape_base.py:60(atleast_2d)                                           ->      47    0.000    0.000  numeric.py:464(asanyarray)
                                                                              141    0.000    0.000  {len}
                                                                               47    0.000    0.000  {method 'append' of 'list' objects}
index.py:263(values)                                                   ->     228    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
internals.py:1442(__init__)                                            ->      33    0.000    0.000  internals.py:64(__init__)
                                                                               33    0.000    0.000  {issubclass}
generic.py:1093(_set_as_cached)                                        ->      37    0.000    0.000  generic.py:2152(__setattr__)
defmatrix.py:244(__new__)                                              ->       8    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                                3    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
internals.py:232(ftype)                                                ->     193    0.000    0.000  internals.py:228(dtype)
internals.py:3563(form_blocks)                                         ->       1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:1059(__getitem__)
                                                                                1    0.000    0.000  index.py:1233(equals)
                                                                                1    0.000    0.000  internals.py:3687(_multi_blockify)
                                                                                5    0.000    0.000  series.py:288(dtype)
                                                                                1    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {issubclass}
                                                                               10    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {method 'extend' of 'list' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.arange}
scimath.py:97(_fix_real_lt_zero)                                       ->      12    0.000    0.000  fromnumeric.py:1772(any)
                                                                               12    0.000    0.000  numeric.py:394(asarray)
                                                                               12    0.000    0.000  type_check.py:207(isreal)
index.py:1862(reindex)                                                 ->       7    0.000    0.000  index.py:1233(equals)
                                                                                7    0.000    0.000  index.py:1643(get_indexer)
                                                                                7    0.000    0.000  index.py:5677(_ensure_index)
                                                                                7    0.000    0.000  index.py:5843(_ensure_has_len)
                                                                                7    0.000    0.000  {hasattr}
                                                                                7    0.000    0.000  {isinstance}
generic.py:318(_get_axis)                                              ->      86    0.000    0.000  generic.py:305(_get_axis_name)
                                                                               86    0.000    0.000  {getattr}
_methods.py:40(_all)                                                   ->      43    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
indexing.py:1612(convert_to_index_sliceable)                           ->      16    0.000    0.000  index.py:1045(__contains__)
                                                                                7    0.000    0.000  index.py:3427(is_all_dates)
                                                                               16    0.000    0.000  internals.py:2279(_get_items)
                                                                               52    0.000    0.000  {isinstance}
common.py:368(notnull)                                                 ->       7    0.000    0.000  common.py:212(isnull)
                                                                                7    0.000    0.000  numeric.py:1910(isscalar)
index.py:3434(equals)                                                  ->       4    0.000    0.000  common.py:407(array_equivalent)
                                                                               17    0.000    0.000  index.py:218(is_)
                                                                                8    0.000    0.000  {pandas.lib.values_from_object}
{sorted}                                                               ->      48    0.000    0.000  internals.py:3815(<lambda>)
_methods.py:43(_count_reduce_items)                                    ->      95    0.000    0.000  {isinstance}
                                                                               93    0.000    0.000  {range}
indexing.py:1695(maybe_convert_indices)                                ->       9    0.000    0.000  {isinstance}
                                                                               18    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
{abs}                                                                  ->
generic.py:2309(values)                                                ->      13    0.000    0.000  generic.py:2268(as_matrix)
internals.py:262(set)                                                  ->
series.py:397(__array_wrap__)                                          ->       4    0.000    0.000  generic.py:2118(__finalize__)
                                                                                4    0.000    0.000  series.py:119(__init__)
                                                                                4    0.000    0.000  series.py:237(_constructor)
generic.py:2268(as_matrix)                                             ->      13    0.000    0.000  generic.py:2197(_consolidate_inplace)
                                                                               13    0.000    0.000  internals.py:2701(as_matrix)
re.py:143(search)                                                      ->      64    0.000    0.000  re.py:230(_compile)
                                                                               64    0.000    0.000  {method 'search' of '_sre.SRE_Pattern' objects}
common.py:724(_get_take_nd_function)                                   ->     108    0.000    0.000  {method 'get' of 'dict' objects}
merge.py:938(_get_new_axes)                                            ->       1    0.000    0.000  merge.py:932(_get_result_dim)
                                                                                1    0.000    0.000  merge.py:962(_get_comb_axis)
                                                                                1    0.000    0.000  merge.py:974(_get_concat_axis)
index.py:1059(__getitem__)                                             ->       1    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.000  index.py:343(_shallow_copy)
                                                                               44    0.000    0.000  numeric.py:1910(isscalar)
                                                                                2    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {pandas.lib.values_from_object}
{method 'astype' of 'numpy.ndarray' objects}                           ->
index.py:610(set_names)                                                ->      28    0.000    0.000  common.py:2603(is_list_like)
                                                                                7    0.000    0.000  index.py:343(_shallow_copy)
                                                                               14    0.000    0.000  index.py:602(_set_names)
{pandas.lib.list_to_object_array}                                      ->
internals.py:422(convert)                                              ->      13    0.000    0.000  internals.py:504(copy)
{pandas.algos.take_2d_axis0_float64_float64}                           ->
indexing.py:1185(__getitem__)                                          ->       1    0.000    0.000  indexing.py:698(_getitem_tuple)
                                                                                1    0.000    0.000  indexing.py:1299(_getitem_axis)
                                                                                2    0.000    0.000  indexing.py:1449(_getitem_axis)
{method 'get_loc' of 'pandas.index.IndexEngine' objects}               ->
groupby.py:1874(__init__)                                              ->       7    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                7    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                                7    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                7    0.000    0.000  groupby.py:2175(_convert_grouper)
                                                                                7    0.000    0.000  {getattr}
                                                                               42    0.000    0.000  {isinstance}
numeric.py:588(require)                                                ->      32    0.000    0.000  {method 'upper' of 'str' objects}
                                                                               32    0.000    0.000  {numpy.core.multiarray.array}
numeric.py:2428(seterr)                                                ->      34    0.000    0.000  numeric.py:2524(geterr)
                                                                               34    0.000    0.000  {numpy.core.umath.geterrobj}
                                                                               34    0.000    0.000  {numpy.core.umath.seterrobj}
common.py:2121(is_bool_indexer)                                        ->      18    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  series.py:288(dtype)
                                                                               45    0.000    0.000  {isinstance}
MCMC.py:60(__init__)                                                   ->       1    0.000    0.000  Model.py:176(__init__)
Model.py:176(__init__)                                                 ->       1    0.000    0.000  Model.py:81(__init__)
                                                                                1    0.000    0.000  Model.py:514(fset)
                                                                                1    0.000    0.000  Model.py:522(_assign_database_backend)
                                                                                1    0.000    0.000  {hasattr}
__init__.py:124(iteritems)                                             ->     140    0.000    0.000  {getattr}
                                                                              140    0.000    0.000  {method 'iteritems' of 'dict' objects}
{method 'fill' of 'numpy.ndarray' objects}                             ->
internals.py:2694(<lambda>)                                            ->      14    0.000    0.000  index.py:331(view)
{sum}                                                                  ->      21    0.000    0.000  common.py:2194(<genexpr>)
                                                                              150    0.000    0.000  internals.py:2386(<genexpr>)
index.py:1783(_possibly_promote)                                       ->       7    0.000    0.000  index.py:987(inferred_type)
common.py:2380(_index_labels_to_array)                                 ->       8    0.000    0.000  common.py:2347(_asarray_tuplesafe)
                                                                               16    0.000    0.000  {isinstance}
internals.py:3530(create_block_manager_from_blocks)                    ->       1    0.000    0.000  internals.py:2073(make_block)
                                                                                1    0.000    0.000  internals.py:2163(__init__)
                                                                                1    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                1    0.000    0.000  {isinstance}
                                                                                3    0.000    0.000  {len}
generic.py:305(_get_axis_name)                                         ->      94    0.000    0.000  {isinstance}
                                                                               94    0.000    0.000  {method 'get' of 'dict' objects}
index.py:331(view)                                                     ->      14    0.000    0.000  index.py:343(_shallow_copy)
                                                                               14    0.000    0.000  {isinstance}
index.py:3385(__new__)                                                 ->      13    0.000    0.000  index.py:204(_simple_new)
                                                                               13    0.000    0.000  index.py:312(_coerce_to_ndarray)
                                                                               26    0.000    0.000  {issubclass}
                                                                               13    0.000    0.000  {numpy.core.multiarray.array}
numeric.py:2328(array_equal)                                           ->      15    0.000    0.000  numeric.py:394(asarray)
                                                                                5    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
index.py:327(_get_attributes_dict)                                     ->      51    0.000    0.000  {getattr}
series.py:1003(__iter__)                                               ->       5    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                               10    0.000    0.000  numerictypes.py:736(issubdtype)
                                                                               15    0.000    0.000  series.py:288(dtype)
                                                                                5    0.000    0.000  series.py:308(values)
                                                                                5    0.000    0.000  {iter}
index.py:987(inferred_type)                                            ->      14    0.000    0.000  {pandas.lib.infer_dtype}
common.py:1974(_possibly_cast_to_datetime)                             ->       5    0.000    0.000  common.py:2049(_possibly_infer_to_datetimelike)
                                                                                1    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                1    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                                6    0.000    0.000  {isinstance}
                                                                                5    0.000    0.000  {issubclass}
Model.py:81(__init__)                                                  ->       1    0.000    0.000  Container.py:594(__init__)
internals.py:4144(concatenate_join_units)                              ->       2    0.000    0.000  internals.py:4068(get_empty_dtype_and_na)
                                                                                2    0.000    0.000  internals.py:4396(get_reindexed_values)
                                                                                4    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
fromnumeric.py:1852(all)                                               ->      15    0.000    0.000  numeric.py:464(asanyarray)
                                                                               15    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
Container.py:594(__init__)                                             ->       1    0.000    0.000  Container.py:168(file_items)
                                                                                1    0.000    0.000  Container.py:505(__init__)
                                                                                1    0.000    0.000  Node.py:399(__init__)
                                                                                2    0.000    0.000  copy.py:66(copy)
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
numeric.py:1681(array_str)                                             ->       1    0.000    0.000  arrayprint.py:343(array2string)
internals.py:3815(<lambda>)                                            ->      96    0.000    0.000  internals.py:79(_consolidate_key)
InstantiationDecorators.py:46(_extract)                                ->       3    0.000    0.000  InstantiationDecorators.py:32(disable_special_methods)
                                                                                3    0.000    0.000  InstantiationDecorators.py:36(enable_special_methods)
                                                                                3    0.000    0.000  InstantiationDecorators.py:40(check_special_methods)
                                                                                3    0.000    0.000  inspect.py:804(getargspec)
                                                                                1    0.000    0.000  learn_model.py:78(sequences)
                                                                                1    0.000    0.000  learn_model.py:81(pymcdf)
                                                                                1    0.000    0.000  learn_model.py:84(emat)
                                                                                9    0.000    0.000  {len}
                                                                                3    0.000    0.000  {method 'pop' of 'dict' objects}
                                                                                3    0.000    0.000  {method 'update' of 'dict' objects}
                                                                                3    0.000    0.000  {sys.settrace}
                                                                                3    0.000    0.000  {zip}
arrayprint.py:343(array2string)                                        ->       1    0.000    0.000  arrayprint.py:233(_array2string)
                                                                                1    0.000    0.000  {_functools.reduce}
groupby.py:1443(_get_aggregate_function)                               ->      20    0.000    0.000  groupby.py:1447(get_func)
                                                                               20    0.000    0.000  {isinstance}
PyMCObjects.py:108(__init__)                                           ->       3    0.000    0.000  Container.py:505(__init__)
                                                                                3    0.000    0.000  PyMCObjects.py:63(extend_parents)
                                                                                3    0.000    0.000  {isinstance}
function_base.py:3832(append)                                          ->      14    0.000    0.000  fromnumeric.py:1291(ravel)
                                                                               14    0.000    0.000  numeric.py:464(asanyarray)
                                                                               14    0.000    0.000  {numpy.core.multiarray.concatenate}
numeric.py:2813(__enter__)                                             ->      17    0.000    0.000  numeric.py:2428(seterr)
{pandas.algos.take_1d_int64_int64}                                     ->
arrayprint.py:233(_array2string)                                       ->       1    0.000    0.000  arrayprint.py:465(_formatArray)
                                                                                1    0.000    0.000  arrayprint.py:533(__init__)
                                                                                1    0.000    0.000  arrayprint.py:639(__init__)
                                                                                1    0.000    0.000  arrayprint.py:661(__init__)
                                                                                1    0.000    0.000  arrayprint.py:689(__init__)
                                                                                1    0.000    0.000  arrayprint.py:700(__init__)
                                                                                1    0.000    0.000  arrayprint.py:716(__init__)
                                                                                1    0.000    0.000  arrayprint.py:744(__init__)
                                                                                1    0.000    0.000  fromnumeric.py:1291(ravel)
                                                                                6    0.000    0.000  {issubclass}
                                                                                2    0.000    0.000  {len}
copy.py:66(copy)                                                       ->      12    0.000    0.000  copy.py:113(_copy_with_constructor)
                                                                                2    0.000    0.000  copy.py:306(_reconstruct)
                                                                                4    0.000    0.000  {getattr}
                                                                                2    0.000    0.000  {method '__reduce_ex__' of 'object' objects}
                                                                               16    0.000    0.000  {method 'get' of 'dict' objects}
internals.py:2246(_is_single_block)                                    ->      30    0.000    0.000  internals.py:119(mgr_locs)
                                                                               30    0.000    0.000  internals.py:2208(ndim)
                                                                               45    0.000    0.000  {len}
index.py:958(_engine)                                                  ->      27    0.000    0.000  {len}
{method 'standard_normal' of 'mtrand.RandomState' objects}             ->
index.py:668(rename)                                                   ->       7    0.000    0.000  index.py:610(set_names)
{method 'ravel' of 'numpy.ndarray' objects}                            ->
fromnumeric.py:2259(prod)                                              ->       7    0.000    0.000  _methods.py:34(_prod)
common.py:2644(is_sequence)                                            ->      20    0.000    0.000  {isinstance}
                                                                               33    0.000    0.000  {iter}
                                                                               20    0.000    0.000  {len}
{method 'get_indexer' of 'pandas.index.IndexEngine' objects}           ->
internals.py:2560(is_consolidated)                                     ->       8    0.000    0.000  internals.py:2568(_consolidate_check)
Container.py:168(file_items)                                           ->      20    0.000    0.000  PyMCObjects.py:1046(_get_observed)
                                                                               14    0.000    0.000  {getattr}
                                                                               30    0.000    0.000  {isinstance}
                                                                               20    0.000    0.000  {method 'add' of 'set' objects}
                                                                               24    0.000    0.000  {setattr}
internals.py:1495(set)                                                 ->
function_base.py:550(asarray_chkfinite)                                ->       1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
internals.py:4068(get_empty_dtype_and_na)                              ->       2    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                2    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                                2    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                2    0.000    0.000  internals.py:4357(dtype)
                                                                                2    0.000    0.000  internals.py:4370(is_null)
                                                                                4    0.000    0.000  {issubclass}
                                                                                4    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'add' of 'set' objects}
collections.py:38(__init__)                                            ->       6    0.000    0.000  _abcoll.py:545(update)
                                                                                6    0.000    0.000  abc.py:148(__subclasscheck__)
                                                                                6    0.000    0.000  {len}
common.py:2049(_possibly_infer_to_datetimelike)                        ->       7    0.000    0.000  common.py:2603(is_list_like)
                                                                               14    0.000    0.000  {len}
                                                                                7    0.000    0.000  {min}
                                                                                7    0.000    0.000  {numpy.core.multiarray.array}
                                                                                7    0.000    0.000  {pandas.lib.infer_dtype}
index.py:752(is_integer)                                               ->       7    0.000    0.000  index.py:987(inferred_type)
                                                                                2    0.000    0.000  index.py:3413(inferred_type)
internals.py:2386(<genexpr>)                                           ->     106    0.000    0.000  internals.py:119(mgr_locs)
                                                                              106    0.000    0.000  {len}
internals.py:2701(as_matrix)                                           ->      13    0.000    0.000  internals.py:874(get_values)
                                                                               13    0.000    0.000  internals.py:2246(_is_single_block)
                                                                               13    0.000    0.000  {len}
progressbar.py:29(update)                                              ->       2    0.000    0.000  progressbar.py:50(animate)
                                                                                6    0.000    0.000  {time.time}
groupby.py:1363(group_info)                                            ->       7    0.000    0.000  groupby.py:1372(_get_compressed_labels)
                                                                                7    0.000    0.000  {len}
                                                                                7    0.000    0.000  {pandas.algos.ensure_int64}
common.py:2603(is_list_like)                                           ->      60    0.000    0.000  {hasattr}
                                                                               55    0.000    0.000  {isinstance}
common.py:2144(_default_index)                                         ->       3    0.000    0.000  index.py:3385(__new__)
                                                                                3    0.000    0.000  {numpy.core.multiarray.arange}
series.py:2575(_sanitize_index)                                        ->      60    0.000    0.000  {isinstance}
                                                                               40    0.000    0.000  {len}
index.py:268(get_values)                                               ->      68    0.000    0.000  index.py:263(values)
internals.py:2208(ndim)                                                ->     277    0.000    0.000  {len}
index.py:1001(__iter__)                                                ->      39    0.000    0.000  index.py:263(values)
                                                                               39    0.000    0.000  {iter}
groupby.py:2103(<genexpr>)                                             ->       7    0.000    0.000  index.py:1045(__contains__)
generic.py:1046(_indexer)                                              ->      11    0.000    0.000  indexing.py:41(__init__)
                                                                               13    0.000    0.000  {getattr}
                                                                               11    0.000    0.000  {setattr}
merge.py:974(_get_concat_axis)                                         ->       1    0.000    0.000  merge.py:1020(_maybe_check_integrity)
                                                                                1    0.000    0.000  merge.py:1028(_concat_indexes)
indexing.py:698(_getitem_tuple)                                        ->       1    0.000    0.000  indexing.py:799(_getitem_lowerdim)
numeric.py:2818(__exit__)                                              ->      17    0.000    0.000  numeric.py:2428(seterr)
indexing.py:799(_getitem_lowerdim)                                     ->       1    0.000    0.000  base.py:318(ndim)
                                                                                1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  generic.py:386(ndim)
                                                                                1    0.000    0.000  indexing.py:139(_is_nested_tuple_indexer)
                                                                                1    0.000    0.000  indexing.py:1185(__getitem__)
                                                                                1    0.000    0.000  indexing.py:1299(_getitem_axis)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                2    0.000    0.000  indexing.py:1748(is_label_like)
                                                                                1    0.000    0.000  {getattr}
                                                                                3    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
internals.py:228(dtype)                                                ->
MCMC.py:93(use_step_method)                                            ->       1    0.000    0.000  stepper.py:20(__init__)
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {setattr}
generic.py:1172(_clear_item_cache)                                     ->      38    0.000    0.000  {method 'clear' of 'dict' objects}
common.py:2683(_astype_nansafe)                                        ->       6    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                6    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                                6    0.000    0.000  numerictypes.py:736(issubdtype)
                                                                                6    0.000    0.000  {isinstance}
                                                                               12    0.000    0.000  {issubclass}
                                                                                6    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
merge.py:1028(_concat_indexes)                                         ->       1    0.000    0.000  index.py:1121(append)
indexing.py:159(_convert_scalar_indexer)                               ->      13    0.000    0.000  generic.py:318(_get_axis)
                                                                               13    0.000    0.000  index.py:773(_convert_scalar_indexer)
                                                                               13    0.000    0.000  {min}
index.py:1121(append)                                                  ->       1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:1093(_ensure_compat_append)
                                                                                1    0.000    0.000  {numpy.core.multiarray.concatenate}
_methods.py:34(_prod)                                                  ->       7    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
series.py:288(dtype)                                                   ->      41    0.000    0.000  internals.py:3453(dtype)
strings.py:1077(_wrap_result)                                          ->       1    0.000    0.000  series.py:119(__init__)
                                                                                1    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
numeric.py:2125(identity)                                              ->       1    0.000    0.000  twodim_base.py:190(eye)
stepper.py:20(__init__)                                                ->       1    0.000    0.000  StepMethods.py:391(__init__)
groupby.py:1372(_get_compressed_labels)                                ->      14    0.000    0.000  groupby.py:2020(labels)
                                                                                7    0.000    0.000  groupby.py:2026(group_index)
                                                                               14    0.000    0.000  {len}
                                                                                7    0.000    0.000  {numpy.core.multiarray.arange}
numerictypes.py:970(find_common_type)                                  ->      16    0.000    0.000  numerictypes.py:949(_can_coerce_all)
StepMethods.py:391(__init__)                                           ->       6    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                1    0.000    0.000  StepMethods.py:197(__init__)
                                                                                2    0.000    0.000  fromnumeric.py:1462(shape)
                                                                                1    0.000    0.000  fromnumeric.py:1852(all)
                                                                                1    0.000    0.000  numeric.py:141(ones)
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
generic.py:120(_init_mgr)                                              ->      51    0.000    0.000  {method 'items' of 'dict' objects}
index.py:237(_reset_identity)                                          ->
common.py:2565(is_categorical)                                         ->      36    0.000    0.000  {isinstance}
{math.exp}                                                             ->
re.py:230(_compile)                                                    ->
merge.py:962(_get_comb_axis)                                           ->       1    0.000    0.000  index.py:5721(_get_combined_index)
twodim_base.py:190(eye)                                                ->       1    0.000    0.000  {numpy.core.multiarray.zeros}
progressbar.py:50(animate)                                             ->       2    0.000    0.000  progressbar.py:53(progbar)
                                                                                2    0.000    0.000  progressbar.py:73(consoleprint)
internals.py:3687(_multi_blockify)                                     ->       1    0.000    0.000  internals.py:2073(make_block)
                                                                                1    0.000    0.000  internals.py:3691(<lambda>)
                                                                                1    0.000    0.000  internals.py:3721(_stack_arrays)
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
generic.py:322(_get_block_manager_axis)                                ->      28    0.000    0.000  generic.py:292(_get_axis_number)
common.py:2585(is_object_dtype)                                        ->      29    0.000    0.000  common.py:2461(_get_dtype_type)
                                                                               29    0.000    0.000  {issubclass}
indexing.py:1449(_getitem_axis)                                        ->       2    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.000  indexing.py:88(_get_loc)
                                                                                2    0.000    0.000  indexing.py:159(_convert_scalar_indexer)
                                                                                2    0.000    0.000  indexing.py:1387(_is_valid_integer)
                                                                                2    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {pandas.lib.is_integer}
index.py:5721(_get_combined_index)                                     ->       1    0.000    0.000  index.py:5677(_ensure_index)
                                                                                1    0.000    0.000  index.py:5736(_get_distinct_indexes)
                                                                                1    0.000    0.000  index.py:5740(_union_indexes)
                                                                                2    0.000    0.000  {len}
Model.py:829(trace)                                                    ->       1    0.000    0.000  base.py:363(trace)
                                                                                1    0.000    0.000  {isinstance}
indexing.py:94(_get_setitem_indexer)                                   ->       1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  indexing.py:144(_convert_tuple)
                                                                                2    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
frame.py:361(_get_axes)                                                ->       2    0.000    0.000  common.py:2144(_default_index)
{pandas.lib.get_blkno_indexers}                                        ->
index.py:1245(identical)                                               ->       7    0.000    0.000  index.py:1233(equals)
{method 'flatten' of 'numpy.ndarray' objects}                          ->
internals.py:4461(_preprocess_slice_or_indexer)                        ->      15    0.000    0.000  numeric.py:464(asanyarray)
                                                                               30    0.000    0.000  {isinstance}
                                                                               15    0.000    0.000  {len}
index.py:740(is_unique)                                                ->       1    0.000    0.000  index.py:958(_engine)
                                                                                7    0.000    0.000  index.py:961(<lambda>)
internals.py:79(_consolidate_key)                                      ->      96    0.000    0.000  internals.py:228(dtype)
numerictypes.py:949(_can_coerce_all)                                   ->      86    0.000    0.000  {len}
indexing.py:144(_convert_tuple)                                        ->       2    0.000    0.000  indexing.py:1007(_convert_to_indexer)
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
qc.py:140(_validate_seqs_cols)                                         ->       1    0.000    0.000  qc.py:115(get_cols_from_df)
type_check.py:207(isreal)                                              ->      12    0.000    0.000  type_check.py:141(imag)
generic.py:2118(__finalize__)                                          ->       6    0.000    0.000  {getattr}
                                                                               57    0.000    0.000  {isinstance}
base.py:363(trace)                                                     ->       1    0.000    0.000  copy.py:66(copy)
index.py:5740(_union_indexes)                                          ->       1    0.000    0.000  index.py:1365(union)
                                                                                1    0.000    0.000  index.py:5787(_sanitize_and_check)
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
arrayprint.py:533(__init__)                                            ->       3    0.000    0.000  arrayprint.py:547(fillFormat)
frame.py:2319(reindexer)                                               ->       3    0.000    0.000  index.py:3434(equals)
                                                                                3    0.000    0.000  series.py:308(values)
                                                                                3    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
groupby.py:1447(get_func)                                              ->      27    0.000    0.000  {getattr}
internals.py:2279(_get_items)                                          ->
fromnumeric.py:694(sort)                                               ->       7    0.000    0.000  numeric.py:464(asanyarray)
                                                                                7    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                                7    0.000    0.000  {method 'sort' of 'numpy.ndarray' objects}
frame.py:2164(_ensure_valid_index)                                     ->      23    0.000    0.000  {len}
index.py:3489(__new__)                                                 ->       6    0.000    0.000  index.py:204(_simple_new)
                                                                                6    0.000    0.000  index.py:312(_coerce_to_ndarray)
                                                                                6    0.000    0.000  {issubclass}
                                                                                6    0.000    0.000  {numpy.core.multiarray.array}
{method 'search' of '_sre.SRE_Pattern' objects}                        ->
numeric.py:2524(geterr)                                                ->      34    0.000    0.000  {numpy.core.umath.geterrobj}
internals.py:3453(dtype)                                               ->      41    0.000    0.000  internals.py:3394(_values)
{method '__reduce_ex__' of 'object' objects}                           ->       2    0.000    0.000  copy_reg.py:95(_slotnames)
frame.py:2666(_maybe_casted_values)                                    ->       7    0.000    0.000  index.py:263(values)
                                                                               14    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {pandas.lib.maybe_convert_objects}
groupby.py:2175(_convert_grouper)                                      ->       7    0.000    0.000  index.py:3434(equals)
                                                                                7    0.000    0.000  series.py:308(values)
                                                                               14    0.000    0.000  {isinstance}
indexing.py:1299(_getitem_axis)                                        ->       1    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  indexing.py:72(_get_label)
                                                                                1    0.000    0.000  indexing.py:1203(_get_slice_axis)
                                                                                2    0.000    0.000  indexing.py:1247(_has_valid_type)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                2    0.000    0.000  {isinstance}
index.py:961(<lambda>)                                                 ->      26    0.000    0.000  index.py:263(values)
utils.py:110(get_column_headers)                                       ->       7    0.000    0.000  index.py:1001(__iter__)
{numpy.core.multiarray.empty_like}                                     ->
{method 'clear' of 'dict' objects}                                     ->
arrayprint.py:547(fillFormat)                                          ->       3    0.000    0.000  numeric.py:2809(__init__)
                                                                                3    0.000    0.000  numeric.py:2813(__enter__)
                                                                                3    0.000    0.000  numeric.py:2818(__exit__)
index.py:1365(union)                                                   ->       1    0.000    0.000  index.py:582(_assert_can_do_setop)
                                                                                1    0.000    0.000  index.py:3434(equals)
                                                                                1    0.000    0.000  index.py:5677(_ensure_index)
                                                                                1    0.000    0.000  {len}
{pandas.lib.maybe_convert_objects}                                     ->
{method 'nonzero' of 'numpy.ndarray' objects}                          ->
abc.py:148(__subclasscheck__)                                          ->       1    0.000    0.000  _abcoll.py:98(__subclasshook__)
                                                                                1    0.000    0.000  _weakrefset.py:36(__init__)
                                                                                4    0.000    0.000  _weakrefset.py:58(__iter__)
                                                                                6    0.000    0.000  _weakrefset.py:70(__contains__)
                                                                                1    0.000    0.000  _weakrefset.py:83(add)
                                                                                1    0.000    0.000  {getattr}
                                                                                3    0.000    0.000  {issubclass}
index.py:248(__array__)                                                ->      43    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
fromnumeric.py:803(argsort)                                            ->      12    0.000    0.000  {method 'argsort' of 'numpy.ndarray' objects}
PyMCObjects.py:834(set_value)                                          ->       5    0.000    0.000  PyMCObjects.py:880(fget)
                                                                                5    0.000    0.000  PyMCObjects.py:1046(_get_observed)
                                                                                5    0.000    0.000  numeric.py:464(asanyarray)
                                                                                5    0.000    0.000  {method 'click' of 'pymc.LazyFunction.Counter' objects}
common.py:1961(_possibly_convert_platform)                             ->       1    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {pandas.lib.list_to_object_array}
                                                                                1    0.000    0.000  {pandas.lib.maybe_convert_objects}
internals.py:4168(get_mgr_concatenation_plan)                          ->       2    0.000    0.000  internals.py:119(mgr_locs)
                                                                                2    0.000    0.000  internals.py:2204(shape)
                                                                                2    0.000    0.000  internals.py:2246(_is_single_block)
                                                                                2    0.000    0.000  internals.py:4338(__init__)
                                                                                2    0.000    0.000  {method 'items' of 'dict' objects}
progressbar.py:53(progbar)                                             ->       2    0.000    0.000  progressbar.py:26(percentage)
                                                                                2    0.000    0.000  progressbar.py:58(bar)
                                                                                2    0.000    0.000  {round}
internals.py:4370(is_null)                                             ->       1    0.000    0.000  common.py:212(isnull)
                                                                                1    0.000    0.000  {max}
                                                                                1    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
fromnumeric.py:1291(ravel)                                             ->      15    0.000    0.000  numeric.py:394(asarray)
                                                                               15    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
internals.py:259(iget)                                                 ->
fromnumeric.py:2838(var)                                               ->       1    0.000    0.000  _methods.py:77(_var)
Model.py:616(tally)                                                    ->       1    0.000    0.000  base.py:260(tally)
{built-in method __new__ of type object at 0x7f39ffe8abc0}             ->
numerictypes.py:736(issubdtype)                                        ->      16    0.000    0.000  numerictypes.py:668(issubclass_)
                                                                               16    0.000    0.000  {issubclass}
{setattr}                                                              ->      11    0.000    0.000  generic.py:2152(__setattr__)
algorithms.py:403(_get_data_algo)                                      ->       1    0.000    0.000  common.py:2495(is_integer_dtype)
                                                                                1    0.000    0.000  common.py:2526(is_datetime_or_timedelta_dtype)
                                                                                7    0.000    0.000  common.py:2547(is_float_dtype)
                                                                                6    0.000    0.000  {pandas.algos.ensure_float64}
                                                                                1    0.000    0.000  {pandas.algos.ensure_object}
common.py:2477(is_dtype_equal)                                         ->      46    0.000    0.000  common.py:2461(_get_dtype_type)
fromnumeric.py:1380(nonzero)                                           ->      12    0.000    0.000  {method 'nonzero' of 'numpy.ndarray' objects}
inspect.py:804(getargspec)                                             ->       3    0.000    0.000  <string>:8(__new__)
                                                                                3    0.000    0.000  inspect.py:67(ismethod)
                                                                                3    0.000    0.000  inspect.py:142(isfunction)
                                                                                3    0.000    0.000  inspect.py:744(getargs)
{method 'append' of 'list' objects}                                    ->
qc.py:439(_validate_freq_cols)                                         ->       1    0.000    0.000  qc.py:115(get_cols_from_df)
{pandas.lib.get_reverse_indexer}                                       ->
Model.py:254(_finalize)                                                ->       1    0.000    0.000  Model.py:511(fget)
                                                                                1    0.000    0.000  Model.py:514(fset)
                                                                                1    0.000    0.000  Model.py:772(save_state)
                                                                                1    0.000    0.000  base.py:332(_finalize)
indexing.py:1744(is_list_like_indexer)                                 ->      16    0.000    0.000  common.py:2603(is_list_like)
                                                                               11    0.000    0.000  {isinstance}
base.py:103(_reset_cache)                                              ->       6    0.000    0.000  {getattr}
base.py:260(tally)                                                     ->       3    0.000    0.000  ram.py:86(tally)
                                                                                1    0.000    0.000  {range}
index.py:995(is_all_dates)                                             ->       6    0.000    0.000  index.py:263(values)
                                                                                6    0.000    0.000  {pandas.algos.ensure_object}
                                                                                6    0.000    0.000  {pandas.lib.is_datetime_array}
qc.py:279(_validate_mut_cols)                                          ->       1    0.000    0.000  qc.py:115(get_cols_from_df)
generic.py:2135(__getattr__)                                           ->
frame.py:599(__len__)                                                  ->      25    0.000    0.000  {len}
index.py:602(_set_names)                                               ->       7    0.000    0.000  base.py:218(__getitem__)
                                                                               14    0.000    0.000  {len}
arrayprint.py:700(__init__)                                            ->       2    0.000    0.000  arrayprint.py:533(__init__)
{pandas.lib.clean_index_list}                                          ->
generic.py:1794(_needs_reindex_multi)                                  ->       7    0.000    0.000  common.py:2193(_count_not_none)
                                                                                7    0.000    0.000  {method 'values' of 'dict' objects}
internals.py:220(shape)                                                ->
common.py:2541(is_numeric_dtype)                                       ->      13    0.000    0.000  common.py:2461(_get_dtype_type)
                                                                               26    0.000    0.000  {issubclass}
{method 'iteritems' of 'dict' objects}                                 ->
index.py:218(is_)                                                      ->      47    0.000    0.000  {getattr}
internals.py:2369(__len__)                                             ->      20    0.000    0.000  internals.py:2279(_get_items)
                                                                               20    0.000    0.000  {len}
qc.py:475(_validate_info_cols)                                         ->       1    0.000    0.000  qc.py:115(get_cols_from_df)
lapack.py:255(get_lapack_funcs)                                        ->       1    0.000    0.000  blas.py:226(_get_funcs)
{method 'randn' of 'mtrand.RandomState' objects}                       ->
qc.py:173(_validate_cts_cols)                                          ->       1    0.000    0.000  qc.py:115(get_cols_from_df)
generic.py:386(ndim)                                                   ->      25    0.000    0.000  internals.py:2208(ndim)
{iter}                                                                 ->
blas.py:226(_get_funcs)                                                ->       1    0.000    0.000  blas.py:182(find_best_blas_type)
                                                                                2    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
indexing.py:41(__init__)                                               ->       2    0.000    0.000  base.py:318(ndim)
                                                                                9    0.000    0.000  generic.py:386(ndim)
generic.py:1137(_maybe_update_cacher)                                  ->       6    0.000    0.000  generic.py:1227(_check_setitem_copy)
                                                                                6    0.000    0.000  {getattr}
qc.py:310(_validate_err_cols)                                          ->       1    0.000    0.000  qc.py:115(get_cols_from_df)
generic.py:702(__contains__)                                           ->       6    0.000    0.000  generic.py:366(_info_axis)
                                                                                6    0.000    0.000  index.py:1045(__contains__)
index.py:914(_convert_list_indexer)                                    ->       8    0.000    0.000  common.py:2495(is_integer_dtype)
ram.py:86(tally)                                                       ->       1    0.000    0.000  MCMC.py:188(<lambda>)
                                                                                1    0.000    0.000  Model.py:222(_sum_deviance)
                                                                                1    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                1    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
internals.py:3721(_stack_arrays)                                       ->       1    0.000    0.000  internals.py:3724(_asarray_compat)
                                                                                1    0.000    0.000  internals.py:3730(_shape_compat)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {numpy.core.multiarray.empty}
Node.py:399(__init__)                                                  ->      16    0.000    0.000  {hasattr}
index.py:273(tolist)                                                   ->       7    0.000    0.000  index.py:263(values)
copy.py:306(_reconstruct)                                              ->       2    0.000    0.000  copy_reg.py:92(__newobj__)
                                                                                2    0.000    0.000  {hasattr}
                                                                                2    0.000    0.000  {id}
                                                                                6    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'update' of 'dict' objects}
{method 'update' of 'dict' objects}                                    ->
base.py:232(_initialize)                                               ->       3    0.000    0.000  ram.py:54(_initialize)
                                                                                1    0.000    0.000  six.py:560(iteritems)
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {method 'keys' of 'dict' objects}
series.py:391(__array__)                                               ->       5    0.000    0.000  series.py:319(get_values)
{pandas.algos.ensure_int64}                                            ->
progressbar.py:73(consoleprint)                                        ->       2    0.000    0.000  {method 'lower' of 'str' objects}
                                                                                2    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                                2    0.000    0.000  {print}
common.py:2759(_clean_reindex_fill_method)                             ->      30    0.000    0.000  common.py:2738(_clean_fill_method)
Model.py:772(save_state)                                               ->       1    0.000    0.000  MCMC.py:386(get_state)
                                                                                1    0.000    0.000  base.py:353(savestate)
ops.py:543(na_op)                                                      ->       2    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  {getattr}
Container.py:539(get_value)                                            ->       8    0.000    0.000  {method 'run' of 'pymc.Container_values.DCValue' objects}
{method 'swapaxes' of 'numpy.ndarray' objects}                         ->
defmatrix.py:290(__array_finalize__)                                   ->       1    0.000    0.000  defmatrix.py:290(__array_finalize__)
                                                                               11    0.000    0.000  {isinstance}
{method 'add' of 'pandas.lib.BlockPlacement' objects}                  ->
inspect.py:744(getargs)                                                ->       3    0.000    0.000  inspect.py:209(iscode)
                                                                                3    0.000    0.000  {range}
internals.py:97(is_categorical_astype)                                 ->       7    0.000    0.000  common.py:2569(is_categorical_dtype)
StepMethods.py:197(__init__)                                           ->       1    0.000    0.000  Node.py:131(_get_parents)
                                                                                1    0.000    0.000  PyMCObjects.py:1046(_get_observed)
                                                                                1    0.000    0.000  function_base.py:47(iterable)
                                                                                1    0.000    0.000  six.py:555(itervalues)
                                                                                4    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                3    0.000    0.000  {method 'add' of 'set' objects}
                                                                                1    0.000    0.000  {method 'join' of 'str' objects}
numeric.py:2809(__init__)                                              ->      17    0.000    0.000  {method 'pop' of 'dict' objects}
type_check.py:141(imag)                                                ->      12    0.000    0.000  numeric.py:464(asanyarray)
MCMC.py:386(get_state)                                                 ->       1    0.000    0.000  Model.py:757(get_state)
                                                                                1    0.000    0.000  StepMethods.py:323(current_state)
                                                                                1    0.000    0.000  {method 'copy' of 'dict' objects}
_ni_support.py:70(_get_output)                                         ->       6    0.000    0.000  {numpy.core.multiarray.zeros}
index.py:582(_assert_can_do_setop)                                     ->       8    0.000    0.000  common.py:2603(is_list_like)
{method 'items' of 'dict' objects}                                     ->
index.py:1093(_ensure_compat_append)                                   ->       2    0.000    0.000  index.py:263(values)
                                                                                1    0.000    0.000  index.py:1136(_ensure_compat_concat)
                                                                                5    0.000    0.000  {isinstance}
ram.py:54(_initialize)                                                 ->       1    0.000    0.000  MCMC.py:188(<lambda>)
                                                                                1    0.000    0.000  Model.py:222(_sum_deviance)
                                                                                1    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                3    0.000    0.000  fromnumeric.py:1462(shape)
                                                                                3    0.000    0.000  {numpy.core.multiarray.array}
                                                                                3    0.000    0.000  {numpy.core.multiarray.zeros}
generic.py:1199(_set_is_copy)                                          ->       8    0.000    0.000  generic.py:2152(__setattr__)
groupby.py:2135(is_in_obj)                                             ->       7    0.000    0.000  {id}
progressbar.py:58(bar)                                                 ->       2    0.000    0.000  progressbar.py:69(replace_at)
                                                                                6    0.000    0.000  {len}
indexing.py:1247(_has_valid_type)                                      ->       1    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  index.py:1045(__contains__)
                                                                                1    0.000    0.000  indexing.py:159(_convert_scalar_indexer)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                2    0.000    0.000  {isinstance}
blas.py:182(find_best_blas_type)                                       ->       1    0.000    0.000  numerictypes.py:970(find_common_type)
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                1    0.000    0.000  {method 'index' of 'list' objects}
copy_reg.py:95(_slotnames)                                             ->       2    0.000    0.000  {hasattr}
                                                                                2    0.000    0.000  {method 'get' of 'dictproxy' objects}
series.py:404(__array_prepare__)                                       ->       4    0.000    0.000  series.py:308(values)
                                                                                4    0.000    0.000  {isinstance}
PyMCObjects.py:1065(_get_moral_neighbors)                              ->       4    0.000    0.000  PyMCObjects.py:1055(_get_coparents)
                                                                                4    0.000    0.000  copy.py:66(copy)
                                                                               12    0.000    0.000  {isinstance}
Model.py:522(_assign_database_backend)                                 ->       1    0.000    0.000  Model.py:853(check_valid_object_name)
                                                                                1    0.000    0.000  PyMCObjects.py:880(fget)
                                                                                1    0.000    0.000  ram.py:165(__init__)
                                                                                1    0.000    0.000  {dir}
                                                                                2    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'add' of 'set' objects}
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
common.py:2193(_count_not_none)                                        ->       7    0.000    0.000  {sum}
six.py:560(iteritems)                                                  ->      12    0.000    0.000  {getattr}
                                                                               12    0.000    0.000  {iter}
                                                                               12    0.000    0.000  {method 'iteritems' of 'dict' objects}
{method 'sort' of 'numpy.ndarray' objects}                             ->
indexing.py:1648(check_bool_indexer)                                   ->       1    0.000    0.000  index.py:3434(equals)
                                                                                1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  {isinstance}
internals.py:1258(should_store)                                        ->       5    0.000    0.000  internals.py:228(dtype)
                                                                                5    0.000    0.000  {issubclass}
base.py:218(__getitem__)                                               ->       7    0.000    0.000  {function __getitem__ at 0x7f39e6376b18}
                                                                                7    0.000    0.000  {isinstance}
index.py:773(_convert_scalar_indexer)                                  ->      11    0.000    0.000  {pandas.lib.is_float}
                                                                                2    0.000    0.000  {pandas.lib.is_integer}
{method 'reshape' of 'numpy.ndarray' objects}                          ->       1    0.000    0.000  defmatrix.py:290(__array_finalize__)
series.py:381(__len__)                                                 ->       5    0.000    0.000  {len}
{numpy.core.umath.seterrobj}                                           ->
generic.py:2203(consolidate)                                           ->       2    0.000    0.000  generic.py:2197(_consolidate_inplace)
type_check.py:237(iscomplexobj)                                        ->       6    0.000    0.000  numeric.py:394(asarray)
                                                                                6    0.000    0.000  {issubclass}
internals.py:115(fill_value)                                           ->
{numpy.core.multiarray.result_type}                                    ->
base.py:184(__get__)                                                   ->       1    0.000    0.000  base.py:507(_make_str_accessor)
indexing.py:417(can_do_equal_len)                                      ->       1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  function_base.py:47(iterable)
                                                                                1    0.000    0.000  index.py:1059(__getitem__)
                                                                                3    0.000    0.000  {len}
{print}                                                                ->
base.py:285(connect_model)                                             ->       3    0.000    0.000  ram.py:31(__init__)
                                                                                1    0.000    0.000  six.py:560(iteritems)
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
internals.py:1304(should_store)                                        ->       3    0.000    0.000  common.py:2495(is_integer_dtype)
                                                                                3    0.000    0.000  internals.py:228(dtype)
base.py:507(_make_str_accessor)                                        ->       1    0.000    0.000  common.py:2585(is_object_dtype)
                                                                                1    0.000    0.000  series.py:288(dtype)
                                                                                1    0.000    0.000  strings.py:1059(__init__)
                                                                                2    0.000    0.000  {isinstance}
MCMC.py:135(assign_step_methods)                                       ->       1    0.000    0.000  MCMC.py:405(restore_sm_state)
                                                                                1    0.000    0.000  utils.py:835(crawl_dataless)
                                                                                2    0.000    0.000  {len}
indexing.py:88(_get_loc)                                               ->       2    0.000    0.000  series.py:478(_ixs)
{method 'run' of 'pymc.Container_values.DCValue' objects}              ->      20    0.000    0.000  PyMCObjects.py:823(get_value)
{method 'to_array' of 'pandas.hashtable.Float64Vector' objects}        ->
{open}                                                                 ->
frame.py:4811(extract_index)                                           ->       1    0.000    0.000  index.py:5677(_ensure_index)
                                                                                1    0.000    0.000  index.py:5740(_union_indexes)
                                                                                1    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
index.py:258(dtype)                                                    ->
index.py:312(_coerce_to_ndarray)                                       ->      19    0.000    0.000  {isinstance}
{method 'transpose' of 'numpy.ndarray' objects}                        ->       1    0.000    0.000  defmatrix.py:290(__array_finalize__)
{pandas.algos.ensure_platform_int}                                     ->
index.py:3427(is_all_dates)                                            ->
fromnumeric.py:2633(round_)                                            ->       1    0.000    0.000  fromnumeric.py:40(_wrapit)
internals.py:874(get_values)                                           ->
groupby.py:511(__getattr__)                                            ->
series.py:478(_ixs)                                                    ->       2    0.000    0.000  series.py:308(values)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {pandas.index.get_value_at}
progressbar.py:121(progress_bar)                                       ->       1    0.000    0.000  progressbar.py:42(__init__)
                                                                                1    0.000    0.000  progressbar.py:113(run_from_ipython)
indexing.py:72(_get_label)                                             ->       1    0.000    0.000  generic.py:1368(xs)
                                                                                1    0.000    0.000  {isinstance}
fromnumeric.py:1462(shape)                                             ->       2    0.000    0.000  frame.py:418(shape)
numerictypes.py:668(issubclass_)                                       ->      16    0.000    0.000  {issubclass}
generic.py:280(_from_axes)                                             ->       1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.000  {isinstance}
frame.py:418(shape)                                                    ->       8    0.000    0.000  {len}
Model.py:222(_sum_deviance)                                            ->       4    0.000    0.000  PyMCObjects.py:903(get_logp)
                                                                                2    0.000    0.000  {sum}
groupby.py:1225(__init__)                                              ->       7    0.000    0.000  {len}
PyMCObjects.py:134(attach_parents)                                     ->       3    0.000    0.000  PyMCObjects.py:145(attach_extended_parents)
                                                                                3    0.000    0.000  six.py:555(itervalues)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'add' of 'set' objects}
{pandas.lib.checknull}                                                 ->
indexing.py:1387(_is_valid_integer)                                    ->       2    0.000    0.000  generic.py:318(_get_axis)
                                                                                2    0.000    0.000  {len}
{pandas.lib.is_datetime_array}                                         ->
generic.py:366(_info_axis)                                             ->      13    0.000    0.000  {getattr}
groupby.py:2097(<genexpr>)                                             ->       7    0.000    0.000  {callable}
                                                                                7    0.000    0.000  {isinstance}
index.py:1136(_ensure_compat_concat)                                   ->       1    0.000    0.000  {any}
                                                                                2    0.000    0.000  {isinstance}
StepMethods.py:556(reject)                                             ->       2    0.000    0.000  PyMCObjects.py:895(revert)
indexing.py:165(_convert_slice_indexer)                                ->       1    0.000    0.000  generic.py:318(_get_axis)
                                                                                1    0.000    0.000  index.py:817(_convert_slice_indexer)
                                                                                1    0.000    0.000  {min}
_weakrefset.py:58(__iter__)                                            ->       1    0.000    0.000  _weakrefset.py:16(__init__)
                                                                                1    0.000    0.000  _weakrefset.py:20(__enter__)
                                                                                1    0.000    0.000  _weakrefset.py:26(__exit__)
generic.py:1368(xs)                                                    ->       1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                1    0.000    0.000  generic.py:318(_get_axis)
generic.py:2225(_is_mixed_type)                                        ->       2    0.000    0.000  generic.py:2189(_protect_consolidate)
CommonDeterministics.py:684(new_method)                                ->       1    0.000    0.000  InstantiationDecorators.py:40(check_special_methods)
                                                                                1    0.000    0.000  Node.py:227(__str__)
arrayprint.py:639(__init__)                                            ->       2    0.000    0.000  {len}
                                                                                1    0.000    0.000  {max}
                                                                                2    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
groupby.py:2125(is_in_axis)                                            ->       7    0.000    0.000  groupby.py:2171(_is_label_like)
_abcoll.py:545(update)                                                 ->       6    0.000    0.000  {len}
                                                                                6    0.000    0.000  {method 'items' of 'dict' objects}
Model.py:121(seed)                                                     ->       1    0.000    0.000  Model.py:105(_get_generations)
fromnumeric.py:40(_wrapit)                                             ->       1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {method 'round' of 'numpy.ndarray' objects}
index.py:5843(_ensure_has_len)                                         ->       7    0.000    0.000  {len}
common.py:1169(_maybe_upcast_putmask)                                  ->       1    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
{numpy.core.umath.geterrobj}                                           ->
{min}                                                                  ->
{round}                                                                ->
internals.py:4246(combine_concat_plans)                                ->       1    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'add' of 'pandas.lib.BlockPlacement' objects}
groupby.py:2098(<genexpr>)                                             ->       7    0.000    0.000  {isinstance}
generic.py:1227(_check_setitem_copy)                                   ->
numeric.py:1347(rollaxis)                                              ->
arrayprint.py:465(_formatArray)                                        ->       1    0.000    0.000  arrayprint.py:230(repr_format)
                                                                                1    0.000    0.000  arrayprint.py:457(_extendLine)
                                                                                2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {range}
internals.py:3730(_shape_compat)                                       ->       1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
PyMCObjects.py:1075(_get_markov_blanket)                               ->       2    0.000    0.000  PyMCObjects.py:1065(_get_moral_neighbors)
index_tricks.py:231(_retval)                                           ->
Model.py:757(get_state)                                                ->       1    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                9    0.000    0.000  {getattr}
{numpy.lib._compiled_base.bincount}                                    ->
Model.py:105(_get_generations)                                         ->       1    0.000    0.000  utils.py:858(find_generations)
                                                                                1    0.000    0.000  {hasattr}
progressbar.py:42(__init__)                                            ->       1    0.000    0.000  progressbar.py:20(__init__)
                                                                                1    0.000    0.000  progressbar.py:29(update)
index.py:599(_get_names)                                               ->
learn_model.py:78(sequences)                                          ->
internals.py:4396(get_reindexed_values)                                ->       2    0.000    0.000  internals.py:874(get_values)
                                                                                2    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
index.py:5736(_get_distinct_indexes)                                   ->       3    0.000    0.000  index.py:5737(<genexpr>)
                                                                                1    0.000    0.000  {method 'values' of 'dict' objects}
{map}                                                                  ->       2    0.000    0.000  indexing.py:518(<lambda>)
                                                                                2    0.000    0.000  numeric.py:394(asarray)
frame.py:414(axes)                                                     ->
internals.py:4357(dtype)                                               ->       2    0.000    0.000  internals.py:228(dtype)
                                                                                2    0.000    0.000  internals.py:4348(needs_filling)
internals.py:1542(should_store)                                        ->       1    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                1    0.000    0.000  {issubclass}
PyMCObjects.py:895(revert)                                             ->       2    0.000    0.000  {method 'unclick' of 'pymc.LazyFunction.Counter' objects}
internals.py:2973(value_getitem)                                       ->
internals.py:3724(_asarray_compat)                                     ->       1    0.000    0.000  series.py:308(values)
                                                                                1    0.000    0.000  {isinstance}
ram.py:31(__init__)                                                    ->       3    0.000    0.000  base.py:71(__init__)
{max}                                                                  ->
index.py:587(_convert_can_do_setop)                                    ->       7    0.000    0.000  {isinstance}
PyMCObjects.py:823(get_value)                                          ->
groupby.py:3269(_reindex_output)                                       ->       7    0.000    0.000  {len}
{method 'upper' of 'str' objects}                                      ->
common.py:2443(_coerce_to_dtype)                                       ->       2    0.000    0.000  common.py:2569(is_categorical_dtype)
frame.py:4863(_prep_ndarray)                                           ->       1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  {isinstance}
_weakrefset.py:70(__contains__)                                        ->
six.py:555(itervalues)                                                 ->       4    0.000    0.000  {getattr}
                                                                                4    0.000    0.000  {iter}
                                                                                4    0.000    0.000  {method 'itervalues' of 'dict' objects}
{method 'add' of 'set' objects}                                        ->
frame.py:5092(_homogenize)                                             ->       1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
utils.py:858(find_generations)                                         ->       1    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                2    0.000    0.000  {method 'update' of 'set' objects}
index.py:817(_convert_slice_indexer)                                   ->       1    0.000    0.000  index.py:752(is_integer)
                                                                                3    0.000    0.000  index.py:851(validate)
                                                                                2    0.000    0.000  index.py:871(is_int)
                                                                                3    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {isinstance}
frame.py:189(_constructor)                                             ->
generic.py:2227(<lambda>)                                              ->       2    0.000    0.000  internals.py:2573(is_mixed_type)
base.py:332(_finalize)                                                 ->       3    0.000    0.000  base.py:131(_finalize)
                                                                                1    0.000    0.000  base.py:345(commit)
                                                                                1    0.000    0.000  {range}
PyMCObjects.py:1055(_get_coparents)                                    ->       6    0.000    0.000  {method 'add' of 'set' objects}
generic.py:661(__hash__)                                               ->       1    0.000    0.000  {method 'format' of 'str' objects}
{method 'pop' of 'dict' objects}                                       ->
defmatrix.py:66(asmatrix)                                              ->       2    0.000    0.000  defmatrix.py:244(__new__)
InstantiationDecorators.py:40(check_special_methods)                   ->
indexing.py:139(_is_nested_tuple_indexer)                              ->       1    0.000    0.000  frame.py:414(axes)
                                                                                1    0.000    0.000  {any}
                                                                                2    0.000    0.000  {isinstance}
learn_model.py:81(pymcdf)                                             ->
MCMC.py:405(restore_sm_state)                                          ->       1    0.000    0.000  base.py:358(getstate)
                                                                                2    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                1    0.000    0.000  {method 'update' of 'dict' objects}
PyMCObjects.py:63(extend_parents)                                      ->       4    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'add' of 'set' objects}
PyMCObjects.py:1046(_get_observed)                                     ->
__init__.py:20(new_decorator)                                          ->       1    0.000    0.000  __init__.py:33(shutthefuckup)
                                                                                1    0.000    0.000  {method 'update' of 'dict' objects}
copy.py:113(_copy_with_constructor)                                    ->
groupby.py:2171(_is_label_like)                                        ->       7    0.000    0.000  {isinstance}
groupby.py:1319(names)                                                 ->
Model.py:511(fget)                                                     ->
generic.py:107(_validate_dtype)                                        ->       1    0.000    0.000  common.py:2443(_coerce_to_dtype)
{zip}                                                                  ->
defmatrix.py:928(getT)                                                 ->       1    0.000    0.000  {method 'transpose' of 'numpy.ndarray' objects}
{numpy.core.multiarray.can_cast}                                       ->
frame.py:4432(_get_agg_axis)                                           ->
{method 'values' of 'dict' objects}                                    ->
{pandas.algos.ensure_object}                                           ->
{method 'random_sample' of 'mtrand.RandomState' objects}               ->
{method 'item' of 'numpy.ndarray' objects}                             ->
internals.py:2573(is_mixed_type)                                       ->       2    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                2    0.000    0.000  {len}
inspect.py:67(ismethod)                                                ->       3    0.000    0.000  {isinstance}
{sys.settrace}                                                         ->
{method 'round' of 'numpy.ndarray' objects}                            ->
indexing.py:1748(is_label_like)                                        ->       1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                2    0.000    0.000  {isinstance}
common.py:2738(_clean_fill_method)                                     ->
groupby.py:3865(_intercept_cython)                                     ->       6    0.000    0.000  {method 'get' of 'dict' objects}
StepMethods.py:323(current_state)                                      ->       6    0.000    0.000  {getattr}
index.py:1843(_can_reindex)                                            ->
{pandas.lib.is_bool}                                                   ->
qc.py:408(_validate_mean_cols)                                         ->       1    0.000    0.000  index.py:1045(__contains__)
ram.py:132(__getitem__)                                                ->       1    0.000    0.000  {range}
progressbar.py:26(percentage)                                          ->
index.py:5787(_sanitize_and_check)                                     ->       1    0.000    0.000  {len}
{method 'astype' of 'numpy.generic' objects}                           ->
common.py:2185(_try_sort)                                              ->       1    0.000    0.000  {sorted}
internals.py:3691(<lambda>)                                            ->       1    0.000    0.000  series.py:288(dtype)
common.py:2194(<genexpr>)                                              ->
indexing.py:1731(is_nested_tuple)                                      ->       8    0.000    0.000  {isinstance}
groupby.py:2020(labels)                                                ->
{method 'to_array' of 'pandas.hashtable.ObjectVector' objects}         ->
InstantiationDecorators.py:128(stochastic)                             ->
indexing.py:1584(length_of_indexer)                                    ->       1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
progressbar.py:20(__init__)                                            ->       1    0.000    0.000  {time.time}
function_base.py:47(iterable)                                          ->       2    0.000    0.000  {iter}
internals.py:475(_try_coerce_result)                                   ->
{method 'startswith' of 'str' objects}                                 ->
PyMCObjects.py:880(fget)                                               ->
arrayprint.py:457(_extendLine)                                         ->       2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'rstrip' of 'str' objects}
_weakrefset.py:26(__exit__)                                            ->       1    0.000    0.000  _weakrefset.py:52(_commit_removals)
                                                                                1    0.000    0.000  {method 'remove' of 'set' objects}
qc.py:246(_validate_bin_cols)                                          ->       1    0.000    0.000  index.py:1045(__contains__)
{dir}                                                                  ->
_ni_support.py:38(_extend_mode_to_code)                                ->
{function __getitem__ at 0x7f39e6376b18}                               ->
copy_reg.py:92(__newobj__)                                             ->       2    0.000    0.000  {built-in method __new__ of type object at 0x7f39ffe8abc0}
utils.py:835(crawl_dataless)                                           ->       1    0.000    0.000  {len}
base.py:358(getstate)                                                  ->       1    0.000    0.000  {getattr}
progressbar.py:113(run_from_ipython)                                   ->
index.py:5737(<genexpr>)                                               ->       2    0.000    0.000  {id}
{method 'format' of 'str' objects}                                     ->
<string>:8(__new__)                                                    ->       6    0.000    0.000  {built-in method __new__ of type object at 0x7f39ffe8abc0}
_ni_support.py:90(_check_axis)                                         ->
Model.py:514(fset)                                                     ->
arrayprint.py:689(__init__)                                            ->       2    0.000    0.000  arrayprint.py:661(__init__)
fromnumeric.py:495(transpose)                                          ->       1    0.000    0.000  {method 'transpose' of 'numpy.ndarray' objects}
learn_model.py:181(<dictcomp>)                                        ->       4    0.000    0.000  {len}
qc.py:344(_validate_std_cols)                                          ->       1    0.000    0.000  index.py:1045(__contains__)
{pandas.lib.array_equivalent_object}                                   ->
{method 'get' of 'dictproxy' objects}                                  ->
ram.py:165(__init__)                                                   ->
merge.py:932(_get_result_dim)                                          ->       1    0.000    0.000  generic.py:386(ndim)
inspect.py:142(isfunction)                                             ->       3    0.000    0.000  {isinstance}
base.py:71(__init__)                                                   ->
internals.py:4348(needs_filling)                                       ->       2    0.000    0.000  {method 'values' of 'dict' objects}
{time.time}                                                            ->
{method 'extend' of 'list' objects}                                    ->
MCMC.py:188(<lambda>)                                                  ->       2    0.000    0.000  {getattr}
base.py:318(ndim)                                                      ->
indexing.py:405(<genexpr>)                                             ->       1    0.000    0.000  common.py:2607(is_null_slice)
PyMCObjects.py:145(attach_extended_parents)                            ->       2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'add' of 'set' objects}
internals.py:2442(<genexpr>)                                           ->
StepMethods.py:478(hastings_factor)                                    ->
_weakrefset.py:36(__init__)                                            ->
{id}                                                                   ->
{method 'keys' of 'dict' objects}                                      ->
_weakrefset.py:20(__enter__)                                           ->       1    0.000    0.000  {method 'add' of 'set' objects}
{callable}                                                             ->
common.py:1293(<lambda>)                                               ->
arrayprint.py:716(__init__)                                            ->
indexing.py:1203(_get_slice_axis)                                      ->       1    0.000    0.000  indexing.py:1753(need_slice)
common.py:2607(is_null_slice)                                          ->       3    0.000    0.000  {isinstance}
utils.py:87(choose_dict)                                               ->
inspect.py:209(iscode)                                                 ->       3    0.000    0.000  {isinstance}
arrayprint.py:230(repr_format)                                         ->       1    0.000    0.000  {repr}
{method 'unclick' of 'pymc.LazyFunction.Counter' objects}              ->
_weakrefset.py:83(add)                                                 ->       1    0.000    0.000  {method 'add' of 'set' objects}
progressbar.py:69(replace_at)                                          ->
internals.py:4338(__init__)                                            ->
arrayprint.py:661(__init__)                                            ->
misc.py:126(_datacopied)                                               ->
{pandas.index.convert_scalar}                                          ->
base.py:345(commit)                                                    ->
base.py:353(savestate)                                                 ->
arrayprint.py:744(__init__)                                            ->
_weakrefset.py:52(_commit_removals)                                    ->
indexing.py:1753(need_slice)                                           ->
{repr}                                                                 ->
internals.py:3493(is_consolidated)                                     ->
indexing.py:518(<lambda>)                                              ->       2    0.000    0.000  {isinstance}
Node.py:227(__str__)                                                   ->
InstantiationDecorators.py:36(enable_special_methods)                  ->
Model.py:631(commit)                                                   ->       1    0.000    0.000  base.py:345(commit)
{method 'copy' of 'dict' objects}                                      ->
base.py:131(_finalize)                                                 ->
InstantiationDecorators.py:32(disable_special_methods)                 ->
series.py:474(axes)                                                    ->
Node.py:131(_get_parents)                                              ->
{pandas.index.get_value_at}                                            ->
index.py:871(is_int)                                                   ->
_abcoll.py:98(__subclasshook__)                                        ->
{_functools.reduce}                                                    ->
__init__.py:33(shutthefuckup)                                          ->
_weakrefset.py:16(__init__)                                            ->
indexing.py:170(_has_valid_setitem_indexer)                            ->
Model.py:853(check_valid_object_name)                                  ->       1    0.000    0.000  {method 'append' of 'list' objects}
{method 'index' of 'list' objects}                                     ->
index.py:3413(inferred_type)                                           ->
strings.py:1059(__init__)                                              ->
{method 'update' of 'set' objects}                                     ->
internals.py:467(_try_operate)                                         ->
{method 'rstrip' of 'str' objects}                                     ->
{method 'remove' of 'set' objects}                                     ->
merge.py:1020(_maybe_check_integrity)                                  ->
{method 'lower' of 'str' objects}                                      ->
{method 'join' of 'str' objects}                                       ->
{method 'click' of 'pymc.LazyFunction.Counter' objects}                ->
series.py:237(_constructor)                                            ->
index.py:851(validate)                                                 ->
{method 'disable' of '_lsprof.Profiler' objects}                       ->


