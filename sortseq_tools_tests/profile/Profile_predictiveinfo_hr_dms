Tue Feb  9 22:53:38 2016    profile/Profile_predictiveinfo_dms

         29515396 function calls (29381144 primitive calls) in 243.889 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.016    0.016  243.889  243.889 <string>:1(<module>)
     16/1    1.799    0.112  243.872  243.872 predictiveinfo.py:22(main)
       16    2.629    0.164  231.606   14.475 numerics.py:37(dataset2mutarray)
     6749    0.120    0.000  194.656    0.029 lil.py:272(__setitem__)
     6749  193.522    0.029  193.522    0.029 {scipy.sparse._csparsetools.lil_fancy_set}
       16    8.758    0.547    8.874    0.555 lil.py:88(__init__)
     6765    8.799    0.001    8.799    0.001 {src.fast.seqs2array_for_matmodel}
       16    3.204    0.200    7.701    0.481 lil.py:378(tocsr)
       16    0.004    0.000    4.612    0.288 profile_mut.py:16(main)
       16    0.095    0.006    4.198    0.262 profile_ct.py:14(main)
135349/126901    3.345    0.000    3.400    0.000 {numpy.core.multiarray.array}
    70857    0.052    0.000    3.360    0.000 numeric.py:394(asarray)
       16    0.347    0.022    3.343    0.209 EstimateMutualInfoforMImax.py:195(alt4)
    49467    3.297    0.000    3.297    0.000 {method 'copy' of 'numpy.ndarray' objects}
    15229    0.116    0.000    2.466    0.000 series.py:519(__getitem__)
    37735    0.111    0.000    2.466    0.000 series.py:2068(_reduce)
     9584    0.098    0.000    2.339    0.000 ops.py:574(wrapper)
       15    0.000    0.000    2.149    0.143 generic.py:1955(sample)
      239    0.032    0.000    1.949    0.008 internals.py:3255(take)
    28903    0.042    0.000    1.909    0.000 generic.py:4243(stat_func)
      255    0.003    0.000    1.860    0.007 internals.py:3124(reindex_indexer)
      830    0.031    0.000    1.809    0.002 common.py:756(take_nd)
      414    0.006    0.000    1.809    0.004 internals.py:845(take_nd)
    57668    0.362    0.000    1.732    0.000 series.py:119(__init__)
    28887    0.081    0.000    1.633    0.000 nanops.py:38(_f)
       32    0.001    0.000    1.623    0.051 frame.py:2917(sort_index)
       15    1.618    0.108    1.618    0.108 {method 'choice' of 'mtrand.RandomState' objects}
       16    0.000    0.000    1.616    0.101 frame.py:2881(sort)
    28903    0.057    0.000    1.374    0.000 nanops.py:63(f)
    15165    0.059    0.000    1.368    0.000 series.py:563(_get_with)
       16    0.001    0.000    1.359    0.085 series.py:2020(apply)
       32    1.356    0.042    1.356    0.042 {pandas.lib.map_infer}
    43356    0.019    0.000    1.342    0.000 common.py:212(isnull)
    43356    0.084    0.000    1.323    0.000 common.py:233(_isnull_new)
    23340    0.060    0.000    1.292    0.000 nanops.py:243(nansum)
    32268    0.149    0.000    1.287    0.000 nanops.py:153(_get_values)
    15165    0.068    0.000    1.163    0.000 series.py:626(_get_values)
       63    1.135    0.018    1.135    0.018 {pandas.algos.take_2d_axis1_object_object}
    41708    0.431    0.000    1.120    0.000 common.py:303(_isnull_ndarraylike)
      207    0.003    0.000    1.112    0.005 generic.py:1339(take)
 13483234    1.079    0.000    1.079    0.000 {method 'extend' of 'list' objects}
    10845    0.072    0.000    0.922    0.000 frame.py:1774(__getitem__)
    58004    0.172    0.000    0.887    0.000 internals.py:3343(__init__)
    15165    0.080    0.000    0.873    0.000 internals.py:3437(get_slice)
  1765222    0.534    0.000    0.740    0.000 {isinstance}
       32    0.070    0.002    0.733    0.023 groupby.py:3696(_nargsort)
     6749    0.080    0.000    0.705    0.000 sputils.py:330(_index_to_arrays)
    20423    0.052    0.000    0.675    0.000 frame.py:556(iterrows)
    59396    0.207    0.000    0.649    0.000 internals.py:2073(make_block)
     1441    0.012    0.000    0.647    0.000 internals.py:2396(apply)
      192    0.002    0.000    0.645    0.003 frame.py:1816(_getitem_array)
       96    0.641    0.007    0.641    0.007 {method 'argsort' of 'numpy.ndarray' objects}
     8912    0.016    0.000    0.633    0.000 generic.py:4294(logical_func)
     8912    0.012    0.000    0.544    0.000 nanops.py:233(nanany)
    15229    0.115    0.000    0.541    0.000 index.py:1582(get_value)
      401    0.002    0.000    0.526    0.001 generic.py:2414(copy)
    13498    0.202    0.000    0.525    0.000 stride_tricks.py:37(broadcast_arrays)
    39831    0.148    0.000    0.521    0.000 series.py:2596(_sanitize_array)
      401    0.002    0.000    0.519    0.001 internals.py:2674(copy)
7376492/7251169    0.449    0.000    0.508    0.000 {len}
      914    0.003    0.000    0.452    0.000 internals.py:504(copy)
       64    0.001    0.000    0.433    0.007 qc.py:162(_validate_cols)
       16    0.000    0.000    0.410    0.026 groupby.py:2634(aggregate)
       16    0.000    0.000    0.409    0.026 groupby.py:105(f)
       16    0.000    0.000    0.406    0.025 groupby.py:2559(_cython_agg_general)
     8464    0.020    0.000    0.403    0.000 fromnumeric.py:1631(sum)
       16    0.001    0.000    0.401    0.025 groupby.py:2586(_cython_agg_blocks)
       16    0.008    0.001    0.394    0.025 numerics.py:99(eval_modelmatrix_on_mutarray)
       16    0.001    0.000    0.391    0.024 qc.py:952(validate_profile_ct)
    17757    0.074    0.000    0.381    0.000 index.py:1059(__getitem__)
       64    0.013    0.000    0.371    0.006 qc.py:290(_validate_cts_cols)
    62922    0.337    0.000    0.337    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       79    0.323    0.004    0.323    0.004 {pandas.algos.take_2d_axis1_int64_int64}
    59396    0.146    0.000    0.323    0.000 internals.py:64(__init__)
       16    0.000    0.000    0.320    0.020 base.py:282(__mul__)
       16    0.001    0.000    0.319    0.020 compressed.py:473(_mul_sparse_matrix)
       16    0.000    0.000    0.283    0.018 base.py:34(__str__)
       16    0.000    0.000    0.283    0.018 base.py:46(__bytes__)
       16    0.000    0.000    0.282    0.018 frame.py:489(__unicode__)
       16    0.000    0.000    0.279    0.017 frame.py:1316(to_string)
    95028    0.105    0.000    0.268    0.000 {pandas.lib.values_from_object}
   159346    0.123    0.000    0.265    0.000 {hasattr}
    65563    0.160    0.000    0.257    0.000 common.py:2569(is_categorical_dtype)
    46824    0.029    0.000    0.253    0.000 {method 'sum' of 'numpy.ndarray' objects}
    79067    0.055    0.000    0.243    0.000 series.py:308(values)
      336    0.001    0.000    0.242    0.001 indexing.py:113(__setitem__)
    41421    0.030    0.000    0.239    0.000 series.py:319(get_values)
       16    0.001    0.000    0.239    0.015 format.py:497(to_string)
    13498    0.154    0.000    0.236    0.000 stride_tricks.py:23(as_strided)
     8061    0.062    0.000    0.234    0.000 series.py:1003(__iter__)
    46888    0.021    0.000    0.224    0.000 _methods.py:31(_sum)
    16286    0.052    0.000    0.222    0.000 index.py:343(_shallow_copy)
      336    0.010    0.000    0.220    0.001 indexing.py:199(_setitem_with_indexer)
  800/768    0.002    0.000    0.217    0.000 frame.py:2114(__setitem__)
   261105    0.150    0.000    0.216    0.000 common.py:2461(_get_dtype_type)
     9584    0.046    0.000    0.212    0.000 ops.py:543(na_op)
       32    0.001    0.000    0.212    0.007 groupby.py:1482(aggregate)
       16    0.212    0.013    0.212    0.013 {scipy.sparse._sparsetools.csr_matmat_pass2}
      176    0.003    0.000    0.211    0.001 internals.py:3168(_slice_take_blocks_ax0)
    41421    0.090    0.000    0.209    0.000 internals.py:3481(get_values)
   169646    0.099    0.000    0.206    0.000 common.py:70(_check)
      784    0.003    0.000    0.203    0.000 frame.py:2192(_set_item)
    39815    0.042    0.000    0.202    0.000 series.py:2611(_try_cast)
345071/344975    0.169    0.000    0.196    0.000 {getattr}
    79067    0.066    0.000    0.188    0.000 internals.py:3477(values)
     6749    0.104    0.000    0.184    0.000 sputils.py:245(_unpack_index)
    15165    0.018    0.000    0.181    0.000 common.py:2416(is_iterator)
       16    0.000    0.000    0.178    0.011 groupby.py:3214(_get_data_to_aggregate)
       16    0.000    0.000    0.178    0.011 groupby.py:2624(_obj_with_exclusions)
       16    0.000    0.000    0.177    0.011 generic.py:1566(drop)
       16    0.000    0.000    0.173    0.011 frame.py:2508(reindex)
       16    0.000    0.000    0.173    0.011 generic.py:1739(reindex)
       16    0.000    0.000    0.172    0.011 frame.py:2459(_reindex_axes)
       16    0.000    0.000    0.172    0.011 frame.py:2482(_reindex_columns)
      255    0.002    0.000    0.171    0.001 index.py:1148(take)
       16    0.000    0.000    0.171    0.011 generic.py:1854(_reindex_with_indexers)
    15229    0.169    0.000    0.169    0.000 {method 'get_value' of 'pandas.index.IndexEngine' objects}
      336    0.003    0.000    0.168    0.001 indexing.py:397(setter)
    57668    0.116    0.000    0.158    0.000 series.py:257(_set_axis)
     8784    0.018    0.000    0.157    0.000 indexing.py:1648(check_bool_indexer)
    11934    0.157    0.000    0.157    0.000 {numpy.core.multiarray.empty}
    29383    0.019    0.000    0.150    0.000 {any}
    23356    0.044    0.000    0.147    0.000 nanops.py:591(_maybe_null_out)
      784    0.003    0.000    0.147    0.000 generic.py:1195(_set_item)
    34848    0.086    0.000    0.146    0.000 generic.py:2135(__getattr__)
    10653    0.022    0.000    0.146    0.000 frame.py:1799(_getitem_column)
       16    0.002    0.000    0.144    0.009 format.py:420(_to_str_columns)
      784    0.023    0.000    0.141    0.000 internals.py:2943(set)
    25069    0.049    0.000    0.141    0.000 common.py:2121(is_bool_indexer)
      287    0.139    0.000    0.139    0.000 {method 'take' of 'numpy.ndarray' objects}
   581529    0.136    0.000    0.136    0.000 {issubclass}
    32844    0.073    0.000    0.133    0.000 common.py:2440(is_datetimelike)
       16    0.000    0.000    0.131    0.008 groupby.py:1382(ngroups)
       16    0.000    0.000    0.131    0.008 groupby.py:1393(result_index)
    86725    0.048    0.000    0.131    0.000 nanops.py:41(<genexpr>)
    32268    0.016    0.000    0.130    0.000 nanops.py:210(_view_if_needed)
       32    0.000    0.000    0.130    0.004 groupby.py:2026(group_index)
       16    0.000    0.000    0.130    0.008 groupby.py:2032(_make_labels)
       16    0.006    0.000    0.129    0.008 algorithms.py:98(factorize)
    10653    0.020    0.000    0.124    0.000 generic.py:1079(_get_item_cache)
    59780    0.100    0.000    0.123    0.000 internals.py:141(mgr_locs)
   139074    0.075    0.000    0.120    0.000 internals.py:3394(_values)
    60007    0.037    0.000    0.117    0.000 series.py:288(dtype)
       32    0.116    0.004    0.116    0.004 {pandas.algos.take_2d_axis0_object_object}
     8400    0.116    0.000    0.116    0.000 {pandas.lib.scalar_compare}
    32300    0.025    0.000    0.114    0.000 common.py:2526(is_datetime_or_timedelta_dtype)
    51514    0.087    0.000    0.111    0.000 numeric.py:1910(isscalar)
    16845    0.059    0.000    0.107    0.000 index.py:204(_simple_new)
       16    0.107    0.007    0.107    0.007 {method 'get_labels' of 'pandas.hashtable.Float64HashTable' objects}
     6797    0.057    0.000    0.106    0.000 index.py:817(_convert_slice_indexer)
     9504    0.070    0.000    0.106    0.000 common.py:1974(_possibly_cast_to_datetime)
    13825    0.011    0.000    0.106    0.000 {method 'any' of 'numpy.ndarray' objects}
      336    0.001    0.000    0.104    0.000 internals.py:2482(setitem)
    13498    0.019    0.000    0.104    0.000 sputils.py:238(_slicetoarange)
    15833    0.103    0.000    0.103    0.000 {numpy.core.multiarray.arange}
     8493    0.034    0.000    0.102    0.000 internals.py:1442(__init__)
       16    0.101    0.006    0.101    0.006 {scipy.sparse._sparsetools.csr_matmat_pass1}
      336    0.086    0.000    0.099    0.000 internals.py:529(setitem)
    58180    0.098    0.000    0.098    0.000 generic.py:90(__init__)
    13825    0.008    0.000    0.095    0.000 _methods.py:37(_any)
      160    0.007    0.000    0.092    0.001 format.py:2196(_make_fixed_width)
    29933    0.086    0.000    0.092    0.000 index.py:1045(__contains__)
    23356    0.019    0.000    0.091    0.000 nanops.py:216(_wrap_results)
    32284    0.018    0.000    0.090    0.000 nanops.py:206(_na_ok_dtype)
    27126    0.090    0.000    0.090    0.000 {range}
       16    0.011    0.001    0.088    0.005 StringIO.py:241(writelines)
   124652    0.084    0.000    0.084    0.000 {method 'view' of 'numpy.ndarray' objects}
    57838    0.036    0.000    0.083    0.000 nanops.py:33(check)
    60007    0.033    0.000    0.080    0.000 internals.py:3453(dtype)
    50158    0.057    0.000    0.077    0.000 StringIO.py:208(write)
      400    0.001    0.000    0.076    0.000 strings.py:1299(slice)
       32    0.001    0.000    0.073    0.002 qc.py:618(validate_dataset)
    17856    0.026    0.000    0.072    0.000 common.py:2443(_coerce_to_dtype)
       80    0.001    0.000    0.071    0.001 format.py:1903(format_array)
    32284    0.036    0.000    0.071    0.000 common.py:2501(is_int_or_datetime_dtype)
       64    0.000    0.000    0.070    0.001 format.py:687(_format_col)
     8864    0.070    0.000    0.070    0.000 {pandas.lib.isnullobj}
    41788    0.029    0.000    0.070    0.000 common.py:2507(is_datetime64_dtype)
       32    0.000    0.000    0.069    0.002 groupby.py:1566(_aggregate)
       32    0.068    0.002    0.069    0.002 {pandas.algos.group_add_float64}
    13498    0.048    0.000    0.068    0.000 sputils.py:311(_check_boolean)
    52835    0.032    0.000    0.068    0.000 common.py:2547(is_float_dtype)
       80    0.000    0.000    0.068    0.001 format.py:1945(get_result)
    38229    0.053    0.000    0.066    0.000 generic.py:292(_get_axis_number)
   195660    0.065    0.000    0.065    0.000 internals.py:3390(_block)
    41421    0.031    0.000    0.064    0.000 internals.py:112(to_dense)
      352    0.002    0.000    0.062    0.000 internals.py:272(delete)
    29367    0.060    0.000    0.060    0.000 {numpy.core.multiarray.putmask}
    38391    0.024    0.000    0.059    0.000 common.py:2516(is_timedelta64_dtype)
     9600    0.028    0.000    0.059    0.000 format.py:2216(just)
       16    0.000    0.000    0.058    0.004 frame.py:2133(_setitem_array)
       16    0.000    0.000    0.057    0.004 compressed.py:938(toarray)
    16286    0.053    0.000    0.057    0.000 index.py:327(_get_attributes_dict)
      560    0.005    0.000    0.056    0.000 internals.py:2163(__init__)
       16    0.000    0.000    0.056    0.004 ops.py:884(f)
       16    0.000    0.000    0.056    0.004 frame.py:3175(_combine_series)
      720    0.041    0.000    0.056    0.000 function_base.py:3427(delete)
       16    0.001    0.000    0.056    0.004 frame.py:3205(_combine_match_index)
   113311    0.044    0.000    0.055    0.000 index.py:242(__len__)
     1151    0.001    0.000    0.055    0.000 internals.py:2837(_consolidate_inplace)
       16    0.001    0.000    0.052    0.003 info.py:15(mutualinfo)
      832    0.007    0.000    0.052    0.000 indexing.py:1007(_convert_to_indexer)
    23104    0.012    0.000    0.050    0.000 format.py:263(_strlen)
     1632    0.006    0.000    0.050    0.000 internals.py:2844(get)
      207    0.044    0.000    0.050    0.000 indexing.py:1695(maybe_convert_indices)
       48    0.001    0.000    0.050    0.001 internals.py:3809(_consolidate)
       16    0.000    0.000    0.049    0.003 ops.py:811(na_op)
       48    0.000    0.000    0.049    0.001 expressions.py:199(evaluate)
      784    0.005    0.000    0.049    0.000 frame.py:2315(_sanitize_column)
       48    0.000    0.000    0.049    0.001 expressions.py:99(_evaluate_numexpr)
    39815    0.048    0.000    0.048    0.000 common.py:1949(_possibly_castable)
    44390    0.023    0.000    0.048    0.000 index.py:5677(_ensure_index)
       80    0.022    0.000    0.047    0.001 internals.py:3830(_merge_blocks)
       16    0.046    0.003    0.047    0.003 necompiler.py:688(evaluate)
      688    0.003    0.000    0.045    0.000 generic.py:2394(astype)
       32    0.000    0.000    0.044    0.001 merge.py:700(concat)
    32604    0.021    0.000    0.044    0.000 common.py:2495(is_integer_dtype)
       16    0.039    0.002    0.043    0.003 npyio.py:852(savetxt)
     8784    0.006    0.000    0.041    0.000 series.py:391(__array__)
    16989    0.033    0.000    0.041    0.000 generic.py:2118(__finalize__)
      400    0.001    0.000    0.041    0.000 strings.py:768(str_slice)
    16794    0.023    0.000    0.041    0.000 numerictypes.py:736(issubdtype)
       16    0.000    0.000    0.041    0.003 compressed.py:915(tocoo)
      400    0.001    0.000    0.041    0.000 strings.py:119(_na_map)
     6749    0.040    0.000    0.040    0.000 {scipy.sparse._csparsetools.prepare_index_for_memoryview}
      400    0.003    0.000    0.040    0.000 strings.py:124(_map)
       32    0.040    0.001    0.040    0.001 {pandas.algos.take_2d_axis1_float64_float64}
    29783    0.020    0.000    0.040    0.000 common.py:2557(is_bool_dtype)
      431    0.038    0.000    0.040    0.000 {sum}
     9359    0.008    0.000    0.039    0.000 index.py:3434(equals)
       16    0.000    0.000    0.039    0.002 format.py:307(__init__)
      608    0.017    0.000    0.039    0.000 internals.py:2258(_rebuild_blknos_and_blklocs)
       16    0.000    0.000    0.039    0.002 format.py:349(_chk_truncate)
     1632    0.005    0.000    0.038    0.000 frame.py:2102(_box_item_values)
     8928    0.010    0.000    0.038    0.000 generic.py:107(_validate_dtype)
     8317    0.010    0.000    0.038    0.000 common.py:2565(is_categorical)
       32    0.001    0.000    0.037    0.001 coo.py:116(__init__)
     1696    0.011    0.000    0.035    0.000 internals.py:2872(iget)
     8605    0.005    0.000    0.035    0.000 series.py:381(__len__)
      688    0.002    0.000    0.034    0.000 internals.py:2503(astype)
      400    0.005    0.000    0.034    0.000 strings.py:1077(_wrap_result)
     6749    0.032    0.000    0.033    0.000 sputils.py:273(_check_ellipsis)
     1858    0.007    0.000    0.033    0.000 {all}
       16    0.000    0.000    0.033    0.002 qc.py:1095(validate_profile_mut)
      784    0.033    0.000    0.033    0.000 {numpy.core.multiarray.concatenate}
    57668    0.032    0.000    0.032    0.000 series.py:277(_set_subtyp)
      752    0.005    0.000    0.031    0.000 qc.py:155(get_cols_from_df)
    28887    0.020    0.000    0.031    0.000 __init__.py:143(itervalues)
       32    0.001    0.000    0.030    0.001 merge.py:763(__init__)
    43356    0.030    0.000    0.030    0.000 {pandas.lib.isscalar}
     7008    0.010    0.000    0.029    0.000 qc.py:128(is_col_type)
       32    0.001    0.000    0.028    0.001 coo.py:241(_check)
    40638    0.015    0.000    0.028    0.000 base.py:865(isspmatrix)
       64    0.005    0.000    0.028    0.000 qc.py:183(_validate_seqs_cols)
      512    0.004    0.000    0.028    0.000 frame.py:200(__init__)
    15261    0.027    0.000    0.027    0.000 internals.py:177(_slice)
    18240    0.010    0.000    0.027    0.000 {method 'decode' of 'str' objects}
      128    0.026    0.000    0.026    0.000 {pandas.algos.take_2d_axis0_int64_int64}
    12496    0.007    0.000    0.026    0.000 re.py:143(search)
    16845    0.016    0.000    0.025    0.000 __init__.py:124(iteritems)
      319    0.001    0.000    0.024    0.000 common.py:407(array_equivalent)
      495    0.008    0.000    0.024    0.000 index.py:109(__new__)
     1632    0.003    0.000    0.024    0.000 frame.py:2109(_box_col_values)
       16    0.000    0.000    0.024    0.001 format.py:771(_get_formatted_index)
     8925    0.011    0.000    0.024    0.000 internals.py:2369(__len__)
  256/192    0.000    0.000    0.023    0.000 indexing.py:1185(__getitem__)
     2206    0.004    0.000    0.023    0.000 internals.py:128(make_block_same_class)
    23104    0.008    0.000    0.023    0.000 utf_8.py:15(decode)
      688    0.001    0.000    0.023    0.000 internals.py:371(astype)
       48    0.000    0.000    0.023    0.000 internals.py:3866(_vstack)
       48    0.000    0.000    0.023    0.000 shape_base.py:179(vstack)
      112    0.020    0.000    0.022    0.000 numeric.py:2328(array_equal)
      720    0.002    0.000    0.022    0.000 frame.py:2319(reindexer)
     1696    0.004    0.000    0.022    0.000 series.py:227(from_array)
     2917    0.002    0.000    0.022    0.000 common.py:1169(_maybe_upcast_putmask)
      688    0.004    0.000    0.022    0.000 internals.py:375(_astype)
     9441    0.022    0.000    0.022    0.000 {pandas.lib.infer_dtype}
      336    0.001    0.000    0.021    0.000 indexing.py:94(_get_setitem_indexer)
      400    0.016    0.000    0.021    0.000 {pandas.lib.map_infer_mask}
       17    0.000    0.000    0.021    0.001 fromnumeric.py:2737(std)
       17    0.000    0.000    0.020    0.001 _methods.py:123(_std)
       17    0.012    0.001    0.020    0.001 _methods.py:77(_var)
       31    0.000    0.000    0.020    0.001 frame.py:2630(reset_index)
     1183    0.002    0.000    0.020    0.000 generic.py:2189(_protect_consolidate)
    14330    0.015    0.000    0.019    0.000 index.py:752(is_integer)
     2894    0.010    0.000    0.019    0.000 internals.py:2204(shape)
      336    0.002    0.000    0.019    0.000 indexing.py:144(_convert_tuple)
      352    0.002    0.000    0.019    0.000 {method 'delete' of 'pandas.lib.BlockPlacement' objects}
      783    0.001    0.000    0.018    0.000 generic.py:2197(_consolidate_inplace)
       80    0.001    0.000    0.018    0.000 frame.py:4299(_reduce)
       80    0.018    0.000    0.018    0.000 {pandas.algos.take_2d_axis0_float64_float64}
      256    0.001    0.000    0.018    0.000 indexing.py:1449(_getitem_axis)
      384    0.000    0.000    0.017    0.000 _methods.py:25(_amax)
    66642    0.017    0.000    0.017    0.000 internals.py:119(mgr_locs)
       96    0.000    0.000    0.016    0.000 indexing.py:1408(_getitem_tuple)
     4880    0.005    0.000    0.016    0.000 index.py:1553(get_loc)
      192    0.002    0.000    0.016    0.000 index.py:1643(get_indexer)
      783    0.001    0.000    0.016    0.000 generic.py:2199(f)
       16    0.000    0.000    0.016    0.001 fromnumeric.py:1925(cumsum)
       16    0.016    0.001    0.016    0.001 {method 'cumsum' of 'numpy.ndarray' objects}
       16    0.000    0.000    0.015    0.001 coo.py:272(toarray)
    23104    0.015    0.000    0.015    0.000 {_codecs.utf_8_decode}
    16896    0.008    0.000    0.015    0.000 generic.py:366(_info_axis)
       32    0.000    0.000    0.015    0.000 index.py:1175(format)
       32    0.000    0.000    0.015    0.000 index.py:1190(_format_with_header)
    16794    0.008    0.000    0.014    0.000 numerictypes.py:668(issubclass_)
       16    0.002    0.000    0.014    0.001 format.py:1949(_format_strings)
    16845    0.014    0.000    0.014    0.000 index.py:237(_reset_identity)
     4974    0.012    0.000    0.014    0.000 generic.py:2152(__setattr__)
    96/64    0.001    0.000    0.014    0.000 compressed.py:24(__init__)
      160    0.000    0.000    0.014    0.000 {method 'max' of 'numpy.ndarray' objects}
       32    0.000    0.000    0.014    0.000 merge.py:888(get_result)
    20247    0.011    0.000    0.013    0.000 index.py:851(validate)
      336    0.001    0.000    0.013    0.000 series.py:397(__array_wrap__)
      783    0.001    0.000    0.013    0.000 internals.py:2821(consolidate)
       64    0.000    0.000    0.013    0.000 qc.py:396(_validate_mut_cols)
       64    0.000    0.000    0.013    0.000 {method 'min' of 'numpy.ndarray' objects}
       64    0.000    0.000    0.013    0.000 _methods.py:28(_amin)
       32    0.000    0.000    0.012    0.000 internals.py:4044(concatenate_block_managers)
      416    0.012    0.000    0.012    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
      592    0.008    0.000    0.012    0.000 common.py:2347(_asarray_tuplesafe)
    53736    0.012    0.000    0.012    0.000 {method 'get' of 'dict' objects}
      526    0.005    0.000    0.011    0.000 common.py:1105(_maybe_promote)
    12496    0.011    0.000    0.011    0.000 re.py:230(_compile)
     1696    0.004    0.000    0.011    0.000 generic.py:1093(_set_as_cached)
      368    0.000    0.000    0.011    0.000 internals.py:479(_try_coerce_and_cast_result)
       64    0.001    0.000    0.011    0.000 internals.py:3060(insert)
    13498    0.011    0.000    0.011    0.000 {method 'indices' of 'slice' objects}
    13498    0.011    0.000    0.011    0.000 stride_tricks.py:19(__init__)
      368    0.001    0.000    0.011    0.000 internals.py:435(_try_cast_result)
       80    0.000    0.000    0.011    0.000 frame.py:4302(<lambda>)
      960    0.002    0.000    0.011    0.000 format.py:1961(_format)
    67304    0.010    0.000    0.010    0.000 {pandas.lib.is_integer}
     1648    0.001    0.000    0.010    0.000 {method 'all' of 'numpy.ndarray' objects}
       15    0.010    0.001    0.010    0.001 common.py:3352(_random_state)
       16    0.010    0.001    0.010    0.001 {scipy.sparse._sparsetools.coo_todense}
     4864    0.004    0.000    0.010    0.000 {method 'decode' of 'unicode' objects}
      112    0.000    0.000    0.010    0.000 indexing.py:1437(_get_slice_axis)
    37293    0.009    0.000    0.009    0.000 index.py:3427(is_all_dates)
     8682    0.003    0.000    0.009    0.000 internals.py:2206(<genexpr>)
       32    0.000    0.000    0.009    0.000 frame.py:4791(_arrays_to_mgr)
     3326    0.003    0.000    0.009    0.000 generic.py:318(_get_axis)
     1648    0.001    0.000    0.009    0.000 _methods.py:40(_all)
    31338    0.009    0.000    0.009    0.000 internals.py:3444(index)
     9216    0.009    0.000    0.009    0.000 {method 'reshape' of 'numpy.ndarray' objects}
    16292    0.009    0.000    0.009    0.000 {method 'update' of 'dict' objects}
     1952    0.006    0.000    0.009    0.000 internals.py:3935(_get_blkno_placements)
      784    0.001    0.000    0.009    0.000 config.py:221(__call__)
     8912    0.009    0.000    0.009    0.000 {pandas.index.convert_scalar}
    16845    0.009    0.000    0.009    0.000 {built-in method __new__ of type object at 0x7fdc20fb1bc0}
       48    0.009    0.000    0.009    0.000 {pandas.algos.ensure_float64}
      336    0.003    0.000    0.009    0.000 common.py:2683(_astype_nansafe)
       48    0.000    0.000    0.009    0.000 indexing.py:91(_slice)
    72762    0.009    0.000    0.009    0.000 {method 'append' of 'list' objects}
       48    0.000    0.000    0.009    0.000 generic.py:1178(_slice)
     1024    0.002    0.000    0.008    0.000 common.py:3205(pprint_thing)
      399    0.003    0.000    0.008    0.000 internals.py:2384(_verify_integrity)
      960    0.001    0.000    0.008    0.000 format.py:1959(<lambda>)
    27604    0.008    0.000    0.008    0.000 base.py:93(get_shape)
      784    0.001    0.000    0.008    0.000 config.py:96(_get_option)
      466    0.000    0.000    0.008    0.000 internals.py:2694(<lambda>)
      560    0.003    0.000    0.008    0.000 common.py:2049(_possibly_infer_to_datetimelike)
     1008    0.008    0.000    0.008    0.000 {method 'astype' of 'numpy.ndarray' objects}
     9615    0.007    0.000    0.008    0.000 index.py:218(is_)
       32    0.001    0.000    0.008    0.000 frame.py:343(_init_ndarray)
     6749    0.004    0.000    0.008    0.000 index.py:810(_convert_slice_indexer_getitem)
       96    0.001    0.000    0.008    0.000 indexing.py:799(_getitem_lowerdim)
      466    0.001    0.000    0.008    0.000 index.py:331(view)
       32    0.000    0.000    0.008    0.000 internals.py:3553(create_block_manager_from_arrays)
       64    0.001    0.000    0.008    0.000 index.py:2531(insert)
      352    0.002    0.000    0.007    0.000 common.py:1285(_possibly_downcast_to_dtype)
     6768    0.007    0.000    0.007    0.000 {zip}
    12496    0.007    0.000    0.007    0.000 {method 'search' of '_sre.SRE_Pattern' objects}
       48    0.001    0.000    0.007    0.000 internals.py:2647(get_slice)
       64    0.001    0.000    0.007    0.000 qc.py:329(_validate_pos_cols)
    13498    0.006    0.000    0.007    0.000 index.py:871(is_int)
      624    0.003    0.000    0.007    0.000 internals.py:2568(_consolidate_check)
      400    0.000    0.000    0.007    0.000 base.py:184(__get__)
    32268    0.007    0.000    0.007    0.000 nanops.py:130(_get_fill_value)
       16    0.007    0.000    0.007    0.000 internals.py:262(set)
       16    0.006    0.000    0.006    0.000 {scipy.sparse._sparsetools.expandptr}
     1232    0.004    0.000    0.006    0.000 shape_base.py:60(atleast_2d)
      400    0.004    0.000    0.006    0.000 base.py:507(_make_str_accessor)
       16    0.001    0.000    0.006    0.000 format.py:553(_join_multiline)
       64    0.000    0.000    0.006    0.000 internals.py:4144(concatenate_join_units)
      976    0.002    0.000    0.006    0.000 indexing.py:159(_convert_scalar_indexer)
     9936    0.006    0.000    0.006    0.000 {method 'ravel' of 'numpy.ndarray' objects}
      992    0.003    0.000    0.006    0.000 indexing.py:1612(convert_to_index_sliceable)
     4880    0.006    0.000    0.006    0.000 {method 'get_loc' of 'pandas.index.IndexEngine' objects}
     7282    0.006    0.000    0.006    0.000 {max}
      784    0.001    0.000    0.006    0.000 config.py:78(_get_single_key)
      832    0.004    0.000    0.006    0.000 numeric.py:588(require)
       16    0.001    0.000    0.006    0.000 format.py:719(_get_formatted_column_labels)
    16845    0.006    0.000    0.006    0.000 {method 'iteritems' of 'dict' objects}
     7680    0.003    0.000    0.005    0.000 format.py:2214(<lambda>)
      256    0.002    0.000    0.005    0.000 sputils.py:132(get_index_dtype)
     3358    0.004    0.000    0.005    0.000 generic.py:305(_get_axis_name)
      193    0.005    0.000    0.005    0.000 {numpy.core.multiarray.zeros}
       96    0.002    0.000    0.005    0.000 compressed.py:126(check_format)
       32    0.002    0.000    0.005    0.000 common.py:2202(adjoin)
       32    0.001    0.000    0.005    0.000 internals.py:3563(form_blocks)
    50174    0.005    0.000    0.005    0.000 StringIO.py:38(_complain_ifclosed)
30012/29978    0.005    0.000    0.005    0.000 {hash}
    14380    0.005    0.000    0.005    0.000 internals.py:2279(_get_items)
       16    0.000    0.000    0.005    0.000 frame.py:295(_init_dict)
    28887    0.005    0.000    0.005    0.000 {method 'itervalues' of 'dict' objects}
     3301    0.003    0.000    0.005    0.000 index.py:263(values)
       16    0.000    0.000    0.005    0.000 base.py:782(_process_toarray_args)
    40000    0.005    0.000    0.005    0.000 strings.py:783(<lambda>)
       16    0.000    0.000    0.005    0.000 generic.py:1936(head)
       32    0.000    0.000    0.005    0.000 internals.py:3530(create_block_manager_from_blocks)
    16587    0.005    0.000    0.005    0.000 {pandas.lib.is_float}
       16    0.000    0.000    0.005    0.000 internals.py:2616(get_numeric_data)
       16    0.000    0.000    0.005    0.000 groupby.py:3251(_wrap_agged_blocks)
       16    0.001    0.000    0.005    0.000 internals.py:2626(combine)
    17229    0.005    0.000    0.005    0.000 series.py:237(_constructor)
10509/10493    0.004    0.000    0.004    0.000 {iter}
       16    0.000    0.000    0.004    0.000 generic.py:3108(groupby)
     2033    0.002    0.000    0.004    0.000 numeric.py:464(asanyarray)
     1024    0.003    0.000    0.004    0.000 common.py:3233(as_escaped_unicode)
       64    0.001    0.000    0.004    0.000 internals.py:4068(get_empty_dtype_and_na)
      224    0.001    0.000    0.004    0.000 fromnumeric.py:2058(amax)
       64    0.001    0.000    0.004    0.000 format.py:2053(_format_strings)
      144    0.000    0.000    0.004    0.000 indexing.py:88(_get_loc)
       16    0.000    0.000    0.004    0.000 index.py:2551(drop)
       16    0.000    0.000    0.004    0.000 groupby.py:1190(groupby)
     1328    0.002    0.000    0.004    0.000 index.py:1001(__iter__)
       16    0.000    0.000    0.004    0.000 groupby.py:364(__init__)
      720    0.001    0.000    0.004    0.000 numeric.py:141(ones)
     8000    0.004    0.000    0.004    0.000 {method 'write' of 'file' objects}
      256    0.001    0.000    0.004    0.000 index.py:1233(equals)
     1966    0.002    0.000    0.004    0.000 common.py:2603(is_list_like)
       16    0.001    0.000    0.004    0.000 filters.py:180(gaussian_filter1d)
       80    0.000    0.000    0.004    0.000 info.py:303(fix_probs)
       32    0.000    0.000    0.004    0.000 merge.py:938(_get_new_axes)
       48    0.001    0.000    0.004    0.000 info.py:41(entropy)
       16    0.000    0.000    0.003    0.000 groupby.py:2043(_get_grouper)
       64    0.000    0.000    0.003    0.000 frame.py:1701(_ixs)
       32    0.000    0.000    0.003    0.000 ops.py:488(wrapper)
     1776    0.003    0.000    0.003    0.000 internals.py:232(ftype)
       16    0.000    0.000    0.003    0.000 groupby.py:480(_set_selection_from_grouper)
       32    0.001    0.000    0.003    0.000 numeric.py:2156(allclose)
       32    0.000    0.000    0.003    0.000 base.py:195(asformat)
     1104    0.001    0.000    0.003    0.000 indexing.py:1744(is_list_like_indexer)
       16    0.000    0.000    0.003    0.000 coo.py:325(tocsr)
    13834    0.003    0.000    0.003    0.000 index.py:3413(inferred_type)
    13498    0.003    0.000    0.003    0.000 {method 'remove' of 'set' objects}
      144    0.000    0.000    0.003    0.000 generic.py:2268(as_matrix)
     1199    0.001    0.000    0.003    0.000 generic.py:1172(_clear_item_cache)
      928    0.003    0.000    0.003    0.000 {pandas.lib.get_blkno_indexers}
       80    0.001    0.000    0.003    0.000 info.py:274(fix_counts)
      784    0.001    0.000    0.003    0.000 generic.py:1046(_indexer)
      336    0.001    0.000    0.003    0.000 internals.py:1542(should_store)
     3840    0.003    0.000    0.003    0.000 format.py:2054(<lambda>)
       64    0.000    0.000    0.002    0.000 qc.py:495(_validate_val_cols)
      992    0.002    0.000    0.002    0.000 {sorted}
      176    0.000    0.000    0.002    0.000 format.py:257(_strlen_func)
      400    0.000    0.000    0.002    0.000 generic.py:2225(_is_mixed_type)
       64    0.000    0.000    0.002    0.000 qc.py:556(_validate_freq_cols)
      688    0.001    0.000    0.002    0.000 internals.py:97(is_categorical_astype)
      768    0.001    0.000    0.002    0.000 config.py:601(_warn_if_deprecated)
      830    0.002    0.000    0.002    0.000 common.py:724(_get_take_nd_function)
       64    0.000    0.000    0.002    0.000 qc.py:592(_validate_info_cols)
       64    0.000    0.000    0.002    0.000 qc.py:220(_validate_lr_cols)
       16    0.000    0.000    0.002    0.000 frame.py:4897(_to_arrays)
     1552    0.002    0.000    0.002    0.000 config.py:560(_get_deprecated_option)
      352    0.001    0.000    0.002    0.000 generic.py:1137(_maybe_update_cacher)
      368    0.001    0.000    0.002    0.000 internals.py:1451(is_bool)
       16    0.000    0.000    0.002    0.000 frame.py:4995(_list_to_arrays)
       31    0.000    0.000    0.002    0.000 generic.py:412(_set_axis)
      384    0.001    0.000    0.002    0.000 internals.py:2246(_is_single_block)
      112    0.000    0.000    0.002    0.000 generic.py:2309(values)
     3984    0.002    0.000    0.002    0.000 internals.py:2208(ndim)
       96    0.000    0.000    0.002    0.000 internals.py:4370(is_null)
       64    0.000    0.000    0.002    0.000 qc.py:427(_validate_err_cols)
      336    0.002    0.000    0.002    0.000 internals.py:1495(set)
       16    0.000    0.000    0.002    0.000 generic.py:2430(convert_objects)
       79    0.001    0.000    0.002    0.000 fromnumeric.py:2259(prod)
       32    0.000    0.000    0.002    0.000 merge.py:974(_get_concat_axis)
     1696    0.002    0.000    0.002    0.000 internals.py:259(iget)
     1582    0.001    0.000    0.002    0.000 internals.py:2560(is_consolidated)
       31    0.000    0.000    0.002    0.000 internals.py:2212(set_axis)
      256    0.002    0.000    0.002    0.000 getlimits.py:244(__init__)
    13499    0.002    0.000    0.002    0.000 {method 'pop' of 'set' objects}
       64    0.001    0.000    0.002    0.000 internals.py:4168(get_mgr_concatenation_plan)
      127    0.001    0.000    0.002    0.000 index.py:3385(__new__)
       16    0.000    0.000    0.002    0.000 filters.py:110(correlate1d)
       32    0.000    0.000    0.002    0.000 internals.py:3687(_multi_blockify)
     2088    0.002    0.000    0.002    0.000 {method 'join' of 'str' objects}
      895    0.001    0.000    0.002    0.000 frame.py:599(__len__)
       16    0.000    0.000    0.002    0.000 generic.py:2345(dtypes)
      304    0.000    0.000    0.002    0.000 indexing.py:1364(_has_valid_type)
       32    0.000    0.000    0.002    0.000 merge.py:1028(_concat_indexes)
       16    0.000    0.000    0.002    0.000 frame.py:5053(_convert_object_array)
       96    0.000    0.000    0.002    0.000 indexing.py:120(_has_valid_tuple)
      784    0.002    0.000    0.002    0.000 {numpy.core.multiarray.copyto}
       32    0.000    0.000    0.002    0.000 index.py:1121(append)
       16    0.000    0.000    0.002    0.000 internals.py:2506(convert)
       32    0.000    0.000    0.002    0.000 frame.py:361(_get_axes)
     1199    0.002    0.000    0.002    0.000 {method 'clear' of 'dict' objects}
       16    0.000    0.000    0.002    0.000 info.py:295(fix_probs_2d)
       64    0.001    0.000    0.002    0.000 common.py:2144(_default_index)
       96    0.001    0.000    0.002    0.000 internals.py:199(getitem_block)
       16    0.000    0.000    0.002    0.000 index.py:2521(delete)
       16    0.000    0.000    0.002    0.000 nanops.py:420(nanmax)
      192    0.002    0.000    0.002    0.000 {method 'get_indexer' of 'pandas.index.IndexEngine' objects}
      113    0.000    0.000    0.002    0.000 index.py:987(inferred_type)
       64    0.001    0.000    0.002    0.000 index.py:2596(_evaluate_compare)
     1264    0.002    0.000    0.002    0.000 {method 'fill' of 'numpy.ndarray' objects}
      400    0.002    0.000    0.002    0.000 {pandas.algos.take_1d_int64_int64}
       16    0.000    0.000    0.002    0.000 index.py:1481(difference)
      784    0.001    0.000    0.002    0.000 config.py:588(_translate_key)
      144    0.000    0.000    0.002    0.000 internals.py:2701(as_matrix)
      784    0.001    0.000    0.002    0.000 frame.py:2164(_ensure_valid_index)
     1104    0.001    0.000    0.002    0.000 common.py:2644(is_sequence)
      704    0.001    0.000    0.002    0.000 common.py:2585(is_object_dtype)
     5824    0.002    0.000    0.002    0.000 {method 'rjust' of 'str' objects}
     1984    0.001    0.000    0.002    0.000 common.py:2225(_join_unicode)
      784    0.001    0.000    0.002    0.000 config.py:545(_get_root)
      336    0.001    0.000    0.001    0.000 series.py:404(__array_prepare__)
     1920    0.001    0.000    0.001    0.000 format.py:2212(<lambda>)
     3998    0.001    0.000    0.001    0.000 internals.py:228(dtype)
       16    0.000    0.000    0.001    0.000 info.py:252(fix_counts_2d)
       79    0.000    0.000    0.001    0.000 _methods.py:34(_prod)
       32    0.000    0.000    0.001    0.000 frame.py:5063(convert)
       16    0.001    0.000    0.001    0.000 {scipy.ndimage._nd_image.correlate1d}
      336    0.000    0.000    0.001    0.000 indexing.py:1584(length_of_indexer)
       16    0.001    0.000    0.001    0.000 {open}
      400    0.000    0.000    0.001    0.000 generic.py:2227(<lambda>)
       48    0.000    0.000    0.001    0.000 common.py:368(notnull)
      144    0.000    0.000    0.001    0.000 fromnumeric.py:1772(any)
      303    0.000    0.000    0.001    0.000 generic.py:322(_get_block_manager_axis)
      128    0.000    0.000    0.001    0.000 function_base.py:3832(append)
       64    0.001    0.000    0.001    0.000 {pandas.lib.maybe_convert_objects}
      638    0.000    0.000    0.001    0.000 index.py:268(get_values)
      976    0.001    0.000    0.001    0.000 index.py:773(_convert_scalar_indexer)
       32    0.000    0.000    0.001    0.000 common.py:2955(_concat_compat)
       32    0.000    0.000    0.001    0.000 merge.py:962(_get_comb_axis)
      368    0.001    0.000    0.001    0.000 {pandas.lib.is_bool_array}
      192    0.001    0.000    0.001    0.000 index.py:1783(_possibly_promote)
      928    0.000    0.000    0.001    0.000 internals.py:3815(<lambda>)
      290    0.001    0.000    0.001    0.000 index.py:958(_engine)
       48    0.000    0.000    0.001    0.000 expressions.py:74(_can_use_numexpr)
       32    0.000    0.000    0.001    0.000 ops.py:466(na_op)
     6832    0.001    0.000    0.001    0.000 {method 'ljust' of 'str' objects}
      144    0.000    0.000    0.001    0.000 format.py:281(_get_formatter)
     1357    0.001    0.000    0.001    0.000 internals.py:2386(<genexpr>)
     3072    0.001    0.000    0.001    0.000 {method 'replace' of 'unicode' objects}
       32    0.000    0.000    0.001    0.000 frame.py:5092(_homogenize)
       32    0.000    0.000    0.001    0.000 index.py:5721(_get_combined_index)
      448    0.001    0.000    0.001    0.000 generic.py:120(_init_mgr)
      688    0.001    0.000    0.001    0.000 common.py:3338(_maybe_match_name)
      128    0.001    0.000    0.001    0.000 {pandas.lib.list_to_object_array}
      176    0.001    0.000    0.001    0.000 internals.py:4461(_preprocess_slice_or_indexer)
      400    0.000    0.000    0.001    0.000 internals.py:2573(is_mixed_type)
     1808    0.001    0.000    0.001    0.000 {method 'split' of 'str' objects}
       96    0.001    0.000    0.001    0.000 compressed.py:1044(prune)
       16    0.000    0.000    0.001    0.000 StringIO.py:258(getvalue)
      208    0.000    0.000    0.001    0.000 indexing.py:1387(_is_valid_integer)
      720    0.001    0.000    0.001    0.000 internals.py:2973(value_getitem)
       32    0.000    0.000    0.001    0.000 generic.py:739(__array__)
      160    0.000    0.000    0.001    0.000 index.py:914(_convert_list_indexer)
       32    0.000    0.000    0.001    0.000 common.py:2923(get_dtype_kinds)
     2608    0.001    0.000    0.001    0.000 {pandas.lib.checknull}
       16    0.000    0.000    0.001    0.000 generic.py:3334(align)
      705    0.000    0.000    0.001    0.000 generic.py:386(ndim)
       32    0.000    0.000    0.001    0.000 index.py:5740(_union_indexes)
       32    0.000    0.000    0.001    0.000 generic.py:2331(get_values)
      223    0.001    0.000    0.001    0.000 generic.py:1199(_set_is_copy)
     1648    0.001    0.000    0.001    0.000 {min}
       48    0.000    0.000    0.001    0.000 common.py:1411(_fill_zeros)
       16    0.000    0.000    0.001    0.000 format.py:2315(get_console_size)
      928    0.001    0.000    0.001    0.000 internals.py:79(_consolidate_key)
      257    0.001    0.000    0.001    0.000 indexing.py:41(__init__)
      512    0.000    0.000    0.001    0.000 {setattr}
       80    0.000    0.000    0.001    0.000 sputils.py:205(isshape)
       48    0.000    0.000    0.001    0.000 indexing.py:165(_convert_slice_indexer)
       16    0.000    0.000    0.001    0.000 common.py:1961(_possibly_convert_platform)
      274    0.000    0.000    0.001    0.000 index.py:961(<lambda>)
       32    0.000    0.000    0.001    0.000 index.py:610(set_names)
       32    0.000    0.000    0.001    0.000 internals.py:3721(_stack_arrays)
       96    0.001    0.000    0.001    0.000 internals.py:4246(combine_concat_plans)
     1984    0.001    0.000    0.001    0.000 {method 'rjust' of 'unicode' objects}
       16    0.000    0.000    0.001    0.000 index.py:1862(reindex)
       16    0.000    0.000    0.001    0.000 index.py:1365(union)
      175    0.000    0.000    0.001    0.000 frame.py:418(shape)
     4432    0.001    0.000    0.001    0.000 {method 'upper' of 'str' objects}
      352    0.001    0.000    0.001    0.000 common.py:1056(_infer_dtype_from_scalar)
     1630    0.001    0.000    0.001    0.000 internals.py:220(shape)
      128    0.000    0.000    0.001    0.000 data.py:25(__init__)
      351    0.000    0.000    0.001    0.000 index.py:248(__array__)
      162    0.001    0.000    0.001    0.000 index.py:740(is_unique)
       16    0.000    0.000    0.001    0.000 groupby.py:1874(__init__)
       32    0.000    0.000    0.001    0.000 index.py:1093(_ensure_compat_append)
      352    0.000    0.000    0.001    0.000 internals.py:1258(should_store)
       48    0.000    0.000    0.001    0.000 groupby.py:1443(_get_aggregate_function)
       32    0.000    0.000    0.001    0.000 fromnumeric.py:1380(nonzero)
       96    0.000    0.000    0.001    0.000 internals.py:4396(get_reindexed_values)
       64    0.000    0.000    0.001    0.000 numeric.py:81(zeros_like)
      720    0.001    0.000    0.001    0.000 {numpy.core.multiarray.can_cast}
     2620    0.001    0.000    0.001    0.000 {pandas.algos.ensure_int64}
      784    0.001    0.000    0.001    0.000 frame.py:414(axes)
        1    0.000    0.000    0.001    0.001 necompiler.py:557(NumExpr)
       16    0.000    0.000    0.001    0.000 generic.py:3418(_align_series)
      128    0.000    0.000    0.001    0.000 sputils.py:102(to_native)
       16    0.000    0.000    0.000    0.000 index.py:668(rename)
       64    0.000    0.000    0.000    0.000 generic.py:2203(consolidate)
      144    0.000    0.000    0.000    0.000 base.py:63(__init__)
      128    0.000    0.000    0.000    0.000 fromnumeric.py:1291(ravel)
       16    0.000    0.000    0.000    0.000 internals.py:2298(get_dtypes)
     1136    0.000    0.000    0.000    0.000 generic.py:1227(_check_setitem_copy)
       96    0.000    0.000    0.000    0.000 indexing.py:139(_is_nested_tuple_indexer)
       80    0.000    0.000    0.000    0.000 series.py:478(_ixs)
      128    0.000    0.000    0.000    0.000 base.py:71(set_shape)
      192    0.000    0.000    0.000    0.000 common.py:2477(is_dtype_equal)
       16    0.000    0.000    0.000    0.000 generic.py:1625(_update_inplace)
       32    0.000    0.000    0.000    0.000 utils.py:110(get_column_headers)
       32    0.000    0.000    0.000    0.000 internals.py:422(convert)
      784    0.000    0.000    0.000    0.000 config.py:527(_select_options)
       32    0.000    0.000    0.000    0.000 ops.py:437(maybe_convert_for_time_op)
        1    0.000    0.000    0.000    0.000 necompiler.py:504(precompile)
       16    0.000    0.000    0.000    0.000 {pandas.lib.clean_index_list}
       64    0.000    0.000    0.000    0.000 numeric.py:2428(seterr)
     1441    0.000    0.000    0.000    0.000 internals.py:2442(<genexpr>)
       16    0.000    0.000    0.000    0.000 index.py:3489(__new__)
       16    0.000    0.000    0.000    0.000 common.py:2380(_index_labels_to_array)
       32    0.000    0.000    0.000    0.000 generic.py:280(_from_axes)
       16    0.000    0.000    0.000    0.000 groupby.py:1363(group_info)
       16    0.000    0.000    0.000    0.000 index.py:5777(_trim_front)
       16    0.000    0.000    0.000    0.000 common.py:3053(in_interactive_session)
       48    0.000    0.000    0.000    0.000 fromnumeric.py:803(argsort)
      496    0.000    0.000    0.000    0.000 indexing.py:1731(is_nested_tuple)
      384    0.000    0.000    0.000    0.000 compressed.py:90(getnnz)
      128    0.000    0.000    0.000    0.000 format.py:437(<genexpr>)
       16    0.000    0.000    0.000    0.000 defmatrix.py:244(__new__)
       16    0.000    0.000    0.000    0.000 compressed.py:987(sum_duplicates)
      128    0.000    0.000    0.000    0.000 coo.py:208(getnnz)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1852(all)
       16    0.000    0.000    0.000    0.000 common.py:3058(check_main)
       16    0.000    0.000    0.000    0.000 groupby.py:1372(_get_compressed_labels)
       48    0.000    0.000    0.000    0.000 series.py:2575(_sanitize_index)
       32    0.000    0.000    0.000    0.000 numeric.py:2813(__enter__)
      324    0.000    0.000    0.000    0.000 indexing.py:405(<genexpr>)
       16    0.000    0.000    0.000    0.000 compressed.py:957(__get_has_canonical_format)
      414    0.000    0.000    0.000    0.000 internals.py:115(fill_value)
      256    0.000    0.000    0.000    0.000 getlimits.py:269(max)
       16    0.000    0.000    0.000    0.000 {method 'put' of 'numpy.ndarray' objects}
       32    0.000    0.000    0.000    0.000 internals.py:1304(should_store)
       32    0.000    0.000    0.000    0.000 index.py:1136(_ensure_compat_concat)
       96    0.000    0.000    0.000    0.000 internals.py:4357(dtype)
       16    0.000    0.000    0.000    0.000 collections.py:38(__init__)
      192    0.000    0.000    0.000    0.000 indexing.py:1748(is_label_like)
       32    0.000    0.000    0.000    0.000 frame.py:4863(_prep_ndarray)
       16    0.000    0.000    0.000    0.000 frame.py:482(_info_repr)
      208    0.000    0.000    0.000    0.000 common.py:2759(_clean_reindex_fill_method)
      576    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
       16    0.000    0.000    0.000    0.000 fromnumeric.py:694(sort)
      654    0.000    0.000    0.000    0.000 internals.py:874(get_values)
       48    0.000    0.000    0.000    0.000 groupby.py:1447(get_func)
       16    0.000    0.000    0.000    0.000 fromnumeric.py:350(repeat)
      400    0.000    0.000    0.000    0.000 strings.py:1059(__init__)
       32    0.000    0.000    0.000    0.000 generic.py:661(__hash__)
      144    0.000    0.000    0.000    0.000 {method 'flatten' of 'numpy.ndarray' objects}
     1280    0.000    0.000    0.000    0.000 {math.exp}
       64    0.000    0.000    0.000    0.000 internals.py:4450(_fast_count_smallints)
       48    0.000    0.000    0.000    0.000 internals.py:3724(_asarray_compat)
      336    0.000    0.000    0.000    0.000 series.py:474(axes)
      352    0.000    0.000    0.000    0.000 internals.py:166(__len__)
       32    0.000    0.000    0.000    0.000 sputils.py:26(upcast)
       16    0.000    0.000    0.000    0.000 frame.py:4811(extract_index)
       48    0.000    0.000    0.000    0.000 compressed.py:115(_set_self)
       16    0.000    0.000    0.000    0.000 index.py:1245(identical)
       32    0.000    0.000    0.000    0.000 index.py:5736(_get_distinct_indexes)
       16    0.000    0.000    0.000    0.000 groupby.py:2175(_convert_grouper)
      226    0.000    0.000    0.000    0.000 common.py:2607(is_null_slice)
      463    0.000    0.000    0.000    0.000 {pandas.algos.ensure_platform_int}
       16    0.000    0.000    0.000    0.000 utils.py:87(choose_dict)
       32    0.000    0.000    0.000    0.000 numeric.py:2818(__exit__)
      416    0.000    0.000    0.000    0.000 frame.py:189(_constructor)
        2    0.000    0.000    0.000    0.000 necompiler.py:227(stringToExpression)
       64    0.000    0.000    0.000    0.000 qc.py:525(_validate_mean_cols)
       16    0.000    0.000    0.000    0.000 _iotools.py:30(_is_string_like)
     1344    0.000    0.000    0.000    0.000 internals.py:3499(_consolidate_inplace)
       32    0.000    0.000    0.000    0.000 expressions.py:67(_evaluate_standard)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2422(ndim)
      336    0.000    0.000    0.000    0.000 internals.py:584(_is_empty_indexer)
       64    0.000    0.000    0.000    0.000 qc.py:274(_validate_contig_cols)
    64/48    0.000    0.000    0.000    0.000 defmatrix.py:290(__array_finalize__)
       16    0.000    0.000    0.000    0.000 fromnumeric.py:40(_wrapit)
       64    0.000    0.000    0.000    0.000 qc.py:363(_validate_bin_cols)
       16    0.000    0.000    0.000    0.000 {pandas.lib.get_reverse_indexer}
       32    0.000    0.000    0.000    0.000 index.py:602(_set_names)
      352    0.000    0.000    0.000    0.000 internals.py:3024(<genexpr>)
        1    0.000    0.000    0.000    0.000 necompiler.py:657(getExprNames)
       18    0.000    0.000    0.000    0.000 index.py:995(is_all_dates)
      401    0.000    0.000    0.000    0.000 index.py:258(dtype)
       32    0.000    0.000    0.000    0.000 internals.py:3730(_shape_compat)
       16    0.000    0.000    0.000    0.000 {scipy.sparse._sparsetools.coo_tocsr}
       64    0.000    0.000    0.000    0.000 {method 'swapaxes' of 'numpy.ndarray' objects}
       48    0.000    0.000    0.000    0.000 sputils.py:189(isintlike)
      143    0.000    0.000    0.000    0.000 index.py:312(_coerce_to_ndarray)
       16    0.000    0.000    0.000    0.000 {pandas.lib.to_object_array_tuples}
       32    0.000    0.000    0.000    0.000 common.py:2541(is_numeric_dtype)
       64    0.000    0.000    0.000    0.000 numeric.py:2524(geterr)
      128    0.000    0.000    0.000    0.000 {method 'newbyteorder' of 'numpy.dtype' objects}
      144    0.000    0.000    0.000    0.000 index.py:835(f)
       16    0.000    0.000    0.000    0.000 {numpy.core._dotblas.dot}
       16    0.000    0.000    0.000    0.000 {method 'encode' of 'unicode' objects}
      5/1    0.000    0.000    0.000    0.000 necompiler.py:142(typeCompileAst)
       16    0.000    0.000    0.000    0.000 algorithms.py:403(_get_data_algo)
      336    0.000    0.000    0.000    0.000 csr.py:211(_swap)
       48    0.000    0.000    0.000    0.000 {pandas.lib.array_equivalent_object}
       16    0.000    0.000    0.000    0.000 generic.py:245(_construct_axes_from_arguments)
       64    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty_like}
     1024    0.000    0.000    0.000    0.000 {method 'ljust' of 'unicode' objects}
       64    0.000    0.000    0.000    0.000 qc.py:461(_validate_std_cols)
       16    0.000    0.000    0.000    0.000 generic.py:1794(_needs_reindex_multi)
       32    0.000    0.000    0.000    0.000 index.py:582(_assert_can_do_setop)
       48    0.000    0.000    0.000    0.000 expressions.py:180(_bool_arith_check)
       16    0.000    0.000    0.000    0.000 base.py:103(_reset_cache)
       64    0.000    0.000    0.000    0.000 qc.py:258(_validate_ori_cols)
       32    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
       80    0.000    0.000    0.000    0.000 format.py:1935(__init__)
       80    0.000    0.000    0.000    0.000 {abs}
       32    0.000    0.000    0.000    0.000 type_check.py:237(iscomplexobj)
       16    0.000    0.000    0.000    0.000 groupby.py:2135(is_in_obj)
       16    0.000    0.000    0.000    0.000 sputils.py:184(isscalarlike)
       16    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
       17    0.000    0.000    0.000    0.000 necompiler.py:484(getContext)
      336    0.000    0.000    0.000    0.000 internals.py:575(_is_scalar_indexer)
       16    0.000    0.000    0.000    0.000 format.py:2465(_binify)
       48    0.000    0.000    0.000    0.000 sputils.py:220(issequence)
       16    0.000    0.000    0.000    0.000 _ni_support.py:70(_get_output)
       96    0.000    0.000    0.000    0.000 internals.py:4270(_next_or_none)
       17    0.000    0.000    0.000    0.000 _methods.py:43(_count_reduce_items)
      672    0.000    0.000    0.000    0.000 internals.py:551(<lambda>)
       16    0.000    0.000    0.000    0.000 index.py:273(tolist)
       32    0.000    0.000    0.000    0.000 format.py:763(has_index_names)
       96    0.000    0.000    0.000    0.000 internals.py:4348(needs_filling)
       16    0.000    0.000    0.000    0.000 generic.py:665(__iter__)
       32    0.000    0.000    0.000    0.000 numeric.py:2809(__init__)
       16    0.000    0.000    0.000    0.000 ops.py:71(<lambda>)
       96    0.000    0.000    0.000    0.000 internals.py:4338(__init__)
       16    0.000    0.000    0.000    0.000 base.py:218(__getitem__)
      336    0.000    0.000    0.000    0.000 internals.py:471(_try_coerce_args)
      352    0.000    0.000    0.000    0.000 internals.py:3493(is_consolidated)
      368    0.000    0.000    0.000    0.000 internals.py:475(_try_coerce_result)
      336    0.000    0.000    0.000    0.000 internals.py:1536(_can_hold_element)
       16    0.000    0.000    0.000    0.000 {pandas.algos.take_1d_object_object}
        2    0.000    0.000    0.000    0.000 {eval}
      368    0.000    0.000    0.000    0.000 {method 'append' of 'pandas.lib.BlockPlacement' objects}
      112    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
       16    0.000    0.000    0.000    0.000 abc.py:148(__subclasscheck__)
       16    0.000    0.000    0.000    0.000 common.py:2193(_count_not_none)
       80    0.000    0.000    0.000    0.000 frame.py:4432(_get_agg_axis)
       32    0.000    0.000    0.000    0.000 merge.py:932(_get_result_dim)
        1    0.000    0.000    0.000    0.000 necompiler.py:358(optimizeTemporariesAllocation)
      224    0.000    0.000    0.000    0.000 common.py:2738(_clean_fill_method)
      112    0.000    0.000    0.000    0.000 indexing.py:1753(need_slice)
       32    0.000    0.000    0.000    0.000 {numpy.core.multiarray.result_type}
       16    0.000    0.000    0.000    0.000 StringIO.py:54(__init__)
       16    0.000    0.000    0.000    0.000 {operator.truediv}
       48    0.000    0.000    0.000    0.000 internals.py:3691(<lambda>)
       48    0.000    0.000    0.000    0.000 format.py:2269(_has_names)
        2    0.000    0.000    0.000    0.000 expressions.py:83(func)
       16    0.000    0.000    0.000    0.000 defmatrix.py:928(getT)
       23    0.000    0.000    0.000    0.000 necompiler.py:105(allOf)
       32    0.000    0.000    0.000    0.000 groupby.py:2103(<genexpr>)
       64    0.000    0.000    0.000    0.000 {numpy.core.umath.seterrobj}
       64    0.000    0.000    0.000    0.000 format.py:722(is_numeric_dtype)
      336    0.000    0.000    0.000    0.000 indexing.py:170(_has_valid_setitem_indexer)
       64    0.000    0.000    0.000    0.000 sputils.py:106(getdtype)
       16    0.000    0.000    0.000    0.000 common.py:2185(_try_sort)
       18    0.000    0.000    0.000    0.000 {pandas.lib.is_datetime_array}
       16    0.000    0.000    0.000    0.000 index.py:5787(_sanitize_and_check)
        2    0.000    0.000    0.000    0.000 {compile}
       16    0.000    0.000    0.000    0.000 utils.py:99(<dictcomp>)
       80    0.000    0.000    0.000    0.000 {pandas.index.get_value_at}
      228    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
       32    0.000    0.000    0.000    0.000 {method 'transpose' of 'numpy.ndarray' objects}
      352    0.000    0.000    0.000    0.000 {pandas.lib.is_bool}
       32    0.000    0.000    0.000    0.000 {method 'add' of 'pandas.lib.BlockPlacement' objects}
       16    0.000    0.000    0.000    0.000 {scipy.sparse._sparsetools.csr_has_canonical_format}
       32    0.000    0.000    0.000    0.000 base.py:485(__getattr__)
       16    0.000    0.000    0.000    0.000 lil.py:134(set_shape)
       16    0.000    0.000    0.000    0.000 compressed.py:979(__set_has_canonical_format)
   152/58    0.000    0.000    0.000    0.000 necompiler.py:99(postorderWalk)
       32    0.000    0.000    0.000    0.000 necompiler.py:636(getType)
    47/13    0.000    0.000    0.000    0.000 necompiler.py:81(__hash__)
       96    0.000    0.000    0.000    0.000 index.py:5737(<genexpr>)
       16    0.000    0.000    0.000    0.000 {method 'repeat' of 'numpy.ndarray' objects}
      224    0.000    0.000    0.000    0.000 base.py:318(ndim)
       64    0.000    0.000    0.000    0.000 data.py:28(_get_dtype)
       64    0.000    0.000    0.000    0.000 common.py:2973(is_nonempty)
       16    0.000    0.000    0.000    0.000 groupby.py:1225(__init__)
       96    0.000    0.000    0.000    0.000 {next}
       48    0.000    0.000    0.000    0.000 expressions.py:170(_has_bool_dtype)
       16    0.000    0.000    0.000    0.000 groupby.py:511(__getattr__)
       16    0.000    0.000    0.000    0.000 groupby.py:2125(is_in_axis)
        2    0.000    0.000    0.000    0.000 expressions.py:267(truediv_op)
    56/16    0.000    0.000    0.000    0.000 necompiler.py:123(sigPerms)
       16    0.000    0.000    0.000    0.000 groupby.py:1319(names)
      114    0.000    0.000    0.000    0.000 {pandas.algos.ensure_object}
        1    0.000    0.000    0.000    0.000 necompiler.py:436(compileThreeAddrForm)
       16    0.000    0.000    0.000    0.000 __init__.py:199(u)
       16    0.000    0.000    0.000    0.000 {method 'count' of 'str' objects}
      242    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
      144    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       16    0.000    0.000    0.000    0.000 fromnumeric.py:495(transpose)
       16    0.000    0.000    0.000    0.000 index.py:5843(_ensure_has_len)
       32    0.000    0.000    0.000    0.000 groupby.py:2098(<genexpr>)
       32    0.000    0.000    0.000    0.000 groupby.py:2097(<genexpr>)
       16    0.000    0.000    0.000    0.000 format.py:276(should_show_dimensions)
       16    0.000    0.000    0.000    0.000 _abcoll.py:545(update)
       16    0.000    0.000    0.000    0.000 groupby.py:3269(_reindex_output)
       16    0.000    0.000    0.000    0.000 index.py:599(_get_names)
        3    0.000    0.000    0.000    0.000 necompiler.py:461(toString)
        1    0.000    0.000    0.000    0.000 necompiler.py:336(collapseDuplicateSubtrees)
       16    0.000    0.000    0.000    0.000 index.py:587(_convert_can_do_setop)
       48    0.000    0.000    0.000    0.000 internals.py:2670(nblocks)
       16    0.000    0.000    0.000    0.000 {method 'to_array' of 'pandas.hashtable.Float64Vector' objects}
        2    0.000    0.000    0.000    0.000 necompiler.py:267(getInputOrder)
      128    0.000    0.000    0.000    0.000 {numpy.core.umath.geterrobj}
       16    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
       16    0.000    0.000    0.000    0.000 format.py:767(has_column_names)
        3    0.000    0.000    0.000    0.000 necompiler.py:454(quadrupleToString)
        1    0.000    0.000    0.000    0.000 <expr>:1(<module>)
        2    0.000    0.000    0.000    0.000 necompiler.py:317(assignLeafRegisters)
       18    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
      6/2    0.000    0.000    0.000    0.000 necompiler.py:112(expressionToAST)
       32    0.000    0.000    0.000    0.000 groupby.py:2020(labels)
       16    0.000    0.000    0.000    0.000 groupby.py:2171(_is_label_like)
       32    0.000    0.000    0.000    0.000 merge.py:1020(_maybe_check_integrity)
       13    0.000    0.000    0.000    0.000 necompiler.py:60(__init__)
       16    0.000    0.000    0.000    0.000 groupby.py:3865(_intercept_cython)
        2    0.000    0.000    0.000    0.000 expressions.py:111(commonKind)
       16    0.000    0.000    0.000    0.000 sputils.py:230(isdense)
        4    0.000    0.000    0.000    0.000 expressions.py:478(__init__)
       81    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
       48    0.000    0.000    0.000    0.000 common.py:2194(<genexpr>)
       16    0.000    0.000    0.000    0.000 index.py:1843(_can_reindex)
       16    0.000    0.000    0.000    0.000 _ni_support.py:90(_check_axis)
        1    0.000    0.000    0.000    0.000 necompiler.py:329(assignBranchRegisters)
       16    0.000    0.000    0.000    0.000 {sys._getframe}
       32    0.000    0.000    0.000    0.000 internals.py:467(_try_operate)
        1    0.000    0.000    0.000    0.000 necompiler.py:423(convertASTtoThreeAddrForm)
        6    0.000    0.000    0.000    0.000 expressions.py:390(__init__)
       16    0.000    0.000    0.000    0.000 _ni_support.py:38(_extend_mode_to_code)
        2    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 necompiler.py:399(setRegisterNumbersForTemporaries)
        6    0.000    0.000    0.000    0.000 expressions.py:106(isConstant)
        9    0.000    0.000    0.000    0.000 necompiler.py:441(nToChr)
       80    0.000    0.000    0.000    0.000 {id}
       35    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
       16    0.000    0.000    0.000    0.000 compressed.py:1019(__set_sorted)
        1    0.000    0.000    0.000    0.000 necompiler.py:296(getConstants)
        2    0.000    0.000    0.000    0.000 expressions.py:521(__init__)
       16    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
        2    0.000    0.000    0.000    0.000 utils.py:145(__setitem__)
        8    0.000    0.000    0.000    0.000 necompiler.py:96(typecode)
       32    0.000    0.000    0.000    0.000 common.py:1293(<lambda>)
       16    0.000    0.000    0.000    0.000 {function __getitem__ at 0x7fdc0745f8c0}
        4    0.000    0.000    0.000    0.000 necompiler.py:365(<genexpr>)
        2    0.000    0.000    0.000    0.000 expressions.py:77(get_optimization)
        4    0.000    0.000    0.000    0.000 expressions.py:70(set_new_context)
       16    0.000    0.000    0.000    0.000 index.py:595(nlevels)
       10    0.000    0.000    0.000    0.000 {chr}
        1    0.000    0.000    0.000    0.000 necompiler.py:263(isReduction)
        7    0.000    0.000    0.000    0.000 necompiler.py:151(<genexpr>)
        3    0.000    0.000    0.000    0.000 necompiler.py:552(<genexpr>)
       16    0.000    0.000    0.000    0.000 {callable}
        2    0.000    0.000    0.000    0.000 necompiler.py:391(setOrderedRegisterNumbers)
        5    0.000    0.000    0.000    0.000 necompiler.py:196(__init__)
        2    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
       32    0.000    0.000    0.000    0.000 ops.py:498(<lambda>)
        2    0.000    0.000    0.000    0.000 expressions.py:64(get)
        6    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}
        1    0.000    0.000    0.000    0.000 six.py:180(find_module)
        2    0.000    0.000    0.000    0.000 necompiler.py:93(key)
        2    0.000    0.000    0.000    0.000 expressions.py:67(get_current_context)
        2    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
        4    0.000    0.000    0.000    0.000 necompiler.py:363(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        4    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}


