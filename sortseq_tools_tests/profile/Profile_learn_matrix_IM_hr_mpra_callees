   Ordered by: cumulative time

Function                                                               called...
                                                                           ncalls  tottime  cumtime
<string>:1(<module>)                                                   ->       1    0.008    7.172  learn_model.py:159(main)
learn_model.py:159(main)                                              ->       1    0.000    0.000  base.py:184(__get__)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                                8    0.000    0.004  frame.py:1774(__getitem__)
                                                                                1    0.000    0.035  frame.py:2114(__setitem__)
                                                                                3    0.000    0.000  frame.py:2630(reset_index)
                                                                                1    0.000    0.000  fromnumeric.py:495(transpose)
                                                                                1    0.000    0.079  gauge_fix.py:101(fix_matrix)
                                                                                3    0.000    0.000  generic.py:1046(_indexer)
                                                                                1    0.000    0.000  generic.py:2152(__setattr__)
                                                                                1    0.000    0.000  generic.py:2394(astype)
                                                                                2    0.000    0.001  generic.py:2414(copy)
                                                                                1    0.000    0.043  indexing.py:113(__setitem__)
                                                                                2    0.000    0.000  indexing.py:1185(__getitem__)
                                                                                1    0.000    6.030  learn_model.py:74(MaximizeMI_memsaver)
                                                                                1    0.000    0.000  learn_model.py:183(<dictcomp>)
                                                                                1    0.000    0.001  merge.py:700(concat)
                                                                                1    0.000    0.010  numeric.py:1681(array_str)
                                                                                1    0.016    0.882  numerics.py:37(dataset2mutarray)
                                                                                2    0.000    0.001  ops.py:574(wrapper)
                                                                                1    0.000    0.000  qc.py:155(get_cols_from_df)
                                                                                1    0.000    0.002  qc.py:891(validate_model)
                                                                                1    0.000    0.000  series.py:119(__init__)
                                                                                3    0.000    0.001  series.py:519(__getitem__)
                                                                                1    0.000    0.000  series.py:1003(__iter__)
                                                                                2    0.000    0.010  series.py:2020(apply)
                                                                                1    0.000    0.008  strings.py:1299(slice)
                                                                                2    0.000    0.000  utils.py:87(choose_dict)
                                                                                1    0.000    0.000  utils.py:110(get_column_headers)
                                                                                1    0.000    0.053  utils.py:134(collapse_further)
                                                                                1    0.000    0.002  utils.py:471(RandEmat)
                                                                                7    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'items' of 'dict' objects}
                                                                                2    0.000    0.000  {range}
learn_model.py:74(MaximizeMI_memsaver)                                ->       2    0.000    0.000  InstantiationDecorators.py:128(stochastic)
                                                                                2    0.000    0.122  InstantiationDecorators.py:174(instantiate_p)
                                                                                1    0.000    0.000  MCMC.py:60(__init__)
                                                                                1    0.000    0.000  MCMC.py:93(use_step_method)
                                                                                1    0.000    0.000  Model.py:829(trace)
                                                                                1    0.000    0.000  __init__.py:20(new_decorator)
                                                                                1    0.000    5.908  __init__.py:40(func_wrapper)
                                                                                1    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    0.000  fromnumeric.py:2651(mean)
                                                                                1    0.000    0.000  ram.py:132(__getitem__)
learn_model.py:87(emat)                                               ->      51    0.600    5.444  EstimateMutualInfoforMImax.py:195(alt4)
                                                                               51    0.000    0.013  frame.py:2114(__setitem__)
                                                                               51    0.001    0.024  frame.py:2630(reset_index)
                                                                               51    0.000    0.188  frame.py:2881(sort)
                                                                               52    0.000    0.000  fromnumeric.py:495(transpose)
                                                                               51    0.000    0.055  generic.py:2414(copy)
                                                                               52    0.003    0.179  numerics.py:99(eval_modelmatrix_on_mutarray)
__init__.py:40(func_wrapper)                                           ->       1    0.000    5.908  MCMC.py:199(sample)
                                                                                1    0.000    0.000  {open}
MCMC.py:199(sample)                                                    ->       1    0.000    0.000  MCMC.py:135(assign_step_methods)
                                                                                1    0.000    5.908  Model.py:227(sample)
                                                                                1    0.000    0.000  fromnumeric.py:2633(round_)
                                                                                1    0.000    0.000  progressbar.py:121(progress_bar)
                                                                                1    0.000    0.000  {max}
Model.py:227(sample)                                                   ->       1    0.001    5.908  MCMC.py:279(_loop)
                                                                                1    0.000    0.000  Model.py:121(seed)
                                                                                1    0.000    0.000  Model.py:254(_finalize)
                                                                                1    0.000    0.000  base.py:232(_initialize)
                                                                                1    0.000    0.000  base.py:285(connect_model)
MCMC.py:279(_loop)                                                     ->     101    0.000    0.000  Model.py:511(fget)
                                                                                1    0.000    0.000  Model.py:514(fset)
                                                                                5    0.000    0.000  Model.py:616(tally)
                                                                                1    0.000    0.000  Model.py:631(commit)
                                                                               50    0.001    5.906  StepMethods.py:485(step)
                                                                               50    0.000    0.001  progressbar.py:29(update)
StepMethods.py:485(step)                                               ->     100    0.000    5.824  StepMethods.py:307(logp_plus_loglike)
                                                                               50    0.000    0.000  StepMethods.py:478(hastings_factor)
                                                                               39    0.000    0.000  StepMethods.py:556(reject)
                                                                               50    0.054    0.081  stepper.py:23(propose)
                                                                               50    0.000    0.000  {method 'random_sample' of 'mtrand.RandomState' objects}
StepMethods.py:307(logp_plus_loglike)                                  ->     100    0.000    5.824  Node.py:25(logp_of_set)
Node.py:25(logp_of_set)                                                ->     100    0.000    5.824  PyMCObjects.py:903(get_logp)
PyMCObjects.py:903(get_logp)                                           ->     108    0.007    5.823  {method 'get' of 'pymc.LazyFunction.LazyFunction' objects}
{method 'get' of 'pymc.LazyFunction.LazyFunction' objects}             ->      50    0.000    0.000  Container.py:539(get_value)
                                                                               50    0.032    5.816  learn_model.py:87(emat)
EstimateMutualInfoforMImax.py:195(alt4)                                ->      51    0.005    0.012  filters.py:180(gaussian_filter1d)
                                                                            34142    0.084    1.100  frame.py:556(iterrows)
                                                                              102    0.001    0.037  frame.py:1774(__getitem__)
                                                                               51    0.000    0.015  frame.py:2114(__setitem__)
                                                                               51    0.000    0.102  frame.py:2881(sort)
                                                                               51    0.000    0.007  fromnumeric.py:2737(std)
                                                                               51    0.000    0.007  generic.py:2394(astype)
                                                                               51    0.000    0.030  generic.py:2414(copy)
                                                                               51    0.000    0.030  generic.py:3108(groupby)
                                                                            34193    0.047    2.509  generic.py:4243(stat_func)
                                                                               51    0.000    0.183  groupby.py:2634(aggregate)
                                                                               51    0.002    0.165  info.py:15(mutualinfo)
                                                                              153    0.460    0.510  npyio.py:852(savetxt)
                                                                            34142    0.024    0.102  series.py:308(values)
                                                                               51    0.000    0.001  utils.py:110(get_column_headers)
                                                                              102    0.000    0.000  {len}
                                                                            25500    0.024    0.024  {method 'copy' of 'numpy.ndarray' objects}
                                                                              102    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                              153    0.009    0.009  {open}
generic.py:4243(stat_func)                                             ->      54    0.000    0.013  frame.py:4299(_reduce)
                                                                            34490    0.095    2.478  series.py:2068(_reduce)
series.py:2068(_reduce)                                                ->   34852    0.042    0.054  generic.py:292(_get_axis_number)
                                                                            34490    0.087    2.221  nanops.py:38(_f)
                                                                              362    0.000    0.017  nanops.py:233(nanany)
                                                                            34852    0.020    0.104  series.py:308(values)
                                                                            34852    0.005    0.005  {isinstance}
nanops.py:38(_f)                                                       ->   34543    0.025    0.038  __init__.py:143(itervalues)
                                                                            34543    0.068    1.932  nanops.py:63(f)
                                                                            34543    0.021    0.171  {any}
nanops.py:63(f)                                                        ->      13    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                            34530    0.085    1.859  nanops.py:243(nansum)
                                                                                1    0.000    0.000  nanops.py:420(nanmax)
                                                                            34544    0.005    0.005  {len}
nanops.py:243(nansum)                                                  ->   34530    0.018    0.040  common.py:2547(is_float_dtype)
                                                                            34530    0.152    1.168  nanops.py:153(_get_values)
                                                                            34530    0.028    0.132  nanops.py:216(_wrap_results)
                                                                            34530    0.062    0.214  nanops.py:591(_maybe_null_out)
                                                                            34530    0.026    0.220  {method 'sum' of 'numpy.ndarray' objects}
nanops.py:153(_get_values)                                             ->   34893    0.015    0.529  common.py:212(isnull)
                                                                              338    0.000    0.002  common.py:1169(_maybe_upcast_putmask)
                                                                            34893    0.021    0.044  common.py:2495(is_integer_dtype)
                                                                            34193    0.020    0.041  common.py:2547(is_float_dtype)
                                                                            34555    0.023    0.045  common.py:2557(is_bool_dtype)
                                                                            34893    0.007    0.007  nanops.py:130(_get_fill_value)
                                                                            34893    0.018    0.096  nanops.py:206(_na_ok_dtype)
                                                                            34893    0.017    0.138  nanops.py:210(_view_if_needed)
                                                                            34893    0.043    0.043  {method 'copy' of 'numpy.ndarray' objects}
                                                                            34555    0.055    0.055  {numpy.core.multiarray.putmask}
                                                                            34893    0.029    0.029  {pandas.lib.values_from_object}
frame.py:556(iterrows)                                                 ->      51    0.000    0.001  generic.py:2309(values)
                                                                               51    0.000    0.000  index.py:1001(__iter__)
                                                                            34091    0.212    1.015  series.py:119(__init__)
series.py:119(__init__)                                                ->       2    0.000    0.000  common.py:2144(_default_index)
                                                                                2    0.000    0.000  common.py:2603(is_list_like)
                                                                            35608    0.054    0.054  generic.py:90(__init__)
                                                                              362    0.000    0.002  generic.py:107(_validate_dtype)
                                                                            34977    0.019    0.026  index.py:5677(_ensure_index)
                                                                            34979    0.090    0.385  internals.py:3343(__init__)
                                                                              387    0.000    0.000  internals.py:3444(index)
                                                                            35608    0.054    0.073  series.py:257(_set_axis)
                                                                            34979    0.108    0.268  series.py:2596(_sanitize_array)
                                                                           140631    0.036    0.036  {isinstance}
                                                                                2    0.000    0.000  {len}
numerics.py:37(dataset2mutarray)                                       ->       2    0.000    0.000  frame.py:418(shape)
                                                                               28    0.000    0.001  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  generic.py:1936(head)
                                                                                1    0.010    0.011  lil.py:88(__init__)
                                                                               27    0.000    0.538  lil.py:272(__setitem__)
                                                                                1    0.012    0.045  lil.py:378(tocsr)
                                                                                1    0.000    0.200  profile_mut.py:16(main)
                                                                                1    0.000    0.000  qc.py:155(get_cols_from_df)
                                                                               28    0.000    0.000  series.py:381(__len__)
                                                                               27    0.000    0.004  series.py:519(__getitem__)
                                                                               28    0.000    0.001  series.py:1003(__iter__)
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                               27    0.007    0.007  {method 'copy' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'join' of 'str' objects}
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {min}
                                                                               28    0.059    0.059  {src.fast.seqs2array_for_matmodel}
npyio.py:852(savetxt)                                                  ->     204    0.001    0.001  _iotools.py:30(_is_string_like)
                                                                              204    0.000    0.006  numeric.py:394(asarray)
                                                                              204    0.000    0.001  type_check.py:237(iscomplexobj)
                                                                              204    0.000    0.000  {hasattr}
                                                                              408    0.000    0.000  {isinstance}
                                                                              408    0.000    0.000  {len}
                                                                              204    0.000    0.000  {method 'count' of 'str' objects}
                                                                              204    0.000    0.000  {method 'join' of 'str' objects}
                                                                           110591    0.053    0.053  {method 'write' of 'file' objects}
common.py:212(isnull)                                                  ->   35741    0.062    0.550  common.py:233(_isnull_new)
common.py:233(_isnull_new)                                             ->   35499    0.141    0.382  common.py:303(_isnull_ndarraylike)
                                                                            70998    0.037    0.079  {isinstance}
                                                                              242    0.000    0.000  {pandas.lib.checknull}
                                                                            35741    0.026    0.026  {pandas.lib.isscalar}
lil.py:272(__setitem__)                                                ->      54    0.000    0.000  base.py:93(get_shape)
                                                                               54    0.000    0.000  base.py:865(isspmatrix)
                                                                               27    0.000    0.000  numeric.py:394(asarray)
                                                                               27    0.000    0.001  sputils.py:245(_unpack_index)
                                                                               27    0.000    0.003  sputils.py:330(_index_to_arrays)
                                                                               27    0.000    0.000  stride_tricks.py:37(broadcast_arrays)
                                                                               81    0.000    0.000  {isinstance}
                                                                               27    0.000    0.000  {len}
                                                                               27    0.533    0.533  {scipy.sparse._csparsetools.lil_fancy_set}
                                                                               27    0.000    0.000  {scipy.sparse._csparsetools.prepare_index_for_memoryview}
{scipy.sparse._csparsetools.lil_fancy_set}                             ->
{isinstance}                                                           ->  108342    0.056    0.131  common.py:70(_check)
internals.py:3343(__init__)                                            ->     258    0.000    0.000  index.py:5677(_ensure_index)
                                                                            35354    0.077    0.241  internals.py:2073(make_block)
                                                                           106836    0.027    0.027  {isinstance}
                                                                            35886    0.018    0.032  {len}
common.py:303(_isnull_ndarraylike)                                     ->   35063    0.070    0.134  common.py:2440(is_datetimelike)
                                                                              436    0.001    0.002  common.py:2569(is_categorical_dtype)
                                                                              362    0.002    0.012  series.py:119(__init__)
                                                                            35499    0.021    0.022  {getattr}
                                                                            35499    0.022    0.066  {isinstance}
                                                                              436    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                              436    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
                                                                              436    0.001    0.001  {numpy.core.multiarray.empty}
                                                                              436    0.004    0.004  {pandas.lib.isnullobj}
{method 'sum' of 'numpy.ndarray' objects}                              ->   69469    0.031    0.333  _methods.py:31(_sum)
_methods.py:31(_sum)                                                   ->   69825    0.305    0.305  {method 'reduce' of 'numpy.ufunc' objects}
{method 'reduce' of 'numpy.ufunc' objects}                             ->
frame.py:2881(sort)                                                    ->     102    0.003    0.290  frame.py:2917(sort_index)
frame.py:2917(sort_index)                                              ->     102    0.000    0.001  common.py:2644(is_sequence)
                                                                               51    0.000    0.000  frame.py:189(_constructor)
                                                                               51    0.000    0.001  frame.py:200(__init__)
                                                                              102    0.000    0.011  frame.py:1774(__getitem__)
                                                                              102    0.000    0.000  generic.py:292(_get_axis_number)
                                                                              102    0.000    0.000  generic.py:318(_get_axis)
                                                                              102    0.000    0.000  generic.py:322(_get_block_manager_axis)
                                                                               51    0.000    0.009  generic.py:1625(_update_inplace)
                                                                               51    0.000    0.000  generic.py:2118(__finalize__)
                                                                              102    0.016    0.134  groupby.py:3696(_nargsort)
                                                                              102    0.001    0.130  internals.py:3255(take)
                                                                              102    0.000    0.001  series.py:308(values)
                                                                              204    0.000    0.000  {isinstance}
                                                                              102    0.000    0.000  {len}
series.py:2596(_sanitize_array)                                        ->       2    0.000    0.000  common.py:1961(_possibly_convert_platform)
                                                                                2    0.000    0.000  common.py:1974(_possibly_cast_to_datetime)
                                                                              362    0.001    0.002  common.py:2443(_coerce_to_dtype)
                                                                              362    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                              362    0.000    0.001  common.py:2547(is_float_dtype)
                                                                            34977    0.025    0.077  series.py:2611(_try_cast)
                                                                           104577    0.017    0.017  {isinstance}
                                                                            34979    0.012    0.012  {issubclass}
                                                                            69960    0.034    0.051  {len}
                                                                              362    0.000    0.000  {numpy.core.multiarray.array}
internals.py:2073(make_block)                                          ->     121    0.000    0.000  common.py:2565(is_categorical)
                                                                            36688    0.074    0.152  internals.py:64(__init__)
                                                                              399    0.001    0.003  internals.py:1442(__init__)
                                                                            35739    0.011    0.011  {isinstance}
                                                                            39799    0.008    0.008  {issubclass}
groupby.py:105(f)                                                      ->      52    0.001    0.008  groupby.py:480(_set_selection_from_grouper)
                                                                               52    0.000    0.223  groupby.py:2559(_cython_agg_general)
groupby.py:2559(_cython_agg_general)                                   ->      52    0.001    0.212  groupby.py:2586(_cython_agg_blocks)
                                                                               52    0.000    0.011  groupby.py:3251(_wrap_agged_blocks)
common.py:2461(_get_dtype_type)                                        ->       4    0.000    0.000  series.py:288(dtype)
                                                                           387864    0.064    0.064  {isinstance}
nanops.py:591(_maybe_null_out)                                         ->      54    0.000    0.001  fromnumeric.py:1772(any)
                                                                               54    0.000    0.000  {getattr}
                                                                            34531    0.016    0.151  {method 'sum' of 'numpy.ndarray' objects}
groupby.py:2586(_cython_agg_blocks)                                    ->     103    0.003    0.118  groupby.py:1482(aggregate)
                                                                               52    0.000    0.065  groupby.py:3214(_get_data_to_aggregate)
                                                                              103    0.000    0.000  internals.py:119(mgr_locs)
                                                                              103    0.000    0.000  internals.py:467(_try_operate)
                                                                              103    0.000    0.016  internals.py:479(_try_coerce_and_cast_result)
                                                                              103    0.000    0.001  internals.py:2073(make_block)
                                                                               52    0.000    0.000  internals.py:2279(_get_items)
                                                                               52    0.000    0.011  internals.py:2616(get_numeric_data)
                                                                               52    0.000    0.000  {len}
                                                                              103    0.000    0.000  {method 'append' of 'list' objects}
series.py:308(values)                                                  ->   69741    0.054    0.164  internals.py:3477(values)
profile_mut.py:16(main)                                                ->       7    0.000    0.002  frame.py:1774(__getitem__)
                                                                                2    0.000    0.000  frame.py:2114(__setitem__)
                                                                                4    0.000    0.000  generic.py:1046(_indexer)
                                                                                1    0.000    0.000  generic.py:2414(copy)
                                                                                2    0.000    0.000  generic.py:4243(stat_func)
                                                                                1    0.000    0.000  index.py:1001(__iter__)
                                                                                4    0.000    0.002  indexing.py:113(__setitem__)
                                                                                2    0.000    0.000  ops.py:488(wrapper)
                                                                                4    0.000    0.000  ops.py:574(wrapper)
                                                                                1    0.005    0.191  profile_ct.py:14(main)
                                                                                6    0.000    0.000  qc.py:128(is_col_type)
                                                                                1    0.000    0.002  qc.py:618(validate_dataset)
                                                                                1    0.000    0.002  qc.py:1095(validate_profile_mut)
                                                                                4    0.000    0.000  series.py:308(values)
                                                                                1    0.000    0.000  {method 'join' of 'str' objects}
                                                                                8    0.000    0.000  {method 'split' of 'str' objects}
profile_ct.py:14(main)                                                 ->      87    0.000    0.001  base.py:184(__get__)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.000  frame.py:418(shape)
                                                                               89    0.000    0.001  frame.py:1774(__getitem__)
                                                                              348    0.001    0.029  fromnumeric.py:1631(sum)
                                                                                1    0.000    0.000  generic.py:1046(_indexer)
                                                                                1    0.000    0.000  index.py:1001(__iter__)
                                                                                1    0.000    0.000  index.py:1045(__contains__)
                                                                                1    0.000    0.000  indexing.py:1185(__getitem__)
                                                                                1    0.000    0.001  merge.py:700(concat)
                                                                              348    0.004    0.082  ops.py:574(wrapper)
                                                                                4    0.000    0.000  qc.py:128(is_col_type)
                                                                                1    0.000    0.002  qc.py:618(validate_dataset)
                                                                                1    0.000    0.007  qc.py:952(validate_profile_ct)
                                                                                1    0.000    0.000  series.py:119(__init__)
                                                                              348    0.002    0.047  series.py:519(__getitem__)
                                                                               87    0.000    0.016  strings.py:1299(slice)
                                                                                4    0.000    0.000  {len}
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                                2    0.000    0.000  {range}
groupby.py:2634(aggregate)                                             ->      51    0.000    0.001  collections.py:38(__init__)
                                                                               51    0.000    0.182  groupby.py:105(f)
                                                                               51    0.000    0.000  groupby.py:3865(_intercept_cython)
                                                                               51    0.000    0.000  {getattr}
                                                                              153    0.000    0.000  {isinstance}
numerics.py:99(eval_modelmatrix_on_mutarray)                           ->      52    0.000    0.132  base.py:282(__mul__)
                                                                               52    0.001    0.023  compressed.py:24(__init__)
                                                                               52    0.000    0.019  compressed.py:938(toarray)
                                                                               52    0.000    0.001  defmatrix.py:244(__new__)
                                                                               52    0.000    0.000  defmatrix.py:928(getT)
                                                                              156    0.000    0.000  {isinstance}
                                                                              104    0.000    0.000  {len}
                                                                               52    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                               52    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                              156    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                               52    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
                                                                               52    0.000    0.000  {numpy.core._dotblas.dot}
internals.py:3124(reindex_indexer)                                     ->      52    0.000    0.000  index.py:1843(_can_reindex)
                                                                              310    0.000    0.000  internals.py:115(fill_value)
                                                                              310    0.002    0.105  internals.py:845(take_nd)
                                                                              215    0.002    0.020  internals.py:2163(__init__)
                                                                              215    0.000    0.000  internals.py:2208(ndim)
                                                                              215    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                              111    0.002    0.047  internals.py:3168(_slice_take_blocks_ax0)
{any}                                                                  ->     104    0.000    0.000  groupby.py:2097(<genexpr>)
                                                                              104    0.000    0.000  groupby.py:2098(<genexpr>)
                                                                           103682    0.053    0.150  nanops.py:41(<genexpr>)
info.py:15(mutualinfo)                                                 ->     153    0.003    0.011  info.py:41(entropy)
                                                                               51    0.000    0.005  info.py:295(fix_probs_2d)
                                                                              102    0.000    0.004  info.py:303(fix_probs)
                                                                               51    0.127    0.139  npyio.py:852(savetxt)
                                                                               51    0.000    0.000  {abs}
                                                                              102    0.000    0.002  {method 'sum' of 'numpy.ndarray' objects}
                                                                               51    0.001    0.001  {open}
internals.py:3477(values)                                              ->   69741    0.040    0.068  internals.py:3394(_values)
                                                                            69741    0.042    0.042  {method 'view' of 'numpy.ndarray' objects}
internals.py:64(__init__)                                              ->   37087    0.009    0.009  internals.py:119(mgr_locs)
                                                                            37087    0.045    0.057  internals.py:141(mgr_locs)
                                                                            74174    0.014    0.014  {len}
internals.py:3255(take)                                                ->     163    0.001    0.013  index.py:1148(take)
                                                                               61    0.001    0.002  indexing.py:1695(maybe_convert_indices)
                                                                              163    0.001    0.001  internals.py:2204(shape)
                                                                              163    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                              163    0.002    0.132  internals.py:3124(reindex_indexer)
                                                                              163    0.000    0.001  numeric.py:464(asanyarray)
                                                                              163    0.000    0.000  {isinstance}
                                                                               61    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
nanops.py:41(<genexpr>)                                                ->   69139    0.040    0.097  nanops.py:33(check)
{method 'argsort' of 'numpy.ndarray' objects}                          ->
common.py:756(take_nd)                                                 ->     852    0.001    0.002  common.py:724(_get_take_nd_function)
                                                                              532    0.004    0.008  common.py:1105(_maybe_promote)
                                                                              852    0.000    0.000  {len}
                                                                              104    0.000    0.001  {method 'any' of 'numpy.ndarray' objects}
                                                                              852    0.012    0.012  {numpy.core.multiarray.empty}
                                                                             1704    0.000    0.000  {pandas.algos.ensure_int64}
                                                                              326    0.001    0.001  {pandas.algos.take_1d_int64_int64}
                                                                               52    0.002    0.002  {pandas.algos.take_2d_axis0_float64_float64}
                                                                              111    0.006    0.006  {pandas.algos.take_2d_axis0_int64_int64}
                                                                               53    0.017    0.017  {pandas.algos.take_2d_axis0_object_object}
                                                                              102    0.006    0.006  {pandas.algos.take_2d_axis1_float64_float64}
                                                                              104    0.022    0.022  {pandas.algos.take_2d_axis1_int64_int64}
                                                                              104    0.053    0.053  {pandas.algos.take_2d_axis1_object_object}
internals.py:845(take_nd)                                              ->     526    0.007    0.131  common.py:756(take_nd)
                                                                              216    0.000    0.000  internals.py:115(fill_value)
                                                                              310    0.000    0.000  internals.py:119(mgr_locs)
                                                                              526    0.001    0.005  internals.py:128(make_block_same_class)
                                                                              526    0.000    0.000  internals.py:228(dtype)
                                                                              526    0.000    0.000  internals.py:874(get_values)
nanops.py:210(_view_if_needed)                                         ->   34893    0.026    0.121  common.py:2526(is_datetime_or_timedelta_dtype)
groupby.py:3696(_nargsort)                                             ->     102    0.000    0.005  common.py:212(isnull)
                                                                              102    0.000    0.001  common.py:2569(is_categorical_dtype)
                                                                              102    0.000    0.000  fromnumeric.py:1380(nonzero)
                                                                              102    0.000    0.000  numeric.py:464(asanyarray)
                                                                              102    0.000    0.000  {len}
                                                                              102    0.107    0.107  {method 'argsort' of 'numpy.ndarray' objects}
                                                                              102    0.004    0.004  {numpy.core.multiarray.arange}
                                                                              102    0.002    0.002  {numpy.core.multiarray.concatenate}
common.py:2440(is_datetimelike)                                        ->      14    0.000    0.000  series.py:288(dtype)
                                                                            35063    0.021    0.064  {isinstance}
base.py:282(__mul__)                                                   ->     156    0.000    0.000  base.py:93(get_shape)
                                                                               52    0.000    0.000  base.py:865(isspmatrix)
                                                                               52    0.001    0.132  compressed.py:473(_mul_sparse_matrix)
                                                                               52    0.000    0.000  sputils.py:184(isscalarlike)
nanops.py:216(_wrap_results)                                           ->   34531    0.023    0.064  common.py:2507(is_datetime64_dtype)
                                                                            34531    0.019    0.041  common.py:2516(is_timedelta64_dtype)
compressed.py:473(_mul_sparse_matrix)                                  ->     104    0.000    0.000  base.py:93(get_shape)
                                                                              104    0.001    0.008  compressed.py:24(__init__)
                                                                               52    0.000    0.000  csr.py:211(_swap)
                                                                              104    0.000    0.000  data.py:28(_get_dtype)
                                                                              468    0.000    0.000  numeric.py:394(asarray)
                                                                               52    0.000    0.000  sputils.py:26(upcast)
                                                                              104    0.001    0.002  sputils.py:132(get_index_dtype)
                                                                              104    0.000    0.000  {getattr}
                                                                              156    0.000    0.000  {numpy.core.multiarray.empty}
                                                                               52    0.039    0.039  {scipy.sparse._sparsetools.csr_matmat_pass1}
                                                                               52    0.079    0.079  {scipy.sparse._sparsetools.csr_matmat_pass2}
common.py:70(_check)                                                   ->  108342    0.075    0.075  {getattr}
InstantiationDecorators.py:174(instantiate_p)                          ->       2    0.000    0.004  InstantiationDecorators.py:46(_extract)
                                                                                2    0.000    0.118  PyMCObjects.py:655(__init__)
common.py:2526(is_datetime_or_timedelta_dtype)                         ->   34997    0.046    0.084  common.py:2461(_get_dtype_type)
                                                                            34997    0.011    0.011  {issubclass}
{method 'copy' of 'numpy.ndarray' objects}                             ->      55    0.000    0.000  defmatrix.py:290(__array_finalize__)
PyMCObjects.py:655(__init__)                                           ->       2    0.000    0.118  Node.py:210(__init__)
                                                                                2    0.000    0.000  PyMCObjects.py:903(get_logp)
                                                                                4    0.000    0.000  fromnumeric.py:1462(shape)
                                                                                1    0.000    0.000  numeric.py:464(asanyarray)
                                                                                4    0.000    0.000  {isinstance}
Node.py:210(__init__)                                                  ->       2    0.000    0.118  Node.py:112(__init__)
Node.py:112(__init__)                                                  ->       2    0.000    0.118  Node.py:135(_set_parents)
                                                                                2    0.000    0.000  {isinstance}
Node.py:135(_set_parents)                                              ->       2    0.000    0.000  PyMCObjects.py:108(__init__)
                                                                                2    0.000    0.000  PyMCObjects.py:134(attach_parents)
                                                                                2    0.000    0.118  PyMCObjects.py:780(gen_lazy_function)
PyMCObjects.py:780(gen_lazy_function)                                  ->       2    0.000    0.000  Container.py:505(__init__)
                                                                                2    0.000    0.000  Node.py:131(_get_parents)
                                                                                2    0.000    0.000  six.py:560(iteritems)
                                                                                2    0.000    0.118  {method 'force_compute' of 'pymc.LazyFunction.LazyFunction' objects}
                                                                                2    0.000    0.000  {method 'update' of 'dict' objects}
{method 'force_compute' of 'pymc.LazyFunction.LazyFunction' objects}   ->       2    0.000    0.000  Container.py:539(get_value)
                                                                                1    0.000    0.000  learn_model.py:84(pymcdf)
                                                                                1    0.001    0.118  learn_model.py:87(emat)
groupby.py:1482(aggregate)                                             ->     206    0.000    0.001  common.py:2495(is_integer_dtype)
                                                                              103    0.000    0.000  common.py:2526(is_datetime_or_timedelta_dtype)
                                                                              103    0.000    0.000  common.py:2541(is_numeric_dtype)
                                                                              103    0.000    0.000  common.py:2557(is_bool_dtype)
                                                                               52    0.000    0.081  groupby.py:1382(ngroups)
                                                                              155    0.000    0.001  groupby.py:1443(_get_aggregate_function)
                                                                              103    0.000    0.023  groupby.py:1566(_aggregate)
                                                                               52    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                              103    0.000    0.000  {method 'fill' of 'numpy.ndarray' objects}
                                                                              103    0.000    0.000  {method 'get' of 'dict' objects}
                                                                              206    0.000    0.000  {method 'swapaxes' of 'numpy.ndarray' objects}
                                                                              103    0.000    0.000  {numpy.core.multiarray.empty}
                                                                              103    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                              103    0.007    0.007  {pandas.algos.ensure_float64}
{len}                                                                  ->     172    0.000    0.000  frame.py:599(__len__)
                                                                            76582    0.027    0.034  index.py:242(__len__)
                                                                                3    0.000    0.000  internals.py:166(__len__)
                                                                              253    0.000    0.001  internals.py:2369(__len__)
                                                                              111    0.000    0.000  series.py:381(__len__)
                                                                                1    0.000    0.000  sre_parse.py:137(__len__)
frame.py:2114(__setitem__)                                             ->       1    0.000    0.035  frame.py:2133(_setitem_array)
                                                                              116    0.001    0.105  frame.py:2192(_set_item)
                                                                              117    0.001    0.002  indexing.py:1612(convert_to_index_sliceable)
                                                                              233    0.000    0.000  {isinstance}
{getattr}                                                              ->       1    0.000    0.000  Model.py:511(fget)
                                                                                2    0.000    0.000  PyMCObjects.py:880(fget)
                                                                                2    0.000    0.000  PyMCObjects.py:1055(_get_coparents)
                                                                                2    0.000    0.000  PyMCObjects.py:1065(_get_moral_neighbors)
                                                                                2    0.000    0.000  PyMCObjects.py:1075(_get_markov_blanket)
                                                                               52    0.000    0.000  base.py:485(__getattr__)
                                                                                2    0.000    0.000  generic.py:1046(_indexer)
                                                                              106    0.000    0.000  generic.py:2135(__getattr__)
                                                                              364    0.000    0.001  series.py:308(values)
{issubclass}                                                           ->
frame.py:2192(_set_item)                                               ->     116    0.000    0.000  frame.py:2164(_ensure_valid_index)
                                                                              116    0.002    0.007  frame.py:2315(_sanitize_column)
                                                                              116    0.001    0.020  generic.py:1195(_set_item)
                                                                              116    0.000    0.076  generic.py:1227(_check_setitem_copy)
                                                                              116    0.000    0.000  {len}
nanops.py:33(check)                                                    ->   69139    0.044    0.044  {hasattr}
                                                                            34543    0.013    0.013  {issubclass}
nanops.py:206(_na_ok_dtype)                                            ->   34894    0.039    0.077  common.py:2501(is_int_or_datetime_dtype)
internals.py:2396(apply)                                               ->      60    0.000    0.003  internals.py:371(astype)
                                                                              103    0.000    0.001  internals.py:422(convert)
                                                                              367    0.001    0.046  internals.py:504(copy)
                                                                                4    0.000    0.000  internals.py:529(setitem)
                                                                              210    0.001    0.015  internals.py:2163(__init__)
                                                                              226    0.000    0.000  internals.py:2442(<genexpr>)
                                                                              210    0.000    0.024  internals.py:2837(_consolidate_inplace)
                                                                               16    0.000    0.000  internals.py:3343(__init__)
                                                                               16    0.000    0.000  internals.py:3499(_consolidate_inplace)
                                                                              534    0.000    0.000  {getattr}
                                                                              534    0.000    0.000  {isinstance}
                                                                              226    0.000    0.000  {len}
                                                                              431    0.000    0.000  {method 'append' of 'list' objects}
                                                                              103    0.000    0.000  {method 'extend' of 'list' objects}
ops.py:574(wrapper)                                                    ->     362    0.000    0.026  common.py:212(isnull)
                                                                              362    0.001    0.003  common.py:2569(is_categorical_dtype)
                                                                                8    0.000    0.000  common.py:3338(_maybe_match_name)
                                                                              362    0.001    0.020  generic.py:4294(logical_func)
                                                                              362    0.001    0.001  numeric.py:1910(isscalar)
                                                                              370    0.001    0.008  ops.py:543(na_op)
                                                                              370    0.003    0.022  series.py:119(__init__)
                                                                                8    0.000    0.000  series.py:237(_constructor)
                                                                               16    0.000    0.000  series.py:308(values)
                                                                              362    0.000    0.002  series.py:319(get_values)
                                                                             1456    0.000    0.000  {isinstance}
                                                                              362    0.000    0.000  {issubclass}
                                                                               16    0.000    0.000  {len}
                                                                              362    0.000    0.000  {pandas.index.convert_scalar}
                                                                              724    0.001    0.001  {pandas.lib.values_from_object}
generic.py:2414(copy)                                                  ->     106    0.000    0.000  frame.py:189(_constructor)
                                                                              106    0.001    0.001  frame.py:200(__init__)
                                                                              110    0.000    0.000  generic.py:2118(__finalize__)
                                                                              110    0.001    0.084  internals.py:2674(copy)
                                                                                4    0.000    0.000  series.py:119(__init__)
                                                                                4    0.000    0.000  series.py:237(_constructor)
internals.py:2674(copy)                                                ->     110    0.002    0.081  internals.py:2396(apply)
                                                                              216    0.000    0.003  internals.py:2694(<lambda>)
common.py:2547(is_float_dtype)                                         ->   69138    0.025    0.031  common.py:2461(_get_dtype_type)
                                                                            69138    0.012    0.012  {issubclass}
groupby.py:1382(ngroups)                                               ->      52    0.000    0.080  groupby.py:1393(result_index)
                                                                               52    0.000    0.000  {len}
stepper.py:23(propose)                                                 ->      50    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                               50    0.000    0.001  PyMCObjects.py:834(set_value)
                                                                              200    0.000    0.002  fromnumeric.py:1631(sum)
                                                                               50    0.000    0.001  numeric.py:81(zeros_like)
                                                                             4350    0.004    0.018  numeric.py:141(ones)
                                                                              100    0.000    0.003  scimath.py:176(sqrt)
                                                                               50    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                               50    0.001    0.001  {method 'standard_normal' of 'mtrand.RandomState' objects}
                                                                               50    0.000    0.000  {range}
groupby.py:1393(result_index)                                          ->      52    0.000    0.000  groupby.py:1319(names)
                                                                               52    0.000    0.079  groupby.py:2026(group_index)
                                                                               52    0.000    0.001  index.py:668(rename)
                                                                               52    0.000    0.000  {len}
{scipy.sparse._sparsetools.csr_matmat_pass2}                           ->
groupby.py:2026(group_index)                                           ->      52    0.000    0.079  groupby.py:2032(_make_labels)
gauge_fix.py:101(fix_matrix)                                           ->       1    0.000    0.030  basic.py:557(pinv)
                                                                                2    0.000    0.000  defmatrix.py:244(__new__)
                                                                                2    0.000    0.002  defmatrix.py:338(__mul__)
                                                                                1    0.000    0.000  defmatrix.py:928(getT)
                                                                                1    0.045    0.046  gauge_fix.py:6(get_Lambda_mm)
                                                                                1    0.000    0.000  {method 'flatten' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
groupby.py:2032(_make_labels)                                          ->      52    0.003    0.077  algorithms.py:98(factorize)
                                                                               52    0.001    0.002  index.py:109(__new__)
common.py:2501(is_int_or_datetime_dtype)                               ->   34894    0.019    0.022  common.py:2461(_get_dtype_type)
                                                                            69449    0.017    0.017  {issubclass}
algorithms.py:98(factorize)                                            ->      52    0.000    0.000  algorithms.py:403(_get_data_algo)
                                                                               52    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                               52    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                               52    0.000    0.000  numeric.py:394(asarray)
                                                                              104    0.000    0.000  {isinstance}
                                                                              208    0.000    0.000  {len}
                                                                               52    0.040    0.040  {method 'argsort' of 'numpy.ndarray' objects}
                                                                               51    0.023    0.023  {method 'get_labels' of 'pandas.hashtable.Float64HashTable' objects}
                                                                                1    0.005    0.005  {method 'get_labels' of 'pandas.hashtable.PyObjectHashTable' objects}
                                                                               52    0.001    0.001  {method 'put' of 'numpy.ndarray' objects}
                                                                              104    0.003    0.003  {method 'take' of 'numpy.ndarray' objects}
                                                                               51    0.000    0.000  {method 'to_array' of 'pandas.hashtable.Float64Vector' objects}
                                                                                1    0.000    0.000  {method 'to_array' of 'pandas.hashtable.ObjectVector' objects}
                                                                               52    0.000    0.000  {numpy.core.multiarray.arange}
                                                                               52    0.000    0.000  {numpy.core.multiarray.empty}
                                                                               52    0.001    0.001  {numpy.core.multiarray.putmask}
                                                                               52    0.000    0.000  {pandas.algos.ensure_platform_int}
series.py:2611(_try_cast)                                              ->   34977    0.045    0.045  common.py:1949(_possibly_castable)
                                                                              455    0.003    0.006  common.py:1974(_possibly_cast_to_datetime)
                                                                              455    0.000    0.000  {numpy.core.multiarray.array}
generic.py:1227(_check_setitem_copy)                                   ->       2    0.000    0.000  config.py:221(__call__)
                                                                                2    0.000    0.000  frame.py:418(shape)
                                                                                1    0.000    0.000  generic.py:2152(__setattr__)
                                                                                1    0.000    0.000  {_warnings.warn}
                                                                                2    0.076    0.076  {gc.collect}
                                                                                2    0.000    0.000  {gc.get_referents}
                                                                                1    0.000    0.000  {isinstance}
{gc.collect}                                                           ->
series.py:257(_set_axis)                                               ->      51    0.000    0.000  index.py:995(is_all_dates)
                                                                             1466    0.000    0.000  index.py:3427(is_all_dates)
                                                                            35608    0.017    0.017  series.py:277(_set_subtyp)
internals.py:3394(_values)                                             ->   71573    0.028    0.028  internals.py:3390(_block)
common.py:2507(is_datetime64_dtype)                                    ->   35423    0.022    0.029  common.py:2461(_get_dtype_type)
                                                                            35423    0.013    0.013  {issubclass}
groupby.py:3214(_get_data_to_aggregate)                                ->      52    0.000    0.000  groupby.py:511(__getattr__)
                                                                               52    0.000    0.064  groupby.py:2624(_obj_with_exclusions)
generic.py:1566(drop)                                                  ->      52    0.000    0.000  frame.py:414(axes)
                                                                               52    0.000    0.051  frame.py:2508(reindex)
                                                                               53    0.000    0.000  generic.py:292(_get_axis_number)
                                                                               53    0.000    0.000  generic.py:305(_get_axis_name)
                                                                               53    0.000    0.000  generic.py:318(_get_axis)
                                                                               52    0.000    0.000  index.py:599(_get_names)
                                                                               52    0.000    0.001  index.py:610(set_names)
                                                                                1    0.000    0.000  index.py:740(is_unique)
                                                                               53    0.001    0.012  index.py:2551(drop)
frame.py:1774(__getitem__)                                             ->     419    0.001    0.020  frame.py:1799(_getitem_column)
                                                                               61    0.001    0.039  frame.py:1816(_getitem_array)
                                                                              480    0.002    0.002  index.py:1045(__contains__)
                                                                               61    0.000    0.000  indexing.py:1612(convert_to_index_sliceable)
                                                                              541    0.000    0.000  {isinstance}
groupby.py:2624(_obj_with_exclusions)                                  ->      52    0.001    0.064  generic.py:1566(drop)
                                                                               52    0.000    0.000  {len}
{src.fast.seqs2array_for_matmodel}                                     ->
internals.py:141(mgr_locs)                                             ->     213    0.001    0.002  numeric.py:588(require)
                                                                            37347    0.011    0.011  {isinstance}
{numpy.core.multiarray.putmask}                                        ->
generic.py:292(_get_axis_number)                                       ->   35383    0.006    0.006  {method 'get' of 'dict' objects}
                                                                            35383    0.006    0.006  {pandas.lib.is_integer}
{hasattr}                                                              ->      52    0.000    0.000  base.py:485(__getattr__)
                                                                              696    0.003    0.005  generic.py:2135(__getattr__)
                                                                              414    0.000    0.001  series.py:288(dtype)
                                                                                1    0.000    0.000  series.py:308(values)
generic.py:90(__init__)                                                ->
{numpy.core.multiarray.array}                                          ->      51    0.000    0.005  generic.py:739(__array__)
                                                                              802    0.001    0.001  generic.py:2135(__getattr__)
                                                                              323    0.000    0.001  index.py:248(__array__)
                                                                              350    0.000    0.002  series.py:391(__array__)
series.py:519(__getitem__)                                             ->     375    0.001    0.003  common.py:2121(is_bool_indexer)
                                                                              375    0.000    0.007  common.py:2416(is_iterator)
                                                                              381    0.002    0.009  index.py:1582(get_value)
                                                                              348    0.001    0.006  indexing.py:1648(check_bool_indexer)
                                                                                6    0.000    0.000  numeric.py:1910(isscalar)
                                                                              375    0.001    0.026  series.py:563(_get_with)
utils.py:134(collapse_further)                                         ->       1    0.000    0.001  frame.py:1774(__getitem__)
                                                                                1    0.000    0.001  frame.py:2630(reset_index)
                                                                                1    0.000    0.000  generic.py:1566(drop)
                                                                                1    0.000    0.000  generic.py:3108(groupby)
                                                                                1    0.000    0.050  groupby.py:105(f)
                                                                                2    0.000    0.000  index.py:1001(__iter__)
{method 'write' of 'file' objects}                                     ->
{pandas.algos.take_2d_axis1_object_object}                             ->
frame.py:2508(reindex)                                                 ->      52    0.001    0.051  generic.py:1739(reindex)
generic.py:1739(reindex)                                               ->      52    0.000    0.000  common.py:2759(_clean_reindex_fill_method)
                                                                               52    0.000    0.048  frame.py:2459(_reindex_axes)
                                                                               52    0.000    0.000  generic.py:245(_construct_axes_from_arguments)
                                                                               52    0.000    0.000  generic.py:318(_get_axis)
                                                                               52    0.000    0.000  generic.py:1794(_needs_reindex_multi)
                                                                               52    0.000    0.000  generic.py:2118(__finalize__)
                                                                               52    0.000    0.000  generic.py:2197(_consolidate_inplace)
                                                                               52    0.000    0.001  index.py:1245(identical)
                                                                               52    0.000    0.000  {all}
                                                                               52    0.000    0.000  {method 'items' of 'dict' objects}
                                                                              260    0.000    0.000  {method 'pop' of 'dict' objects}
numeric.py:394(asarray)                                                ->    6470    0.036    0.044  {numpy.core.multiarray.array}
frame.py:2459(_reindex_axes)                                           ->      52    0.000    0.048  frame.py:2482(_reindex_columns)
internals.py:2163(__init__)                                            ->    1178    0.001    0.001  index.py:5677(_ensure_index)
                                                                             1471    0.001    0.001  internals.py:2208(ndim)
                                                                              589    0.014    0.031  internals.py:2258(_rebuild_blknos_and_blklocs)
                                                                              326    0.002    0.006  internals.py:2384(_verify_integrity)
                                                                              589    0.002    0.005  internals.py:2568(_consolidate_check)
frame.py:2482(_reindex_columns)                                        ->      52    0.001    0.045  generic.py:1854(_reindex_with_indexers)
                                                                               52    0.000    0.002  index.py:1862(reindex)
internals.py:504(copy)                                                 ->     578    0.000    0.000  internals.py:119(mgr_locs)
                                                                              578    0.001    0.003  internals.py:2073(make_block)
                                                                              475    0.042    0.042  {method 'copy' of 'numpy.ndarray' objects}
internals.py:3168(_slice_take_blocks_ax0)                              ->     222    0.002    0.008  common.py:756(take_nd)
                                                                              216    0.001    0.034  internals.py:845(take_nd)
                                                                              111    0.000    0.001  internals.py:2204(shape)
                                                                                5    0.000    0.000  internals.py:2208(ndim)
                                                                              111    0.000    0.000  internals.py:2246(_is_single_block)
                                                                              327    0.001    0.001  internals.py:3935(_get_blkno_placements)
                                                                              111    0.000    0.001  internals.py:4461(_preprocess_slice_or_indexer)
                                                                              111    0.000    0.000  {len}
                                                                              216    0.000    0.000  {method 'append' of 'list' objects}
gauge_fix.py:6(get_Lambda_mm)                                          ->       1    0.000    0.000  defmatrix.py:244(__new__)
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
                                                                             1413    0.001    0.001  {range}
common.py:2557(is_bool_dtype)                                          ->   34940    0.014    0.017  common.py:2461(_get_dtype_type)
                                                                            34940    0.006    0.006  {issubclass}
lil.py:378(tocsr)                                                      ->       2    0.000    0.000  base.py:93(get_shape)
                                                                                1    0.000    0.000  compressed.py:24(__init__)
                                                                                1    0.000    0.000  fromnumeric.py:1925(cumsum)
                                                                                3    0.000    0.025  numeric.py:394(asarray)
                                                                                1    0.000    0.000  sputils.py:132(get_index_dtype)
                                                                            26821    0.001    0.001  {len}
                                                                                1    0.000    0.000  {max}
                                                                            53642    0.007    0.007  {method 'extend' of 'list' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
                                                                                1    0.000    0.000  {numpy.core.multiarray.concatenate}
                                                                                1    0.000    0.000  {sum}
common.py:1949(_possibly_castable)                                     ->
generic.py:1854(_reindex_with_indexers)                                ->      52    0.000    0.000  frame.py:189(_constructor)
                                                                               52    0.000    0.001  frame.py:200(__init__)
                                                                               52    0.000    0.000  generic.py:322(_get_block_manager_axis)
                                                                               52    0.000    0.000  generic.py:2118(__finalize__)
                                                                               52    0.000    0.000  index.py:5677(_ensure_index)
                                                                               52    0.000    0.044  internals.py:3124(reindex_indexer)
                                                                               52    0.000    0.000  {method 'keys' of 'dict' objects}
                                                                               52    0.000    0.000  {pandas.algos.ensure_int64}
                                                                               52    0.000    0.000  {sorted}
indexing.py:113(__setitem__)                                           ->       5    0.000    0.000  indexing.py:94(_get_setitem_indexer)
                                                                                5    0.000    0.045  indexing.py:199(_setitem_with_indexer)
{method 'view' of 'numpy.ndarray' objects}                             ->      55    0.000    0.000  defmatrix.py:290(__array_finalize__)
indexing.py:199(_setitem_with_indexer)                                 ->      10    0.000    0.000  frame.py:414(axes)
                                                                                5    0.000    0.000  frame.py:1774(__getitem__)
                                                                                5    0.000    0.000  generic.py:318(_get_axis)
                                                                                5    0.000    0.000  generic.py:2225(_is_mixed_type)
                                                                                4    0.000    0.000  index.py:1001(__iter__)
                                                                               11    0.000    0.000  index.py:1059(__getitem__)
                                                                                5    0.000    0.000  indexing.py:170(_has_valid_setitem_indexer)
                                                                                5    0.000    0.043  indexing.py:397(setter)
                                                                                1    0.000    0.000  indexing.py:417(can_do_equal_len)
                                                                                1    0.000    0.000  indexing.py:510(_align_series)
                                                                                5    0.000    0.000  indexing.py:1584(length_of_indexer)
                                                                                5    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                5    0.000    0.000  series.py:474(axes)
                                                                                5    0.000    0.000  {any}
                                                                                1    0.000    0.000  {getattr}
                                                                               46    0.000    0.000  {isinstance}
                                                                                5    0.000    0.000  {len}
                                                                               10    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.array}
                                                                                5    0.000    0.000  {pandas.lib.is_integer}
common.py:2495(is_integer_dtype)                                       ->   35161    0.014    0.018  common.py:2461(_get_dtype_type)
                                                                            35553    0.006    0.006  {issubclass}
indexing.py:397(setter)                                                ->       5    0.000    0.000  frame.py:1774(__getitem__)
                                                                                5    0.000    0.043  frame.py:2114(__setitem__)
                                                                                4    0.000    0.000  generic.py:1137(_maybe_update_cacher)
                                                                                4    0.000    0.000  generic.py:2152(__setattr__)
                                                                                4    0.000    0.000  generic.py:2197(_consolidate_inplace)
                                                                                4    0.000    0.000  generic.py:2414(copy)
                                                                                4    0.000    0.000  indexing.py:405(<genexpr>)
                                                                                4    0.000    0.000  internals.py:2482(setitem)
                                                                                5    0.000    0.000  {all}
                                                                                5    0.000    0.000  {isinstance}
common.py:2516(is_timedelta64_dtype)                                   ->   35072    0.013    0.016  common.py:2461(_get_dtype_type)
                                                                            35072    0.006    0.006  {issubclass}
{pandas.lib.values_from_object}                                        ->      51    0.000    0.005  generic.py:2331(get_values)
                                                                              448    0.000    0.001  index.py:268(get_values)
                                                                              731    0.000    0.003  series.py:319(get_values)
frame.py:1816(_getitem_array)                                          ->      61    0.000    0.001  common.py:2121(is_bool_indexer)
                                                                               59    0.000    0.001  generic.py:1046(_indexer)
                                                                               61    0.001    0.025  generic.py:1339(take)
                                                                                2    0.000    0.000  index.py:3434(equals)
                                                                               59    0.001    0.012  indexing.py:1007(_convert_to_indexer)
                                                                                2    0.000    0.000  indexing.py:1648(check_bool_indexer)
                                                                                2    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'nonzero' of 'numpy.ndarray' objects}
{scipy.sparse._sparsetools.csr_matmat_pass1}                           ->
__init__.py:143(itervalues)                                            ->   34543    0.007    0.007  {getattr}
                                                                            34543    0.007    0.007  {method 'itervalues' of 'dict' objects}
internals.py:2837(_consolidate_inplace)                                ->     104    0.002    0.005  internals.py:2258(_rebuild_blknos_and_blklocs)
                                                                              757    0.000    0.000  internals.py:2560(is_consolidated)
                                                                              104    0.002    0.031  internals.py:3809(_consolidate)
internals.py:2258(_rebuild_blknos_and_blklocs)                         ->    1779    0.000    0.000  internals.py:119(mgr_locs)
                                                                             1386    0.003    0.007  internals.py:2204(shape)
                                                                             1779    0.000    0.000  {len}
                                                                              693    0.001    0.006  {method 'any' of 'numpy.ndarray' objects}
                                                                             1386    0.001    0.001  {method 'fill' of 'numpy.ndarray' objects}
                                                                             1779    0.003    0.003  {numpy.core.multiarray.arange}
                                                                             1386    0.003    0.003  {numpy.core.multiarray.empty}
frame.py:2133(_setitem_array)                                          ->       1    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                2    0.000    0.000  frame.py:1774(__getitem__)
                                                                                2    0.000    0.035  frame.py:2114(__setitem__)
                                                                                1    0.000    0.000  index.py:1001(__iter__)
                                                                                1    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
index.py:5677(_ensure_index)                                           ->     169    0.002    0.006  index.py:109(__new__)
                                                                              169    0.000    0.000  {hasattr}
                                                                            36917    0.008    0.008  {isinstance}
                                                                                2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {pandas.lib.clean_index_list}
index.py:242(__len__)                                                  ->   76582    0.006    0.006  {len}
fromnumeric.py:1631(sum)                                               ->     356    0.000    0.002  _methods.py:31(_sum)
                                                                              348    0.001    0.028  generic.py:4243(stat_func)
                                                                              704    0.001    0.001  {isinstance}
internals.py:3809(_consolidate)                                        ->     415    0.000    0.001  internals.py:3815(<lambda>)
                                                                              308    0.013    0.027  internals.py:3830(_merge_blocks)
                                                                              308    0.000    0.000  {isinstance}
                                                                              308    0.000    0.000  {method 'append' of 'list' objects}
                                                                              104    0.001    0.001  {sorted}
compressed.py:24(__init__)                                             ->     105    0.000    0.000  base.py:71(set_shape)
                                                                              156    0.000    0.000  base.py:93(get_shape)
                                                                              104    0.000    0.009  base.py:195(asformat)
                                                                              261    0.000    0.000  base.py:865(isspmatrix)
                                                                               52    0.000    0.012  compressed.py:24(__init__)
                                                                              156    0.000    0.001  compressed.py:115(_set_self)
                                                                              261    0.005    0.012  compressed.py:126(check_format)
                                                                               52    0.001    0.007  coo.py:116(__init__)
                                                                              261    0.000    0.001  data.py:25(__init__)
                                                                               52    0.000    0.000  numeric.py:394(asarray)
                                                                              105    0.000    0.000  sputils.py:106(getdtype)
                                                                              105    0.001    0.002  sputils.py:132(get_index_dtype)
                                                                              105    0.000    0.000  sputils.py:205(isshape)
                                                                              157    0.000    0.000  {isinstance}
                                                                              210    0.000    0.000  {len}
                                                                              315    0.000    0.000  {numpy.core.multiarray.array}
basic.py:557(pinv)                                                     ->       1    0.030    0.030  basic.py:456(lstsq)
                                                                                1    0.000    0.000  function_base.py:550(asarray_chkfinite)
                                                                                1    0.000    0.000  numeric.py:2125(identity)
generic.py:3108(groupby)                                               ->      52    0.000    0.000  generic.py:292(_get_axis_number)
                                                                               52    0.000    0.030  groupby.py:1190(groupby)
basic.py:456(lstsq)                                                    ->       1    0.000    0.000  lapack.py:255(get_lapack_funcs)
                                                                                2    0.000    0.000  misc.py:126(_datacopied)
                                                                                1    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  {len}
                                                                                1    0.000    0.000  {map}
                                                                                1    0.000    0.000  {method 'astype' of 'numpy.generic' objects}
groupby.py:1190(groupby)                                               ->      52    0.001    0.029  groupby.py:364(__init__)
                                                                              104    0.000    0.000  {isinstance}
groupby.py:364(__init__)                                               ->      52    0.000    0.000  generic.py:292(_get_axis_number)
                                                                               52    0.000    0.019  generic.py:2197(_consolidate_inplace)
                                                                               52    0.001    0.009  groupby.py:2043(_get_grouper)
                                                                               52    0.000    0.000  {isinstance}
internals.py:3390(_block)                                              ->
internals.py:3830(_merge_blocks)                                       ->     104    0.000    0.001  fromnumeric.py:803(argsort)
                                                                              211    0.000    0.000  internals.py:119(mgr_locs)
                                                                              104    0.001    0.003  internals.py:2073(make_block)
                                                                              104    0.000    0.010  internals.py:3866(_vstack)
                                                                              308    0.000    0.000  {len}
                                                                              104    0.000    0.000  {numpy.core.multiarray.concatenate}
index.py:109(__new__)                                                  ->     491    0.003    0.006  common.py:2347(_asarray_tuplesafe)
                                                                              278    0.000    0.001  common.py:2557(is_bool_dtype)
                                                                              982    0.002    0.003  common.py:2569(is_categorical_dtype)
                                                                              491    0.001    0.003  index.py:204(_simple_new)
                                                                                3    0.000    0.000  index.py:258(dtype)
                                                                               56    0.000    0.001  index.py:3385(__new__)
                                                                               51    0.000    0.001  index.py:3489(__new__)
                                                                              213    0.000    0.000  numeric.py:1910(isscalar)
                                                                              213    0.000    0.000  {hasattr}
                                                                             1409    0.001    0.001  {isinstance}
                                                                             1762    0.000    0.000  {issubclass}
                                                                              384    0.003    0.003  {pandas.lib.infer_dtype}
                                                                              213    0.000    0.000  {sorted}
{pandas.lib.isscalar}                                                  ->
series.py:563(_get_with)                                               ->      27    0.000    0.000  index.py:817(_convert_slice_indexer)
                                                                              375    0.001    0.023  series.py:626(_get_values)
                                                                             1767    0.001    0.001  {isinstance}
                                                                              348    0.001    0.001  {pandas.lib.infer_dtype}
internals.py:3060(insert)                                              ->     104    0.002    0.002  function_base.py:3625(insert)
                                                                              110    0.000    0.001  function_base.py:3832(append)
                                                                              107    0.000    0.000  index.py:1045(__contains__)
                                                                              107    0.001    0.013  index.py:2531(insert)
                                                                              308    0.000    0.000  internals.py:119(mgr_locs)
                                                                              154    0.000    0.000  internals.py:141(mgr_locs)
                                                                              107    0.000    0.001  internals.py:2073(make_block)
                                                                              107    0.000    0.000  internals.py:2208(ndim)
                                                                              214    0.000    0.000  internals.py:2279(_get_items)
                                                                              107    0.001    0.004  internals.py:4450(_fast_count_smallints)
                                                                              107    0.000    0.000  {isinstance}
                                                                              368    0.000    0.000  {len}
                                                                              154    0.000    0.000  {method 'add' of 'pandas.lib.BlockPlacement' objects}
frame.py:2630(reset_index)                                             ->      52    0.000    0.020  frame.py:2213(insert)
                                                                               52    0.000    0.000  frame.py:2666(_maybe_casted_values)
                                                                               51    0.000    0.000  generic.py:702(__contains__)
                                                                               55    0.000    0.002  generic.py:2152(__setattr__)
                                                                                1    0.000    0.000  generic.py:2414(copy)
                                                                              107    0.000    0.000  {isinstance}
                                                                               55    0.000    0.000  {len}
                                                                               55    0.002    0.002  {numpy.core.multiarray.arange}
generic.py:1339(take)                                                  ->      61    0.000    0.000  frame.py:189(_constructor)
                                                                               61    0.000    0.001  frame.py:200(__init__)
                                                                              122    0.000    0.000  generic.py:318(_get_axis)
                                                                               61    0.000    0.000  generic.py:322(_get_block_manager_axis)
                                                                               60    0.000    0.000  generic.py:1199(_set_is_copy)
                                                                               61    0.000    0.000  generic.py:2118(__finalize__)
                                                                               61    0.000    0.001  generic.py:2197(_consolidate_inplace)
                                                                               59    0.000    0.001  index.py:1233(equals)
                                                                                2    0.000    0.000  index.py:3434(equals)
                                                                               61    0.001    0.021  internals.py:3255(take)
strings.py:1299(slice)                                                 ->      88    0.000    0.017  strings.py:768(str_slice)
                                                                               88    0.001    0.007  strings.py:1077(_wrap_result)
groupby.py:1566(_aggregate)                                            ->      52    0.000    0.001  groupby.py:1363(group_info)
                                                                              103    0.020    0.022  {pandas.algos.group_add_float64}
series.py:626(_get_values)                                             ->     375    0.001    0.001  generic.py:2118(__finalize__)
                                                                              375    0.002    0.018  internals.py:3437(get_slice)
                                                                              375    0.001    0.003  series.py:119(__init__)
                                                                              375    0.000    0.000  series.py:237(_constructor)
{numpy.core.multiarray.empty}                                          ->
{method 'get_labels' of 'pandas.hashtable.Float64HashTable' objects}   ->
{pandas.algos.group_add_float64}                                       ->     206    0.000    0.002  numeric.py:81(zeros_like)
generic.py:2197(_consolidate_inplace)                                  ->     329    0.001    0.022  generic.py:2189(_protect_consolidate)
{pandas.algos.take_2d_axis1_int64_int64}                               ->
generic.py:2189(_protect_consolidate)                                  ->      53    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                              329    0.001    0.021  generic.py:2199(f)
                                                                                8    0.000    0.000  generic.py:2227(<lambda>)
                                                                              674    0.000    0.000  {len}
generic.py:2199(f)                                                     ->     329    0.001    0.001  generic.py:2152(__setattr__)
                                                                              329    0.000    0.019  internals.py:2821(consolidate)
frame.py:1799(_getitem_column)                                         ->     419    0.001    0.020  generic.py:1079(_get_item_cache)
                                                                              110    0.000    0.000  index.py:740(is_unique)
generic.py:1195(_set_item)                                             ->     116    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                              116    0.003    0.019  internals.py:2943(set)
generic.py:4294(logical_func)                                          ->     362    0.001    0.020  series.py:2068(_reduce)
frame.py:2213(insert)                                                  ->      52    0.000    0.000  frame.py:2164(_ensure_valid_index)
                                                                               52    0.001    0.004  frame.py:2315(_sanitize_column)
                                                                               52    0.002    0.016  internals.py:3060(insert)
generic.py:1079(_get_item_cache)                                       ->     242    0.001    0.007  frame.py:2102(_box_item_values)
                                                                              242    0.001    0.002  generic.py:1093(_set_as_cached)
                                                                              242    0.000    0.000  generic.py:2152(__setattr__)
                                                                              242    0.001    0.009  internals.py:2844(get)
                                                                              419    0.000    0.000  {method 'get' of 'dict' objects}
coo.py:116(__init__)                                                   ->     104    0.000    0.000  base.py:71(set_shape)
                                                                               52    0.000    0.000  base.py:93(get_shape)
                                                                               52    0.000    0.000  base.py:865(isspmatrix)
                                                                              104    0.003    0.014  coo.py:241(_check)
                                                                              104    0.000    0.000  data.py:25(__init__)
                                                                               52    0.000    0.000  numeric.py:394(asarray)
                                                                               52    0.000    0.000  shape_base.py:60(atleast_2d)
                                                                               52    0.000    0.000  sputils.py:132(get_index_dtype)
                                                                               52    0.000    0.000  sputils.py:205(isshape)
                                                                              104    0.000    0.000  {isinstance}
                                                                               52    0.000    0.000  {len}
                                                                               52    0.000    0.000  {max}
                                                                              104    0.001    0.001  {method 'astype' of 'numpy.ndarray' objects}
                                                                               52    0.001    0.001  {method 'nonzero' of 'numpy.ndarray' objects}
                                                                              156    0.000    0.000  {numpy.core.multiarray.array}
internals.py:2821(consolidate)                                         ->      53    0.000    0.005  internals.py:2163(__init__)
                                                                              323    0.000    0.001  internals.py:2560(is_consolidated)
                                                                               53    0.000    0.013  internals.py:2837(_consolidate_inplace)
                                                                                6    0.000    0.000  internals.py:3493(is_consolidated)
internals.py:2943(set)                                                 ->       1    0.000    0.000  common.py:756(take_nd)
                                                                              116    0.000    0.001  common.py:2565(is_categorical)
                                                                              116    0.000    0.001  index.py:1553(get_loc)
                                                                               14    0.000    0.000  internals.py:119(mgr_locs)
                                                                               52    0.002    0.002  internals.py:262(set)
                                                                                3    0.000    0.000  internals.py:272(delete)
                                                                               54    0.000    0.000  internals.py:1258(should_store)
                                                                                2    0.000    0.000  internals.py:1304(should_store)
                                                                                5    0.000    0.000  internals.py:1495(set)
                                                                                5    0.000    0.000  internals.py:1542(should_store)
                                                                                4    0.000    0.000  internals.py:2073(make_block)
                                                                              116    0.001    0.001  internals.py:2204(shape)
                                                                              120    0.000    0.000  internals.py:2208(ndim)
                                                                              171    0.000    0.000  internals.py:2279(_get_items)
                                                                                3    0.000    0.000  internals.py:2670(nblocks)
                                                                               61    0.000    0.000  internals.py:2973(value_getitem)
                                                                                5    0.000    0.000  internals.py:3024(<genexpr>)
                                                                               55    0.001    0.010  internals.py:3060(insert)
                                                                              122    0.001    0.001  internals.py:3935(_get_blkno_placements)
                                                                              177    0.000    0.000  {isinstance}
                                                                              197    0.000    0.000  {len}
                                                                               13    0.000    0.000  {method 'append' of 'list' objects}
                                                                                4    0.000    0.000  {method 'append' of 'pandas.lib.BlockPlacement' objects}
                                                                               61    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'fill' of 'numpy.ndarray' objects}
                                                                                8    0.000    0.000  {numpy.core.multiarray.arange}
                                                                                4    0.000    0.000  {numpy.core.multiarray.concatenate}
                                                                                1    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
compressed.py:938(toarray)                                             ->      52    0.001    0.015  compressed.py:915(tocoo)
                                                                               52    0.000    0.004  coo.py:272(toarray)
numeric.py:141(ones)                                                   ->    4409    0.008    0.008  {numpy.core.multiarray.copyto}
                                                                             4409    0.006    0.006  {numpy.core.multiarray.empty}
internals.py:3437(get_slice)                                           ->     375    0.002    0.009  index.py:1059(__getitem__)
                                                                              375    0.001    0.001  internals.py:177(_slice)
                                                                              375    0.001    0.006  internals.py:3343(__init__)
                                                                              375    0.000    0.000  internals.py:3390(_block)
                                                                              375    0.000    0.000  internals.py:3444(index)
series.py:277(_set_subtyp)                                             ->
{pandas.algos.take_2d_axis0_object_object}                             ->
nanops.py:233(nanany)                                                  ->     362    0.002    0.014  nanops.py:153(_get_values)
                                                                              362    0.000    0.002  {method 'any' of 'numpy.ndarray' objects}
strings.py:768(str_slice)                                              ->      88    0.000    0.016  strings.py:119(_na_map)
strings.py:119(_na_map)                                                ->      88    0.001    0.016  strings.py:124(_map)
strings.py:124(_map)                                                   ->      88    0.000    0.003  common.py:212(isnull)
                                                                               88    0.000    0.000  series.py:308(values)
                                                                              176    0.000    0.000  {isinstance}
                                                                               88    0.000    0.000  {len}
                                                                               88    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
                                                                               88    0.008    0.012  {pandas.lib.map_infer_mask}
internals.py:479(_try_coerce_and_cast_result)                          ->     107    0.000    0.016  internals.py:435(_try_cast_result)
                                                                              107    0.000    0.000  internals.py:475(_try_coerce_result)
internals.py:435(_try_cast_result)                                     ->      56    0.001    0.016  common.py:1285(_possibly_downcast_to_dtype)
                                                                              154    0.000    0.000  internals.py:228(dtype)
                                                                                4    0.000    0.000  internals.py:1451(is_bool)
                                                                              102    0.000    0.000  {isinstance}
                                                                               51    0.000    0.000  {issubclass}
common.py:1285(_possibly_downcast_to_dtype)                            ->      52    0.000    0.002  common.py:368(notnull)
                                                                              104    0.000    0.000  common.py:1293(<lambda>)
                                                                               52    0.000    0.001  fromnumeric.py:2259(prod)
                                                                               56    0.000    0.000  numeric.py:1910(isscalar)
                                                                              104    0.004    0.010  numeric.py:2156(allclose)
                                                                              164    0.000    0.000  {isinstance}
                                                                              156    0.000    0.000  {issubclass}
                                                                               52    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
                                                                              104    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                               52    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                               52    0.000    0.000  {numpy.core.multiarray.array}
{method 'any' of 'numpy.ndarray' objects}                              ->    2163    0.001    0.014  _methods.py:37(_any)
common.py:2569(is_categorical_dtype)                                   ->     414    0.000    0.001  series.py:288(dtype)
                                                                             4117    0.003    0.004  {hasattr}
                                                                             4117    0.001    0.001  {isinstance}
compressed.py:915(tocoo)                                               ->     104    0.000    0.000  base.py:93(get_shape)
                                                                               52    0.001    0.012  coo.py:116(__init__)
                                                                              104    0.000    0.000  csr.py:211(_swap)
                                                                               52    0.000    0.000  {len}
                                                                               52    0.000    0.000  {numpy.core.multiarray.empty}
                                                                               52    0.001    0.001  {scipy.sparse._sparsetools.expandptr}
index.py:1148(take)                                                    ->     215    0.001    0.004  index.py:343(_shallow_copy)
                                                                              215    0.006    0.006  {method 'take' of 'numpy.ndarray' objects}
                                                                              215    0.004    0.004  {numpy.core.multiarray.array}
                                                                              215    0.000    0.000  {pandas.algos.ensure_platform_int}
coo.py:241(_check)                                                     ->     312    0.000    0.000  base.py:93(get_shape)
                                                                              104    0.000    0.000  coo.py:208(getnnz)
                                                                              208    0.000    0.000  numeric.py:394(asarray)
                                                                              104    0.000    0.000  sputils.py:102(to_native)
                                                                              104    0.000    0.001  sputils.py:132(get_index_dtype)
                                                                              104    0.000    0.000  {max}
                                                                              208    0.000    0.004  {method 'max' of 'numpy.ndarray' objects}
                                                                              208    0.000    0.004  {method 'min' of 'numpy.ndarray' objects}
_methods.py:37(_any)                                                   ->    2163    0.012    0.012  {method 'reduce' of 'numpy.ufunc' objects}
index.py:2531(insert)                                                  ->     214    0.003    0.011  index.py:109(__new__)
                                                                               56    0.000    0.000  index.py:258(dtype)
                                                                              107    0.000    0.000  index.py:263(values)
                                                                              107    0.000    0.001  numeric.py:394(asarray)
                                                                              107    0.000    0.000  {numpy.core.multiarray.concatenate}
internals.py:2204(shape)                                               ->    6780    0.002    0.007  internals.py:2206(<genexpr>)
frame.py:4299(_reduce)                                                 ->      54    0.000    0.000  common.py:2585(is_object_dtype)
                                                                               54    0.000    0.008  frame.py:4302(<lambda>)
                                                                               54    0.000    0.000  frame.py:4432(_get_agg_axis)
                                                                               54    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                3    0.000    0.000  generic.py:2225(_is_mixed_type)
                                                                               54    0.000    0.001  generic.py:2309(values)
                                                                               54    0.001    0.003  series.py:119(__init__)
filters.py:180(gaussian_filter1d)                                      ->      51    0.001    0.006  filters.py:110(correlate1d)
                                                                             4080    0.001    0.001  {math.exp}
                                                                              153    0.000    0.000  {range}
indexing.py:1007(_convert_to_indexer)                                  ->      63    0.000    0.001  common.py:2121(is_bool_indexer)
                                                                               59    0.001    0.001  common.py:2347(_asarray_tuplesafe)
                                                                               69    0.000    0.000  generic.py:318(_get_axis)
                                                                               54    0.000    0.001  index.py:740(is_unique)
                                                                               69    0.000    0.001  index.py:752(is_integer)
                                                                               59    0.000    0.000  index.py:914(_convert_list_indexer)
                                                                               69    0.000    0.001  index.py:1553(get_loc)
                                                                               59    0.001    0.005  index.py:1643(get_indexer)
                                                                               69    0.000    0.001  indexing.py:159(_convert_scalar_indexer)
                                                                                1    0.000    0.000  indexing.py:165(_convert_slice_indexer)
                                                                                4    0.000    0.000  indexing.py:1648(check_bool_indexer)
                                                                               63    0.000    0.000  indexing.py:1731(is_nested_tuple)
                                                                               63    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                              182    0.000    0.000  {isinstance}
                                                                               59    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
                                                                                4    0.000    0.000  {method 'nonzero' of 'numpy.ndarray' objects}
                                                                               69    0.000    0.000  {pandas.lib.is_integer}
                                                                               59    0.000    0.000  {pandas.lib.values_from_object}
index.py:2551(drop)                                                    ->      53    0.000    0.001  common.py:2380(_index_labels_to_array)
                                                                               53    0.001    0.004  index.py:1643(get_indexer)
                                                                               52    0.000    0.005  index.py:2521(delete)
                                                                                1    0.000    0.000  numeric.py:1681(array_str)
                                                                               53    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
compressed.py:126(check_format)                                        ->     261    0.000    0.000  base.py:93(get_shape)
                                                                              261    0.001    0.002  compressed.py:1044(prune)
                                                                              522    0.000    0.000  csr.py:211(_swap)
                                                                              522    0.000    0.001  numeric.py:394(asarray)
                                                                              261    0.000    0.001  sputils.py:102(to_native)
                                                                              261    0.001    0.003  sputils.py:132(get_index_dtype)
                                                                             1044    0.000    0.000  {len}
generic.py:2152(__setattr__)                                           ->      56    0.000    0.002  generic.py:412(_set_axis)
{pandas.lib.map_infer_mask}                                            ->   35622    0.004    0.004  strings.py:783(<lambda>)
info.py:303(fix_probs)                                                 ->     255    0.003    0.009  info.py:274(fix_counts)
                                                                              255    0.000    0.002  {method 'sum' of 'numpy.ndarray' objects}
info.py:41(entropy)                                                    ->     153    0.000    0.001  fromnumeric.py:1631(sum)
                                                                              153    0.001    0.007  info.py:303(fix_probs)
{numpy.core.multiarray.concatenate}                                    ->
groupby.py:3251(_wrap_agged_blocks)                                    ->      52    0.000    0.001  frame.py:200(__init__)
                                                                               52    0.000    0.006  generic.py:2430(convert_objects)
                                                                               52    0.000    0.000  groupby.py:3269(_reindex_output)
                                                                               52    0.000    0.004  internals.py:2163(__init__)
internals.py:2616(get_numeric_data)                                    ->      52    0.001    0.011  internals.py:2626(combine)
                                                                               52    0.000    0.000  internals.py:2837(_consolidate_inplace)
frame.py:2315(_sanitize_column)                                        ->       1    0.000    0.000  common.py:1056(_infer_dtype_from_scalar)
                                                                                1    0.000    0.000  common.py:1974(_possibly_cast_to_datetime)
                                                                                2    0.000    0.000  common.py:2049(_possibly_infer_to_datetimelike)
                                                                              156    0.000    0.001  common.py:2585(is_object_dtype)
                                                                              157    0.000    0.001  common.py:2644(is_sequence)
                                                                               11    0.000    0.000  frame.py:2319(reindexer)
                                                                                1    0.000    0.000  fromnumeric.py:350(repeat)
                                                                              168    0.000    0.000  index.py:1045(__contains__)
                                                                              168    0.000    0.000  numeric.py:394(asarray)
                                                                              156    0.000    0.001  series.py:2575(_sanitize_index)
                                                                              168    0.001    0.001  shape_base.py:60(atleast_2d)
                                                                             1024    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                              156    0.003    0.003  {method 'copy' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
index.py:343(_shallow_copy)                                            ->     865    0.002    0.005  index.py:204(_simple_new)
                                                                              268    0.000    0.000  index.py:263(values)
                                                                              865    0.003    0.003  index.py:327(_get_attributes_dict)
                                                                              865    0.000    0.000  {method 'update' of 'dict' objects}
qc.py:162(_validate_cols)                                              ->       5    0.000    0.002  qc.py:183(_validate_seqs_cols)
                                                                                5    0.000    0.000  qc.py:220(_validate_lr_cols)
                                                                                5    0.000    0.000  qc.py:258(_validate_ori_cols)
                                                                                5    0.000    0.000  qc.py:274(_validate_contig_cols)
                                                                                5    0.000    0.006  qc.py:290(_validate_cts_cols)
                                                                                5    0.000    0.001  qc.py:329(_validate_pos_cols)
                                                                                5    0.000    0.000  qc.py:363(_validate_bin_cols)
                                                                                5    0.000    0.001  qc.py:396(_validate_mut_cols)
                                                                                5    0.000    0.000  qc.py:427(_validate_err_cols)
                                                                                5    0.000    0.000  qc.py:461(_validate_std_cols)
                                                                                5    0.000    0.001  qc.py:495(_validate_val_cols)
                                                                                5    0.000    0.000  qc.py:525(_validate_mean_cols)
                                                                                5    0.000    0.000  qc.py:556(_validate_freq_cols)
                                                                                5    0.000    0.000  qc.py:592(_validate_info_cols)
internals.py:2626(combine)                                             ->     103    0.001    0.001  common.py:756(take_nd)
                                                                               52    0.000    0.001  fromnumeric.py:694(sort)
                                                                               52    0.000    0.001  index.py:1148(take)
                                                                              206    0.000    0.000  internals.py:119(mgr_locs)
                                                                              103    0.000    0.001  internals.py:141(mgr_locs)
                                                                              103    0.000    0.001  internals.py:504(copy)
                                                                               52    0.000    0.003  internals.py:2163(__init__)
                                                                               52    0.000    0.000  internals.py:2204(shape)
                                                                               52    0.000    0.000  internals.py:2279(_get_items)
                                                                               52    0.000    0.000  {len}
                                                                              103    0.000    0.000  {method 'append' of 'list' objects}
                                                                               52    0.000    0.000  {numpy.core.multiarray.concatenate}
                                                                               52    0.000    0.000  {pandas.lib.get_reverse_indexer}
lil.py:88(__init__)                                                    ->       1    0.000    0.000  base.py:63(__init__)
                                                                                1    0.000    0.000  base.py:865(isspmatrix)
                                                                                1    0.000    0.000  lil.py:134(set_shape)
                                                                                1    0.000    0.000  sputils.py:106(getdtype)
                                                                                1    0.000    0.000  sputils.py:205(isshape)
                                                                                1    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {numpy.core.multiarray.empty}
                                                                                1    0.000    0.000  {range}
index.py:1059(__getitem__)                                             ->     353    0.000    0.001  common.py:2121(is_bool_indexer)
                                                                              382    0.001    0.004  index.py:343(_shallow_copy)
                                                                              348    0.000    0.001  numeric.py:394(asarray)
                                                                              986    0.001    0.002  numeric.py:1910(isscalar)
                                                                              382    0.000    0.000  {isinstance}
                                                                              353    0.000    0.000  {pandas.lib.values_from_object}
{open}                                                                 ->
index.py:1643(get_indexer)                                             ->     164    0.000    0.000  common.py:2477(is_dtype_equal)
                                                                              164    0.000    0.000  common.py:2759(_clean_reindex_fill_method)
                                                                              164    0.000    0.000  index.py:258(dtype)
                                                                              164    0.000    0.000  index.py:263(values)
                                                                              164    0.001    0.001  index.py:1783(_possibly_promote)
                                                                              164    0.000    0.005  index.py:5677(_ensure_index)
                                                                              164    0.001    0.001  {method 'get_indexer' of 'pandas.index.IndexEngine' objects}
                                                                              164    0.000    0.000  {pandas.algos.ensure_platform_int}
internals.py:3866(_vstack)                                             ->     104    0.000    0.010  shape_base.py:179(vstack)
numeric.py:2156(allclose)                                              ->     208    0.000    0.002  fromnumeric.py:1772(any)
                                                                              104    0.000    0.001  fromnumeric.py:1852(all)
                                                                              104    0.000    0.000  numeric.py:2809(__init__)
                                                                              104    0.000    0.001  numeric.py:2813(__enter__)
                                                                              104    0.000    0.001  numeric.py:2818(__exit__)
                                                                              208    0.001    0.001  {abs}
                                                                              312    0.000    0.000  {numpy.core.multiarray.array}
                                                                              104    0.000    0.000  {numpy.core.multiarray.result_type}
numeric.py:1681(array_str)                                             ->       2    0.000    0.010  arrayprint.py:343(array2string)
arrayprint.py:343(array2string)                                        ->       2    0.000    0.010  arrayprint.py:233(_array2string)
                                                                                2    0.000    0.000  {_functools.reduce}
arrayprint.py:233(_array2string)                                       ->       2    0.000    0.008  arrayprint.py:465(_formatArray)
                                                                                2    0.000    0.001  arrayprint.py:533(__init__)
                                                                                2    0.000    0.000  arrayprint.py:639(__init__)
                                                                                2    0.000    0.000  arrayprint.py:661(__init__)
                                                                                2    0.000    0.000  arrayprint.py:689(__init__)
                                                                                2    0.000    0.001  arrayprint.py:700(__init__)
                                                                                2    0.000    0.000  arrayprint.py:716(__init__)
                                                                                2    0.000    0.000  arrayprint.py:744(__init__)
                                                                                2    0.000    0.000  fromnumeric.py:1291(ravel)
                                                                               10    0.000    0.000  {issubclass}
                                                                                4    0.000    0.000  {len}
shape_base.py:179(vstack)                                              ->     211    0.001    0.001  shape_base.py:60(atleast_2d)
                                                                              104    0.009    0.009  {numpy.core.multiarray.concatenate}
internals.py:119(mgr_locs)                                             ->
series.py:2020(apply)                                                  ->       2    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                2    0.000    0.000  generic.py:2118(__finalize__)
                                                                                2    0.000    0.000  series.py:119(__init__)
                                                                                2    0.000    0.000  series.py:237(_constructor)
                                                                                4    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
                                                                                2    0.009    0.009  {pandas.lib.map_infer}
                                                                                2    0.000    0.000  {pandas.lib.values_from_object}
groupby.py:2043(_get_grouper)                                          ->      52    0.000    0.001  common.py:2569(is_categorical_dtype)
                                                                               52    0.000    0.004  frame.py:1774(__getitem__)
                                                                               52    0.000    0.000  generic.py:318(_get_axis)
                                                                               52    0.000    0.000  groupby.py:1225(__init__)
                                                                               52    0.001    0.002  groupby.py:1874(__init__)
                                                                               52    0.000    0.000  groupby.py:2125(is_in_axis)
                                                                               52    0.000    0.000  groupby.py:2135(is_in_obj)
                                                                               52    0.000    0.001  {all}
                                                                              104    0.000    0.000  {any}
                                                                              260    0.000    0.000  {isinstance}
                                                                              208    0.000    0.000  {len}
                                                                              104    0.000    0.000  {method 'append' of 'list' objects}
{pandas.lib.map_infer}                                                 ->
sputils.py:132(get_index_dtype)                                        ->     679    0.003    0.003  getlimits.py:244(__init__)
                                                                              679    0.000    0.000  getlimits.py:269(max)
                                                                             1252    0.001    0.002  numeric.py:394(asarray)
                                                                              679    0.000    0.000  {isinstance}
{numpy.core.multiarray.arange}                                         ->
{method 'take' of 'numpy.ndarray' objects}                             ->
index.py:1582(get_value)                                               ->       4    0.000    0.000  index.py:958(_engine)
                                                                              375    0.001    0.001  numeric.py:1910(isscalar)
                                                                              381    0.002    0.002  {method 'get_value' of 'pandas.index.IndexEngine' objects}
                                                                              381    0.000    0.000  {pandas.lib.is_float}
                                                                              762    0.001    0.004  {pandas.lib.values_from_object}
base.py:195(asformat)                                                  ->      52    0.001    0.009  coo.py:325(tocsr)
                                                                               52    0.000    0.000  {getattr}
{all}                                                                  ->     104    0.000    0.001  groupby.py:2103(<genexpr>)
                                                                                6    0.000    0.000  indexing.py:405(<genexpr>)
                                                                               24    0.000    0.001  series.py:1003(__iter__)
info.py:274(fix_counts)                                                ->     765    0.005    0.005  {all}
                                                                              255    0.000    0.000  {len}
                                                                              255    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                              255    0.000    0.000  {method 'flatten' of 'numpy.ndarray' objects}
                                                                              255    0.000    0.000  {numpy.core.multiarray.array}
internals.py:2844(get)                                                 ->     242    0.000    0.001  common.py:212(isnull)
                                                                              242    0.000    0.001  index.py:1553(get_loc)
                                                                              484    0.000    0.000  internals.py:2279(_get_items)
                                                                              242    0.002    0.006  internals.py:2872(iget)
coo.py:325(tocsr)                                                      ->     104    0.000    0.000  base.py:93(get_shape)
                                                                               52    0.001    0.004  compressed.py:24(__init__)
                                                                               52    0.000    0.001  compressed.py:987(sum_duplicates)
                                                                              260    0.000    0.000  coo.py:208(getnnz)
                                                                               52    0.000    0.000  data.py:28(_get_dtype)
                                                                               52    0.000    0.000  sputils.py:26(upcast)
                                                                               52    0.000    0.001  sputils.py:132(get_index_dtype)
                                                                               52    0.000    0.000  {max}
                                                                              104    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                              156    0.000    0.000  {numpy.core.multiarray.empty}
                                                                               52    0.000    0.000  {scipy.sparse._sparsetools.coo_tocsr}
generic.py:1625(_update_inplace)                                       ->      51    0.000    0.000  base.py:103(_reset_cache)
                                                                               51    0.000    0.000  generic.py:1137(_maybe_update_cacher)
                                                                               51    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                               51    0.007    0.007  generic.py:2152(__setattr__)
                                                                               51    0.000    0.000  {getattr}
{numpy.core.multiarray.copyto}                                         ->
common.py:1105(_maybe_promote)                                         ->     532    0.002    0.003  common.py:2569(is_categorical_dtype)
                                                                              222    0.000    0.001  numeric.py:394(asarray)
                                                                              532    0.000    0.000  {isinstance}
                                                                             2128    0.001    0.001  {issubclass}
                                                                              222    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                              222    0.000    0.000  {pandas.lib.is_bool}
                                                                              532    0.000    0.000  {pandas.lib.is_float}
                                                                              222    0.000    0.000  {pandas.lib.is_integer}
arrayprint.py:465(_formatArray)                                        ->       1    0.000    0.000  arrayprint.py:230(repr_format)
                                                                              349    0.000    0.001  arrayprint.py:457(_extendLine)
                                                                                4    0.001    0.008  arrayprint.py:465(_formatArray)
                                                                              348    0.004    0.007  arrayprint.py:598(__call__)
                                                                               11    0.000    0.000  {len}
                                                                                3    0.000    0.000  {max}
                                                                                8    0.000    0.000  {method 'rstrip' of 'str' objects}
                                                                               12    0.000    0.000  {range}
common.py:2347(_asarray_tuplesafe)                                     ->       2    0.000    0.000  index.py:263(values)
                                                                              500    0.000    0.002  numeric.py:394(asarray)
                                                                              278    0.000    0.000  {hasattr}
                                                                             1807    0.000    0.000  {isinstance}
                                                                              388    0.000    0.000  {issubclass}
                                                                              213    0.002    0.002  {pandas.lib.list_to_object_array}
ops.py:543(na_op)                                                      ->     740    0.001    0.002  common.py:2569(is_categorical_dtype)
                                                                               22    0.000    0.000  {getattr}
                                                                              696    0.000    0.000  {isinstance}
                                                                              348    0.005    0.005  {pandas.lib.scalar_compare}
groupby.py:480(_set_selection_from_grouper)                            ->      52    0.000    0.000  generic.py:366(_info_axis)
                                                                               52    0.000    0.000  generic.py:386(ndim)
                                                                               52    0.001    0.002  index.py:109(__new__)
                                                                               52    0.000    0.000  index.py:273(tolist)
                                                                               52    0.001    0.004  index.py:1481(difference)
                                                                               52    0.000    0.000  {getattr}
                                                                               52    0.000    0.000  {len}
frame.py:4302(<lambda>)                                                ->      53    0.000    0.008  nanops.py:38(_f)
                                                                                1    0.000    0.000  nanops.py:63(f)
index.py:204(_simple_new)                                              ->    1468    0.001    0.002  __init__.py:124(iteritems)
                                                                             1468    0.001    0.001  index.py:237(_reset_identity)
                                                                             1468    0.001    0.001  {built-in method __new__ of type object at 0x7fd63df25bc0}
                                                                              215    0.000    0.000  {setattr}
generic.py:2394(astype)                                                ->      52    0.000    0.000  frame.py:189(_constructor)
                                                                               52    0.000    0.000  frame.py:200(__init__)
                                                                               60    0.000    0.000  generic.py:2118(__finalize__)
                                                                               60    0.000    0.007  internals.py:2503(astype)
                                                                                8    0.000    0.000  series.py:119(__init__)
                                                                                8    0.000    0.000  series.py:237(_constructor)
frame.py:2102(_box_item_values)                                        ->     242    0.001    0.005  frame.py:2109(_box_col_values)
                                                                              242    0.001    0.001  index.py:1059(__getitem__)
                                                                              242    0.000    0.001  index.py:1553(get_loc)
strings.py:1077(_wrap_result)                                          ->      88    0.001    0.006  series.py:119(__init__)
                                                                               88    0.000    0.000  {getattr}
                                                                               88    0.000    0.000  {hasattr}
                                                                               88    0.000    0.000  {isinstance}
                                                                               88    0.000    0.000  {method 'get' of 'dict' objects}
nanops.py:130(_get_fill_value)                                         ->       1    0.000    0.000  nanops.py:206(_na_ok_dtype)
generic.py:2268(as_matrix)                                             ->     156    0.000    0.002  generic.py:2197(_consolidate_inplace)
                                                                              156    0.000    0.005  internals.py:2701(as_matrix)
internals.py:128(make_block_same_class)                                ->     770    0.001    0.006  internals.py:2073(make_block)
arrayprint.py:598(__call__)                                            ->     348    0.000    0.000  numeric.py:2809(__init__)
                                                                              348    0.000    0.002  numeric.py:2813(__enter__)
                                                                              348    0.000    0.001  numeric.py:2818(__exit__)
                                                                              696    0.000    0.000  {len}
                                                                              348    0.000    0.000  {method 'rstrip' of 'str' objects}
{method 'itervalues' of 'dict' objects}                                ->
fromnumeric.py:2737(std)                                               ->      51    0.000    0.007  _methods.py:123(_std)
{method 'get' of 'dict' objects}                                       ->
qc.py:952(validate_profile_ct)                                         ->       1    0.000    0.000  frame.py:418(shape)
                                                                                2    0.000    0.002  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  frame.py:2114(__setitem__)
                                                                                1    0.000    0.000  generic.py:4243(stat_func)
                                                                                1    0.000    0.000  index.py:1001(__iter__)
                                                                                1    0.000    0.000  index.py:1045(__contains__)
                                                                                1    0.000    0.000  index.py:2596(_evaluate_compare)
                                                                                5    0.000    0.000  qc.py:128(is_col_type)
                                                                                3    0.000    0.000  qc.py:155(get_cols_from_df)
                                                                                1    0.000    0.004  qc.py:162(_validate_cols)
                                                                                1    0.000    0.000  series.py:308(values)
                                                                                1    0.000    0.000  {all}
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'join' of 'str' objects}
                                                                                4    0.000    0.000  {method 'split' of 'str' objects}
                                                                                1    0.000    0.000  {sorted}
{pandas.algos.ensure_float64}                                          ->
common.py:2416(is_iterator)                                            ->     750    0.001    0.006  {hasattr}
_methods.py:123(_std)                                                  ->      51    0.003    0.006  _methods.py:77(_var)
                                                                               51    0.000    0.000  {hasattr}
                                                                               51    0.000    0.000  {isinstance}
{method 'extend' of 'list' objects}                                    ->
internals.py:2206(<genexpr>)                                           ->    4520    0.003    0.005  {len}
internals.py:2503(astype)                                              ->      60    0.001    0.006  internals.py:2396(apply)
filters.py:110(correlate1d)                                            ->      51    0.000    0.000  _ni_support.py:38(_extend_mode_to_code)
                                                                               51    0.000    0.000  _ni_support.py:70(_get_output)
                                                                               51    0.000    0.000  _ni_support.py:90(_check_axis)
                                                                              102    0.000    0.001  numeric.py:394(asarray)
                                                                               51    0.000    0.000  type_check.py:237(iscomplexobj)
                                                                              153    0.000    0.000  {len}
                                                                               51    0.005    0.005  {scipy.ndimage._nd_image.correlate1d}
{pandas.algos.take_2d_axis0_int64_int64}                               ->
series.py:319(get_values)                                              ->    1451    0.002    0.006  internals.py:3481(get_values)
indexing.py:1648(check_bool_indexer)                                   ->     350    0.000    0.001  index.py:3434(equals)
                                                                              354    0.000    0.005  numeric.py:394(asarray)
                                                                              354    0.000    0.000  {isinstance}
generic.py:2135(__getattr__)                                           ->     696    0.000    0.001  generic.py:366(_info_axis)
                                                                              696    0.002    0.002  index.py:1045(__contains__)
{pandas.algos.take_2d_axis1_float64_float64}                           ->
{pandas.lib.is_integer}                                                ->
_methods.py:77(_var)                                                   ->      52    0.000    0.000  _methods.py:43(_count_reduce_items)
                                                                              104    0.000    0.000  numeric.py:464(asanyarray)
                                                                               51    0.000    0.000  {hasattr}
                                                                              104    0.000    0.000  {isinstance}
                                                                              104    0.000    0.000  {issubclass}
                                                                               52    0.000    0.000  {max}
                                                                              104    0.002    0.002  {method 'reduce' of 'numpy.ufunc' objects}
internals.py:2384(_verify_integrity)                                   ->     848    0.000    0.000  internals.py:220(shape)
                                                                              326    0.001    0.002  internals.py:2204(shape)
                                                                              326    0.000    0.000  internals.py:2279(_get_items)
                                                                              326    0.000    0.000  {len}
                                                                              326    0.000    0.001  {sum}
generic.py:2430(convert_objects)                                       ->      52    0.000    0.000  frame.py:189(_constructor)
                                                                               52    0.000    0.000  frame.py:200(__init__)
                                                                               52    0.000    0.000  generic.py:2118(__finalize__)
                                                                               52    0.000    0.005  internals.py:2506(convert)
common.py:1974(_possibly_cast_to_datetime)                             ->      95    0.000    0.001  common.py:2049(_possibly_infer_to_datetimelike)
                                                                              363    0.000    0.001  common.py:2507(is_datetime64_dtype)
                                                                              363    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                              458    0.000    0.000  {isinstance}
                                                                               95    0.000    0.000  {issubclass}
{pandas.lib.infer_dtype}                                               ->     109    0.000    0.000  index.py:258(dtype)
                                                                              109    0.000    0.000  index.py:263(values)
index.py:1045(__contains__)                                            ->     113    0.000    0.000  index.py:958(_engine)
                                                                              113    0.000    0.000  index.py:961(<lambda>)
                                                                             1707    0.000    0.000  {hash}
qc.py:290(_validate_cts_cols)                                          ->      32    0.000    0.001  frame.py:1774(__getitem__)
                                                                                4    0.000    0.001  frame.py:2114(__setitem__)
                                                                                8    0.000    0.000  generic.py:2135(__getattr__)
                                                                                8    0.000    0.001  generic.py:2394(astype)
                                                                               14    0.000    0.003  ops.py:574(wrapper)
                                                                                5    0.000    0.000  qc.py:155(get_cols_from_df)
                                                                               10    0.000    0.000  series.py:308(values)
                                                                                4    0.000    0.000  series.py:391(__array__)
                                                                                4    0.000    0.000  series.py:397(__array_wrap__)
                                                                                4    0.000    0.000  series.py:404(__array_prepare__)
                                                                               18    0.000    0.000  {all}
frame.py:200(__init__)                                                 ->       2    0.000    0.001  frame.py:295(_init_dict)
                                                                                2    0.000    0.001  frame.py:343(_init_ndarray)
                                                                              433    0.001    0.001  generic.py:90(__init__)
                                                                              429    0.001    0.001  generic.py:120(_init_mgr)
                                                                                2    0.000    0.000  {getattr}
                                                                              874    0.000    0.000  {isinstance}
internals.py:2872(iget)                                                ->     242    0.000    0.002  internals.py:128(make_block_same_class)
                                                                              242    0.000    0.000  internals.py:259(iget)
                                                                              242    0.001    0.001  internals.py:3343(__init__)
                                                                              242    0.000    0.000  {len}
common.py:2121(is_bool_indexer)                                        ->     124    0.000    0.001  numeric.py:394(asarray)
                                                                              700    0.000    0.001  series.py:288(dtype)
                                                                             1028    0.001    0.002  {isinstance}
internals.py:3481(get_values)                                          ->    1451    0.001    0.002  internals.py:112(to_dense)
                                                                             1451    0.000    0.000  internals.py:3390(_block)
                                                                             1451    0.001    0.001  {numpy.core.multiarray.array}
generic.py:739(__array__)                                              ->      51    0.000    0.005  {pandas.lib.values_from_object}
internals.py:2506(convert)                                             ->      52    0.001    0.005  internals.py:2396(apply)
internals.py:2568(_consolidate_check)                                  ->    1690    0.002    0.003  internals.py:232(ftype)
                                                                             1290    0.000    0.000  {len}
generic.py:2331(get_values)                                            ->      51    0.000    0.005  generic.py:2268(as_matrix)
index.py:2521(delete)                                                  ->      52    0.001    0.003  function_base.py:3427(delete)
                                                                               52    0.001    0.002  index.py:109(__new__)
internals.py:2701(as_matrix)                                           ->     105    0.000    0.000  internals.py:874(get_values)
                                                                              156    0.000    0.001  internals.py:2246(_is_single_block)
                                                                               51    0.000    0.000  internals.py:2573(is_mixed_type)
                                                                               51    0.001    0.004  internals.py:2715(_interleave)
                                                                              156    0.000    0.000  {len}
info.py:295(fix_probs_2d)                                              ->      51    0.001    0.004  info.py:252(fix_counts_2d)
                                                                               51    0.000    0.000  {method 'flatten' of 'numpy.ndarray' objects}
                                                                               51    0.000    0.000  {method 'sum' of 'numpy.ndarray' objects}
{method 'get_labels' of 'pandas.hashtable.PyObjectHashTable' objects}  ->
{scipy.ndimage._nd_image.correlate1d}                                  ->
frame.py:2109(_box_col_values)                                         ->     242    0.001    0.004  series.py:227(from_array)
{pandas.lib.scalar_compare}                                            ->
{method 'max' of 'numpy.ndarray' objects}                              ->     209    0.000    0.004  _methods.py:25(_amax)
index.py:1481(difference)                                              ->      52    0.001    0.002  index.py:109(__new__)
                                                                               52    0.000    0.000  index.py:582(_assert_can_do_setop)
                                                                               52    0.000    0.000  index.py:587(_convert_can_do_setop)
                                                                              104    0.000    0.000  index.py:1001(__iter__)
                                                                               52    0.000    0.001  index.py:1233(equals)
                                                                               52    0.000    0.000  {sorted}
_methods.py:25(_amax)                                                  ->     209    0.004    0.004  {method 'reduce' of 'numpy.ufunc' objects}
numeric.py:1910(isscalar)                                              ->    2106    0.001    0.001  {isinstance}
series.py:227(from_array)                                              ->     242    0.001    0.003  series.py:119(__init__)
                                                                              242    0.000    0.001  {isinstance}
{pandas.lib.isnullobj}                                                 ->
info.py:252(fix_counts_2d)                                             ->     153    0.002    0.002  {all}
                                                                               51    0.000    0.000  {len}
                                                                               51    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                              153    0.000    0.000  {method 'flatten' of 'numpy.ndarray' objects}
                                                                               51    0.000    0.000  {numpy.core.multiarray.array}
internals.py:4450(_fast_count_smallints)                               ->      52    0.001    0.003  index_tricks.py:251(__getitem__)
                                                                              107    0.000    0.000  {len}
                                                                               52    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                               52    0.000    0.000  {method 'nonzero' of 'numpy.ndarray' objects}
                                                                               55    0.000    0.000  {numpy.core.multiarray.empty}
                                                                               52    0.000    0.000  {numpy.lib._compiled_base.bincount}
numeric.py:2428(seterr)                                                ->     916    0.001    0.001  numeric.py:2524(geterr)
                                                                              916    0.000    0.000  {numpy.core.umath.geterrobj}
                                                                              916    0.001    0.001  {numpy.core.umath.seterrobj}
{method 'min' of 'numpy.ndarray' objects}                              ->     208    0.000    0.004  _methods.py:28(_amin)
internals.py:2715(_interleave)                                         ->     102    0.000    0.000  internals.py:119(mgr_locs)
                                                                              102    0.000    0.000  internals.py:874(get_values)
                                                                              102    0.000    0.001  internals.py:2204(shape)
                                                                               51    0.001    0.001  internals.py:3748(_interleaved_dtype)
                                                                               51    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
                                                                               51    0.000    0.000  {numpy.core.multiarray.empty}
                                                                               51    0.000    0.000  {numpy.core.multiarray.zeros}
coo.py:272(toarray)                                                    ->      52    0.000    0.000  base.py:93(get_shape)
                                                                               52    0.000    0.001  base.py:782(_process_toarray_args)
                                                                               52    0.000    0.000  coo.py:208(getnnz)
                                                                               52    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                               52    0.002    0.002  {scipy.sparse._sparsetools.coo_todense}
InstantiationDecorators.py:46(_extract)                                ->       2    0.000    0.000  InstantiationDecorators.py:32(disable_special_methods)
                                                                                2    0.000    0.000  InstantiationDecorators.py:36(enable_special_methods)
                                                                                2    0.000    0.000  InstantiationDecorators.py:40(check_special_methods)
                                                                                2    0.000    0.000  inspect.py:804(getargspec)
                                                                                1    0.000    0.000  learn_model.py:84(pymcdf)
                                                                                1    0.000    0.004  learn_model.py:87(emat)
                                                                                6    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'pop' of 'dict' objects}
                                                                                2    0.000    0.000  {method 'update' of 'dict' objects}
                                                                                2    0.000    0.000  {sys.settrace}
                                                                                2    0.000    0.000  {zip}
strings.py:783(<lambda>)                                               ->
numeric.py:464(asanyarray)                                             ->    1787    0.002    0.002  {numpy.core.multiarray.array}
qc.py:618(validate_dataset)                                            ->       2    0.000    0.000  frame.py:418(shape)
                                                                                2    0.000    0.000  index.py:1001(__iter__)
                                                                                2    0.000    0.000  index.py:2596(_evaluate_compare)
                                                                                8    0.000    0.000  qc.py:128(is_col_type)
                                                                                8    0.000    0.000  qc.py:155(get_cols_from_df)
                                                                                2    0.000    0.003  qc.py:162(_validate_cols)
                                                                                2    0.000    0.000  {all}
_methods.py:28(_amin)                                                  ->     208    0.003    0.003  {method 'reduce' of 'numpy.ufunc' objects}
internals.py:1442(__init__)                                            ->     399    0.001    0.002  internals.py:64(__init__)
                                                                              399    0.000    0.000  {issubclass}
series.py:288(dtype)                                                   ->    1832    0.001    0.002  internals.py:3453(dtype)
index.py:1553(get_loc)                                                 ->      57    0.000    0.000  index.py:958(_engine)
                                                                              669    0.001    0.001  {method 'get_loc' of 'pandas.index.IndexEngine' objects}
                                                                              669    0.001    0.001  {pandas.lib.values_from_object}
fromnumeric.py:1772(any)                                               ->     367    0.000    0.001  numeric.py:464(asanyarray)
                                                                              367    0.000    0.002  {method 'any' of 'numpy.ndarray' objects}
internals.py:2694(<lambda>)                                            ->     216    0.000    0.003  index.py:331(view)
getlimits.py:244(__init__)                                             ->
{method 'astype' of 'numpy.ndarray' objects}                           ->
index.py:331(view)                                                     ->     216    0.001    0.003  index.py:343(_shallow_copy)
                                                                              216    0.000    0.000  {isinstance}
sputils.py:330(_index_to_arrays)                                       ->      54    0.000    0.000  base.py:93(get_shape)
                                                                               54    0.000    0.000  sputils.py:238(_slicetoarange)
                                                                               27    0.000    0.000  sputils.py:311(_check_boolean)
                                                                               27    0.001    0.002  stride_tricks.py:37(broadcast_arrays)
                                                                               54    0.000    0.000  {isinstance}
index_tricks.py:251(__getitem__)                                       ->      52    0.000    0.000  index_tricks.py:231(_retval)
                                                                               52    0.000    0.001  numerictypes.py:970(find_common_type)
                                                                              416    0.000    0.000  {isinstance}
                                                                               52    0.000    0.000  {len}
                                                                              208    0.000    0.000  {method 'append' of 'list' objects}
                                                                              104    0.000    0.000  {method 'transpose' of 'numpy.ndarray' objects}
                                                                              208    0.000    0.000  {numpy.core.multiarray.array}
                                                                               52    0.000    0.000  {numpy.core.multiarray.concatenate}
                                                                              156    0.000    0.000  {range}
function_base.py:3427(delete)                                          ->      58    0.000    0.000  numeric.py:141(ones)
                                                                              116    0.000    0.000  numeric.py:394(asarray)
                                                                              116    0.000    0.000  {isinstance}
                                                                              116    0.000    0.001  {method 'all' of 'numpy.ndarray' objects}
                                                                               58    0.000    0.000  {numpy.core.multiarray.can_cast}
index.py:327(_get_attributes_dict)                                     ->     865    0.000    0.000  {getattr}
common.py:2443(_coerce_to_dtype)                                       ->     724    0.001    0.002  common.py:2569(is_categorical_dtype)
internals.py:371(astype)                                               ->      60    0.001    0.003  internals.py:375(_astype)
index.py:1233(equals)                                                  ->     217    0.000    0.001  common.py:407(array_equivalent)
                                                                              217    0.000    0.000  index.py:218(is_)
                                                                              217    0.000    0.000  {isinstance}
                                                                              434    0.000    0.001  {pandas.lib.values_from_object}
scimath.py:176(sqrt)                                                   ->     102    0.001    0.003  scimath.py:97(_fix_real_lt_zero)
internals.py:375(_astype)                                              ->      55    0.000    0.001  common.py:2683(_astype_nansafe)
                                                                               60    0.000    0.000  internals.py:97(is_categorical_astype)
                                                                               55    0.000    0.000  internals.py:119(mgr_locs)
                                                                              110    0.000    0.000  internals.py:220(shape)
                                                                               60    0.000    0.000  internals.py:228(dtype)
                                                                                5    0.000    0.000  internals.py:504(copy)
                                                                               55    0.000    0.000  internals.py:2073(make_block)
                                                                               55    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                               55    0.000    0.000  {method 'reshape' of 'numpy.ndarray' objects}
shape_base.py:60(atleast_2d)                                           ->     431    0.000    0.001  numeric.py:464(asanyarray)
                                                                             1293    0.000    0.000  {len}
                                                                              431    0.000    0.000  {method 'append' of 'list' objects}
internals.py:232(ftype)                                                ->    1690    0.000    0.000  internals.py:228(dtype)
scimath.py:97(_fix_real_lt_zero)                                       ->     102    0.000    0.001  fromnumeric.py:1772(any)
                                                                              102    0.000    0.000  numeric.py:394(asarray)
                                                                              102    0.001    0.001  type_check.py:207(isreal)
{numpy.core._dotblas.dot}                                              ->       2    0.000    0.000  defmatrix.py:290(__array_finalize__)
numeric.py:2813(__enter__)                                             ->     458    0.001    0.002  numeric.py:2428(seterr)
{numpy.core.multiarray.zeros}                                          ->
compressed.py:1044(prune)                                              ->     261    0.000    0.000  base.py:93(get_shape)
                                                                             1044    0.001    0.001  compressed.py:90(getnnz)
                                                                              261    0.000    0.000  csr.py:211(_swap)
                                                                              783    0.000    0.000  {len}
function_base.py:3625(insert)                                          ->     104    0.000    0.000  numeric.py:394(asarray)
                                                                              104    0.000    0.000  numeric.py:1347(rollaxis)
                                                                              104    0.000    0.000  {isinstance}
                                                                              104    0.000    0.000  {method 'item' of 'numpy.ndarray' objects}
                                                                              208    0.000    0.000  {numpy.core.multiarray.array}
                                                                              104    0.000    0.000  {numpy.core.multiarray.empty}
common.py:1169(_maybe_upcast_putmask)                                  ->     338    0.000    0.002  {method 'any' of 'numpy.ndarray' objects}
internals.py:3935(_get_blkno_placements)                               ->     172    0.000    0.000  {pandas.algos.ensure_int64}
                                                                              172    0.001    0.001  {pandas.lib.get_blkno_indexers}
index.py:263(values)                                                   ->    1711    0.001    0.001  {method 'view' of 'numpy.ndarray' objects}
numeric.py:81(zeros_like)                                              ->     256    0.001    0.001  {numpy.core.multiarray.copyto}
                                                                              256    0.000    0.000  {numpy.core.multiarray.empty_like}
                                                                              256    0.000    0.000  {numpy.core.multiarray.zeros}
qc.py:1095(validate_profile_mut)                                       ->       1    0.000    0.000  frame.py:418(shape)
                                                                                1    0.000    0.001  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  index.py:1001(__iter__)
                                                                                2    0.000    0.000  index.py:1045(__contains__)
                                                                                1    0.000    0.000  index.py:2596(_evaluate_compare)
                                                                                3    0.000    0.000  qc.py:128(is_col_type)
                                                                                2    0.000    0.000  qc.py:155(get_cols_from_df)
                                                                                1    0.000    0.001  qc.py:162(_validate_cols)
                                                                                1    0.000    0.000  {all}
                                                                                1    0.000    0.000  {len}
{method 'all' of 'numpy.ndarray' objects}                              ->     337    0.000    0.002  _methods.py:40(_all)
internals.py:3453(dtype)                                               ->    1832    0.001    0.001  internals.py:3394(_values)
merge.py:700(concat)                                                   ->       2    0.000    0.001  merge.py:763(__init__)
                                                                                2    0.000    0.001  merge.py:888(get_result)
stride_tricks.py:37(broadcast_arrays)                                  ->     108    0.000    0.000  numeric.py:394(asarray)
                                                                               54    0.001    0.001  stride_tricks.py:23(as_strided)
                                                                              297    0.000    0.000  {len}
                                                                               27    0.000    0.000  {max}
                                                                               54    0.000    0.000  {method 'append' of 'list' objects}
                                                                               54    0.000    0.000  {method 'pop' of 'set' objects}
                                                                               54    0.000    0.000  {method 'remove' of 'set' objects}
                                                                              108    0.000    0.000  {range}
                                                                               27    0.000    0.000  {zip}
index.py:1862(reindex)                                                 ->      52    0.000    0.001  index.py:1233(equals)
                                                                               52    0.000    0.001  index.py:1643(get_indexer)
                                                                               52    0.000    0.000  index.py:5677(_ensure_index)
                                                                               52    0.000    0.000  index.py:5843(_ensure_has_len)
                                                                               52    0.000    0.000  {hasattr}
                                                                               52    0.000    0.000  {isinstance}
defmatrix.py:338(__mul__)                                              ->       2    0.000    0.000  defmatrix.py:66(asmatrix)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.002    0.002  {numpy.core._dotblas.dot}
numeric.py:2818(__exit__)                                              ->     458    0.001    0.002  numeric.py:2428(seterr)
{sorted}                                                               ->     415    0.000    0.001  internals.py:3815(<lambda>)
{method 'get_value' of 'pandas.index.IndexEngine' objects}             ->       4    0.000    0.000  index.py:961(<lambda>)
generic.py:2309(values)                                                ->     105    0.000    0.002  generic.py:2268(as_matrix)
generic.py:412(_set_axis)                                              ->      56    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                               56    0.000    0.002  internals.py:2212(set_axis)
qc.py:891(validate_model)                                              ->       1    0.000    0.000  frame.py:418(shape)
                                                                                2    0.000    0.000  index.py:1001(__iter__)
                                                                                1    0.000    0.000  index.py:1045(__contains__)
                                                                               10    0.000    0.000  qc.py:128(is_col_type)
                                                                                1    0.000    0.002  qc.py:162(_validate_cols)
                                                                                2    0.000    0.000  {all}
                                                                               12    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'values' of 'dict' objects}
                                                                                1    0.000    0.000  {sorted}
                                                                                2    0.000    0.000  {zip}
utils.py:471(RandEmat)                                                 ->       1    0.001    0.002  utils.py:449(fix_matrix_gauge)
                                                                                1    0.000    0.000  {method 'randn' of 'mtrand.RandomState' objects}
generic.py:1093(_set_as_cached)                                        ->     242    0.001    0.001  generic.py:2152(__setattr__)
utils.py:449(fix_matrix_gauge)                                         ->       1    0.000    0.000  fromnumeric.py:1631(sum)
                                                                               87    0.000    0.001  fromnumeric.py:2651(mean)
                                                                                1    0.000    0.000  fromnumeric.py:2838(var)
                                                                                2    0.000    0.000  scimath.py:176(sqrt)
                                                                                1    0.000    0.000  {range}
__init__.py:124(iteritems)                                             ->    1468    0.000    0.000  {getattr}
                                                                             1468    0.000    0.000  {method 'iteritems' of 'dict' objects}
_methods.py:40(_all)                                                   ->     337    0.002    0.002  {method 'reduce' of 'numpy.ufunc' objects}
common.py:724(_get_take_nd_function)                                   ->     852    0.001    0.001  {method 'get' of 'dict' objects}
{pandas.algos.take_2d_axis0_float64_float64}                           ->
indexing.py:1612(convert_to_index_sliceable)                           ->     116    0.000    0.000  index.py:1045(__contains__)
                                                                               55    0.000    0.000  index.py:3427(is_all_dates)
                                                                              116    0.000    0.000  internals.py:2279(_get_items)
                                                                              356    0.000    0.000  {isinstance}
internals.py:262(set)                                                  ->
internals.py:2212(set_axis)                                            ->      56    0.000    0.002  index.py:5677(_ensure_index)
                                                                              112    0.000    0.000  {len}
generic.py:318(_get_axis)                                              ->     559    0.001    0.001  generic.py:305(_get_axis_name)
                                                                              559    0.000    0.000  {getattr}
{scipy.sparse._sparsetools.coo_todense}                                ->
common.py:368(notnull)                                                 ->      52    0.000    0.001  common.py:212(isnull)
                                                                               52    0.000    0.000  numeric.py:1910(isscalar)
series.py:391(__array__)                                               ->     358    0.000    0.001  series.py:319(get_values)
re.py:143(search)                                                      ->     636    0.001    0.001  re.py:230(_compile)
                                                                              636    0.000    0.000  {method 'search' of '_sre.SRE_Pattern' objects}
qc.py:155(get_cols_from_df)                                            ->      55    0.000    0.000  index.py:1001(__iter__)
                                                                              231    0.000    0.001  qc.py:128(is_col_type)
                                                                               55    0.000    0.000  {sorted}
groupby.py:1874(__init__)                                              ->      52    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                               52    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                               52    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                               52    0.000    0.001  groupby.py:2175(_convert_grouper)
                                                                               52    0.000    0.000  {getattr}
                                                                              312    0.000    0.000  {isinstance}
{pandas.lib.list_to_object_array}                                      ->
index.py:610(set_names)                                                ->     208    0.000    0.000  common.py:2603(is_list_like)
                                                                               52    0.000    0.001  index.py:343(_shallow_copy)
                                                                              104    0.000    0.000  index.py:602(_set_names)
qc.py:183(_validate_seqs_cols)                                         ->      12    0.000    0.000  frame.py:1774(__getitem__)
                                                                                5    0.000    0.000  qc.py:155(get_cols_from_df)
                                                                              287    0.000    0.001  re.py:143(search)
                                                                                3    0.000    0.000  series.py:519(__getitem__)
                                                                                9    0.000    0.000  series.py:1003(__iter__)
                                                                                9    0.000    0.000  {all}
                                                                              290    0.000    0.000  {len}
                                                                              287    0.000    0.000  {method 'upper' of 'str' objects}
series.py:1003(__iter__)                                               ->      62    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                              124    0.000    0.000  numerictypes.py:736(issubdtype)
                                                                              186    0.000    0.000  series.py:288(dtype)
                                                                               62    0.000    0.000  series.py:308(values)
                                                                               62    0.000    0.000  {iter}
internals.py:112(to_dense)                                             ->    1451    0.001    0.001  {method 'view' of 'numpy.ndarray' objects}
numeric.py:588(require)                                                ->     216    0.000    0.000  {method 'upper' of 'str' objects}
                                                                              216    0.000    0.000  {numpy.core.multiarray.array}
indexing.py:1695(maybe_convert_indices)                                ->      61    0.000    0.000  {isinstance}
                                                                              122    0.000    0.001  {method 'any' of 'numpy.ndarray' objects}
{sum}                                                                  ->     156    0.000    0.000  common.py:2194(<genexpr>)
                                                                             1174    0.001    0.001  internals.py:2386(<genexpr>)
qc.py:128(is_col_type)                                                 ->     349    0.000    0.001  re.py:143(search)
generic.py:107(_validate_dtype)                                        ->     362    0.000    0.001  common.py:2443(_coerce_to_dtype)
{method 'fill' of 'numpy.ndarray' objects}                             ->
arrayprint.py:533(__init__)                                            ->       6    0.000    0.001  arrayprint.py:547(fillFormat)
index.py:987(inferred_type)                                            ->     109    0.001    0.001  {pandas.lib.infer_dtype}
arrayprint.py:547(fillFormat)                                          ->     696    0.001    0.001  arrayprint.py:632(_digits)
                                                                                3    0.000    0.000  fromnumeric.py:1772(any)
                                                                                6    0.000    0.000  numeric.py:2809(__init__)
                                                                                6    0.000    0.000  numeric.py:2813(__enter__)
                                                                                6    0.000    0.000  numeric.py:2818(__exit__)
                                                                                9    0.000    0.000  {len}
                                                                                2    0.000    0.000  {max}
                                                                                3    0.000    0.000  {method 'compress' of 'numpy.ndarray' objects}
                                                                                4    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
                                                                                3    0.000    0.000  {min}
{range}                                                                ->
{scipy.sparse._sparsetools.expandptr}                                  ->
{method 'standard_normal' of 'mtrand.RandomState' objects}             ->
common.py:2049(_possibly_infer_to_datetimelike)                        ->      97    0.000    0.000  common.py:2603(is_list_like)
                                                                              194    0.000    0.000  {len}
                                                                               97    0.000    0.000  {min}
                                                                               97    0.000    0.000  {numpy.core.multiarray.array}
                                                                               97    0.001    0.001  {pandas.lib.infer_dtype}
base.py:184(__get__)                                                   ->      88    0.001    0.001  base.py:507(_make_str_accessor)
merge.py:763(__init__)                                                 ->       6    0.000    0.000  base.py:318(ndim)
                                                                                2    0.000    0.000  frame.py:189(_constructor)
                                                                                2    0.000    0.001  frame.py:200(__init__)
                                                                                2    0.000    0.000  frame.py:418(shape)
                                                                                2    0.000    0.000  fromnumeric.py:1631(sum)
                                                                               10    0.000    0.000  generic.py:386(ndim)
                                                                                4    0.000    0.000  generic.py:2203(consolidate)
                                                                                2    0.000    0.000  merge.py:938(_get_new_axes)
                                                                                2    0.000    0.000  {getattr}
                                                                               12    0.000    0.000  {isinstance}
                                                                                6    0.000    0.000  {len}
                                                                                2    0.000    0.000  {max}
                                                                                4    0.000    0.000  {method 'add' of 'set' objects}
                                                                                4    0.000    0.000  {method 'append' of 'list' objects}
generic.py:2118(__finalize__)                                          ->     397    0.000    0.000  {getattr}
                                                                              826    0.000    0.000  {isinstance}
fromnumeric.py:2651(mean)                                              ->      88    0.000    0.001  _methods.py:53(_mean)
numeric.py:2524(geterr)                                                ->     916    0.000    0.000  {numpy.core.umath.geterrobj}
base.py:507(_make_str_accessor)                                        ->      88    0.000    0.000  common.py:2585(is_object_dtype)
                                                                               88    0.000    0.000  series.py:288(dtype)
                                                                               88    0.000    0.000  strings.py:1059(__init__)
                                                                              176    0.000    0.000  {isinstance}
internals.py:3815(<lambda>)                                            ->     830    0.001    0.001  internals.py:79(_consolidate_key)
index.py:1783(_possibly_promote)                                       ->      52    0.000    0.000  index.py:987(inferred_type)
{method 'get_loc' of 'pandas.index.IndexEngine' objects}               ->       1    0.000    0.000  index.py:961(<lambda>)
internals.py:3748(_interleaved_dtype)                                  ->     459    0.000    0.000  internals.py:3752(<lambda>)
                                                                               51    0.000    0.000  internals.py:3756(_lcd_dtype)
                                                                              510    0.000    0.000  {len}
                                                                              102    0.000    0.000  {method 'append' of 'list' objects}
_methods.py:53(_mean)                                                  ->      88    0.000    0.000  _methods.py:43(_count_reduce_items)
                                                                               88    0.000    0.000  numeric.py:464(asanyarray)
                                                                               87    0.000    0.000  {hasattr}
                                                                               88    0.000    0.000  {isinstance}
                                                                               88    0.000    0.000  {issubclass}
                                                                               88    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
common.py:407(array_equivalent)                                        ->     448    0.000    0.001  numeric.py:394(asarray)
                                                                                6    0.000    0.000  numeric.py:2328(array_equal)
                                                                               23    0.000    0.000  {issubclass}
                                                                               10    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                               10    0.000    0.000  {pandas.algos.ensure_object}
                                                                                5    0.000    0.000  {pandas.lib.array_equivalent_object}
index.py:752(is_integer)                                               ->      57    0.000    0.001  index.py:987(inferred_type)
                                                                               60    0.000    0.000  index.py:3413(inferred_type)
internals.py:422(convert)                                              ->     103    0.000    0.001  internals.py:504(copy)
base.py:782(_process_toarray_args)                                     ->      52    0.000    0.000  base.py:93(get_shape)
                                                                               52    0.000    0.000  data.py:28(_get_dtype)
                                                                               52    0.001    0.001  {numpy.core.multiarray.zeros}
common.py:2380(_index_labels_to_array)                                 ->      53    0.000    0.001  common.py:2347(_asarray_tuplesafe)
                                                                              106    0.000    0.000  {isinstance}
data.py:25(__init__)                                                   ->     365    0.001    0.001  base.py:63(__init__)
defmatrix.py:244(__new__)                                              ->     112    0.000    0.000  {isinstance}
                                                                               55    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                               55    0.000    0.001  {method 'view' of 'numpy.ndarray' objects}
qc.py:495(_validate_val_cols)                                          ->       8    0.000    0.000  frame.py:1774(__getitem__)
                                                                                8    0.000    0.000  generic.py:2135(__getattr__)
                                                                                5    0.000    0.000  qc.py:155(get_cols_from_df)
                                                                                4    0.000    0.000  series.py:308(values)
                                                                                4    0.000    0.000  series.py:391(__array__)
                                                                                4    0.000    0.000  series.py:397(__array_wrap__)
                                                                                4    0.000    0.000  series.py:404(__array_prepare__)
                                                                                4    0.000    0.000  {all}
_iotools.py:30(_is_string_like)                                        ->
function_base.py:3832(append)                                          ->     110    0.000    0.000  fromnumeric.py:1291(ravel)
                                                                              110    0.000    0.000  numeric.py:464(asanyarray)
                                                                              110    0.000    0.000  {numpy.core.multiarray.concatenate}
internals.py:2246(_is_single_block)                                    ->     228    0.000    0.000  internals.py:119(mgr_locs)
                                                                              271    0.000    0.000  internals.py:2208(ndim)
                                                                              385    0.000    0.000  {len}
{method 'ravel' of 'numpy.ndarray' objects}                            ->
common.py:2683(_astype_nansafe)                                        ->      55    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                               55    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                               59    0.000    0.000  numerictypes.py:736(issubdtype)
                                                                               55    0.000    0.000  {isinstance}
                                                                              110    0.000    0.000  {issubclass}
                                                                                4    0.000    0.000  {method 'any' of 'numpy.ndarray' objects}
                                                                               55    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
groupby.py:1443(_get_aggregate_function)                               ->     155    0.000    0.001  groupby.py:1447(get_func)
                                                                              155    0.000    0.000  {isinstance}
sputils.py:102(to_native)                                              ->     365    0.000    0.000  numeric.py:394(asarray)
                                                                              365    0.000    0.000  {method 'newbyteorder' of 'numpy.dtype' objects}
{method 'get_indexer' of 'pandas.index.IndexEngine' objects}           ->
internals.py:2208(ndim)                                                ->    2318    0.000    0.000  {len}
generic.py:305(_get_axis_name)                                         ->     612    0.000    0.000  {isinstance}
                                                                              612    0.000    0.000  {method 'get' of 'dict' objects}
common.py:2565(is_categorical)                                         ->     474    0.000    0.001  {isinstance}
{pandas.algos.take_1d_int64_int64}                                     ->
fromnumeric.py:1852(all)                                               ->     106    0.000    0.000  numeric.py:464(asanyarray)
                                                                              106    0.000    0.001  {method 'all' of 'numpy.ndarray' objects}
common.py:2644(is_sequence)                                            ->     157    0.000    0.000  {isinstance}
                                                                              260    0.000    0.000  {iter}
                                                                              157    0.000    0.000  {len}
internals.py:228(dtype)                                                ->
internals.py:2560(is_consolidated)                                     ->      56    0.000    0.001  internals.py:2568(_consolidate_check)
fromnumeric.py:2259(prod)                                              ->      54    0.000    0.001  _methods.py:34(_prod)
index.py:3434(equals)                                                  ->       7    0.000    0.000  common.py:407(array_equivalent)
                                                                              425    0.000    0.000  index.py:218(is_)
                                                                               14    0.000    0.000  {pandas.lib.values_from_object}
groupby.py:2103(<genexpr>)                                             ->      52    0.001    0.001  index.py:1045(__contains__)
index.py:668(rename)                                                   ->      52    0.000    0.001  index.py:610(set_names)
index.py:237(_reset_identity)                                          ->
base.py:71(set_shape)                                                  ->     365    0.000    0.000  {len}
compressed.py:987(sum_duplicates)                                      ->      52    0.000    0.001  compressed.py:957(__get_has_canonical_format)
{method 'nonzero' of 'numpy.ndarray' objects}                          ->
stride_tricks.py:23(as_strided)                                        ->      54    0.000    0.000  numeric.py:394(asarray)
                                                                               54    0.000    0.000  stride_tricks.py:19(__init__)
internals.py:177(_slice)                                               ->
compressed.py:957(__get_has_canonical_format)                          ->      52    0.000    0.000  compressed.py:979(__set_has_canonical_format)
                                                                               52    0.000    0.000  {getattr}
                                                                               52    0.000    0.000  {hasattr}
                                                                               52    0.000    0.000  {len}
                                                                               52    0.000    0.000  {scipy.sparse._sparsetools.csr_has_canonical_format}
internals.py:2386(<genexpr>)                                           ->     848    0.000    0.000  internals.py:119(mgr_locs)
                                                                              848    0.000    0.000  {len}
type_check.py:237(iscomplexobj)                                        ->     255    0.000    0.000  numeric.py:394(asarray)
                                                                              255    0.000    0.000  {issubclass}
collections.py:38(__init__)                                            ->      51    0.000    0.000  _abcoll.py:545(update)
                                                                               51    0.000    0.000  abc.py:148(__subclasscheck__)
                                                                               51    0.000    0.000  {len}
generic.py:1172(_clear_item_cache)                                     ->     280    0.001    0.001  {method 'clear' of 'dict' objects}
{method 'put' of 'numpy.ndarray' objects}                              ->
arrayprint.py:632(_digits)                                             ->    1392    0.000    0.000  {len}
                                                                              696    0.000    0.000  {method 'rstrip' of 'str' objects}
{math.exp}                                                             ->
generic.py:120(_init_mgr)                                              ->     429    0.000    0.000  {method 'items' of 'dict' objects}
common.py:2603(is_list_like)                                           ->     445    0.000    0.000  {hasattr}
                                                                              428    0.000    0.000  {isinstance}
internals.py:79(_consolidate_key)                                      ->     830    0.000    0.000  internals.py:228(dtype)
re.py:230(_compile)                                                    ->       2    0.000    0.000  sre_compile.py:546(isortseq_toolsring)
                                                                                2    0.000    0.000  sre_compile.py:567(compile)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
coo.py:208(getnnz)                                                     ->    1248    0.000    0.000  {len}
compressed.py:90(getnnz)                                               ->
series.py:2575(_sanitize_index)                                        ->     468    0.000    0.000  {isinstance}
                                                                              312    0.000    0.000  {len}
frame.py:295(_init_dict)                                               ->       2    0.000    0.000  common.py:2185(_try_sort)
                                                                                2    0.000    0.001  frame.py:4791(_arrays_to_mgr)
                                                                                2    0.000    0.000  index.py:109(__new__)
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'keys' of 'dict' objects}
common.py:2585(is_object_dtype)                                        ->     301    0.000    0.000  common.py:2461(_get_dtype_type)
                                                                              301    0.000    0.000  {issubclass}
merge.py:888(get_result)                                               ->       2    0.000    0.000  generic.py:280(_from_axes)
                                                                                2    0.000    0.000  generic.py:2118(__finalize__)
                                                                                4    0.000    0.000  index.py:3434(equals)
                                                                                2    0.000    0.001  internals.py:4044(concatenate_block_managers)
                                                                                4    0.000    0.000  {method 'append' of 'list' objects}
index.py:1001(__iter__)                                                ->     277    0.000    0.000  index.py:263(values)
                                                                              277    0.000    0.000  {iter}
base.py:63(__init__)                                                   ->
type_check.py:207(isreal)                                              ->     102    0.000    0.000  type_check.py:141(imag)
indexing.py:1185(__getitem__)                                          ->       2    0.000    0.000  indexing.py:698(_getitem_tuple)
                                                                                2    0.000    0.000  indexing.py:1299(_getitem_axis)
                                                                                8    0.000    0.000  indexing.py:1449(_getitem_axis)
arrayprint.py:700(__init__)                                            ->       4    0.000    0.001  arrayprint.py:533(__init__)
generic.py:322(_get_block_manager_axis)                                ->     216    0.000    0.000  generic.py:292(_get_axis_number)
_methods.py:34(_prod)                                                  ->      54    0.001    0.001  {method 'reduce' of 'numpy.ufunc' objects}
index.py:268(get_values)                                               ->     448    0.000    0.001  index.py:263(values)
sputils.py:245(_unpack_index)                                          ->      27    0.000    0.000  sputils.py:273(_check_ellipsis)
                                                                               27    0.000    0.000  sputils.py:311(_check_boolean)
                                                                               54    0.000    0.000  {isinstance}
                                                                               27    0.000    0.000  {len}
qc.py:396(_validate_mut_cols)                                          ->       3    0.000    0.000  frame.py:1774(__getitem__)
                                                                                2    0.000    0.000  ops.py:574(wrapper)
                                                                                5    0.000    0.000  qc.py:155(get_cols_from_df)
                                                                                1    0.000    0.000  series.py:308(values)
                                                                                2    0.000    0.000  {all}
{pandas.lib.get_blkno_indexers}                                        ->
qc.py:329(_validate_pos_cols)                                          ->      18    0.000    0.000  frame.py:1774(__getitem__)
                                                                                6    0.000    0.000  generic.py:1046(_indexer)
                                                                                5    0.000    0.000  index.py:1045(__contains__)
                                                                                6    0.000    0.000  indexing.py:1185(__getitem__)
                                                                                3    0.000    0.000  numeric.py:2328(array_equal)
                                                                               12    0.000    0.000  series.py:308(values)
                                                                                6    0.000    0.000  {method 'astype' of 'numpy.ndarray' objects}
                                                                                3    0.000    0.000  {numpy.core.multiarray.arange}
generic.py:1046(_indexer)                                              ->      66    0.000    0.000  indexing.py:41(__init__)
                                                                               76    0.000    0.000  {getattr}
                                                                               66    0.000    0.000  {setattr}
generic.py:366(_info_axis)                                             ->     799    0.000    0.000  {getattr}
sputils.py:205(isshape)                                                ->       2    0.000    0.000  fromnumeric.py:2422(ndim)
                                                                               54    0.000    0.000  sputils.py:189(isintlike)
numerictypes.py:970(find_common_type)                                  ->     108    0.001    0.001  numerictypes.py:949(_can_coerce_all)
index.py:3385(__new__)                                                 ->      61    0.000    0.000  index.py:204(_simple_new)
                                                                               61    0.000    0.000  index.py:312(_coerce_to_ndarray)
                                                                              122    0.000    0.000  {issubclass}
                                                                               61    0.000    0.000  {numpy.core.multiarray.array}
index.py:740(is_unique)                                                ->       1    0.000    0.000  index.py:958(_engine)
                                                                               55    0.000    0.000  index.py:961(<lambda>)
groupby.py:1363(group_info)                                            ->      52    0.000    0.001  groupby.py:1372(_get_compressed_labels)
                                                                               52    0.000    0.000  {len}
                                                                               52    0.000    0.000  {pandas.algos.ensure_int64}
{method 'flatten' of 'numpy.ndarray' objects}                          ->
compressed.py:115(_set_self)                                           ->     156    0.000    0.000  base.py:71(set_shape)
                                                                              156    0.000    0.000  base.py:93(get_shape)
internals.py:4461(_preprocess_slice_or_indexer)                        ->     111    0.000    0.000  numeric.py:464(asanyarray)
                                                                              222    0.000    0.000  {isinstance}
                                                                              111    0.000    0.000  {len}
utils.py:110(get_column_headers)                                       ->      52    0.000    0.000  index.py:1001(__iter__)
frame.py:4791(_arrays_to_mgr)                                          ->       2    0.000    0.000  frame.py:4811(extract_index)
                                                                                2    0.000    0.000  frame.py:5092(_homogenize)
                                                                                4    0.000    0.000  index.py:5677(_ensure_index)
                                                                                2    0.000    0.001  internals.py:3553(create_block_manager_from_arrays)
indexing.py:159(_convert_scalar_indexer)                               ->      78    0.000    0.000  generic.py:318(_get_axis)
                                                                               78    0.000    0.000  index.py:773(_convert_scalar_indexer)
                                                                               78    0.000    0.000  {min}
index.py:1245(identical)                                               ->      52    0.000    0.001  index.py:1233(equals)
index.py:958(_engine)                                                  ->     175    0.000    0.000  {len}
internals.py:4044(concatenate_block_managers)                          ->       4    0.000    0.000  internals.py:2073(make_block)
                                                                                2    0.000    0.000  internals.py:2163(__init__)
                                                                                4    0.000    0.000  internals.py:4144(concatenate_join_units)
                                                                                4    0.000    0.000  internals.py:4168(get_mgr_concatenation_plan)
                                                                                6    0.000    0.000  internals.py:4246(combine_concat_plans)
progressbar.py:29(update)                                              ->      10    0.000    0.000  progressbar.py:50(animate)
                                                                               51    0.000    0.000  {time.time}
index.py:3489(__new__)                                                 ->      51    0.000    0.000  index.py:204(_simple_new)
                                                                               51    0.000    0.000  index.py:312(_coerce_to_ndarray)
                                                                               51    0.000    0.000  {issubclass}
                                                                               51    0.000    0.000  {numpy.core.multiarray.array}
groupby.py:1372(_get_compressed_labels)                                ->     104    0.000    0.000  groupby.py:2020(labels)
                                                                               52    0.000    0.000  groupby.py:2026(group_index)
                                                                              104    0.000    0.000  {len}
                                                                               52    0.000    0.000  {numpy.core.multiarray.arange}
internals.py:3553(create_block_manager_from_arrays)                    ->       2    0.000    0.000  internals.py:2163(__init__)
                                                                                2    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                2    0.000    0.000  internals.py:3563(form_blocks)
{method 'reshape' of 'numpy.ndarray' objects}                          ->       1    0.000    0.000  defmatrix.py:290(__array_finalize__)
{hash}                                                                 ->       2    0.000    0.000  generic.py:661(__hash__)
fromnumeric.py:803(argsort)                                            ->     104    0.000    0.000  {method 'argsort' of 'numpy.ndarray' objects}
numerictypes.py:949(_can_coerce_all)                                   ->     552    0.000    0.000  {len}
{abs}                                                                  ->
{built-in method __new__ of type object at 0x7fd63df25bc0}             ->
internals.py:2369(__len__)                                             ->     253    0.000    0.000  internals.py:2279(_get_items)
                                                                              253    0.000    0.000  {len}
PyMCObjects.py:834(set_value)                                          ->      50    0.000    0.000  PyMCObjects.py:880(fget)
                                                                               50    0.000    0.000  PyMCObjects.py:1046(_get_observed)
                                                                               50    0.000    0.000  numeric.py:464(asanyarray)
                                                                               50    0.000    0.000  {method 'click' of 'pymc.LazyFunction.Counter' objects}
{numpy.core.umath.seterrobj}                                           ->
{method 'clear' of 'dict' objects}                                     ->
index.py:218(is_)                                                      ->     642    0.000    0.000  {getattr}
frame.py:343(_init_ndarray)                                            ->       4    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                2    0.000    0.000  common.py:2585(is_object_dtype)
                                                                                2    0.000    0.000  frame.py:361(_get_axes)
                                                                                2    0.000    0.000  frame.py:4863(_prep_ndarray)
                                                                                2    0.000    0.000  internals.py:3530(create_block_manager_from_blocks)
                                                                                2    0.000    0.000  {getattr}
                                                                                2    0.000    0.000  {isinstance}
sputils.py:26(upcast)                                                  ->       1    0.000    0.000  fromnumeric.py:1852(all)
                                                                                2    0.000    0.000  numerictypes.py:736(issubdtype)
                                                                                1    0.000    0.000  numerictypes.py:970(find_common_type)
                                                                              105    0.000    0.000  {hash}
                                                                              104    0.000    0.000  {method 'get' of 'dict' objects}
                                                                               11    0.000    0.000  {numpy.core.multiarray.can_cast}
groupby.py:1447(get_func)                                              ->     207    0.000    0.000  {getattr}
internals.py:2279(_get_items)                                          ->
fromnumeric.py:694(sort)                                               ->      52    0.000    0.000  numeric.py:464(asanyarray)
                                                                               52    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                               52    0.000    0.000  {method 'sort' of 'numpy.ndarray' objects}
index.py:248(__array__)                                                ->     323    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
arrayprint.py:457(_extendLine)                                         ->     698    0.000    0.000  {len}
                                                                              754    0.000    0.000  {method 'rstrip' of 'str' objects}
groupby.py:2175(_convert_grouper)                                      ->      52    0.000    0.000  index.py:3434(equals)
                                                                               52    0.000    0.000  series.py:308(values)
                                                                              104    0.000    0.000  {isinstance}
defmatrix.py:290(__array_finalize__)                                   ->      53    0.000    0.000  defmatrix.py:290(__array_finalize__)
                                                                              219    0.000    0.000  {isinstance}
numerictypes.py:736(issubdtype)                                        ->     185    0.000    0.000  numerictypes.py:668(issubclass_)
                                                                              185    0.000    0.000  {issubclass}
                                                                                2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'mro' of 'type' objects}
{method 'append' of 'list' objects}                                    ->
series.py:381(__len__)                                                 ->     139    0.000    0.000  {len}
frame.py:2164(_ensure_valid_index)                                     ->     168    0.000    0.000  {len}
numeric.py:2809(__init__)                                              ->     458    0.000    0.000  {method 'pop' of 'dict' objects}
{numpy.core.multiarray.empty_like}                                     ->
fromnumeric.py:1380(nonzero)                                           ->     102    0.000    0.000  {method 'nonzero' of 'numpy.ndarray' objects}
{method 'update' of 'dict' objects}                                    ->
base.py:865(isspmatrix)                                                ->     528    0.000    0.000  {isinstance}
_methods.py:43(_count_reduce_items)                                    ->     140    0.000    0.000  {isinstance}
                                                                              138    0.000    0.000  {range}
index.py:961(<lambda>)                                                 ->     173    0.000    0.000  index.py:263(values)
getlimits.py:269(max)                                                  ->
fromnumeric.py:1291(ravel)                                             ->     112    0.000    0.000  numeric.py:394(asarray)
                                                                              112    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
index.py:817(_convert_slice_indexer)                                   ->      28    0.000    0.000  index.py:752(is_integer)
                                                                               27    0.000    0.000  index.py:810(_convert_slice_indexer_getitem)
                                                                                3    0.000    0.000  index.py:835(f)
                                                                               84    0.000    0.000  index.py:851(validate)
                                                                               56    0.000    0.000  index.py:871(is_int)
                                                                               84    0.000    0.000  {getattr}
                                                                               29    0.000    0.000  {isinstance}
internals.py:3563(form_blocks)                                         ->       2    0.000    0.000  index.py:109(__new__)
                                                                                2    0.000    0.000  index.py:1059(__getitem__)
                                                                                2    0.000    0.000  index.py:1233(equals)
                                                                                2    0.000    0.000  internals.py:3687(_multi_blockify)
                                                                               10    0.000    0.000  series.py:288(dtype)
                                                                                2    0.000    0.000  {isinstance}
                                                                                8    0.000    0.000  {issubclass}
                                                                               20    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                2    0.000    0.000  {method 'extend' of 'list' objects}
                                                                                2    0.000    0.000  {numpy.core.multiarray.arange}
{method 'search' of '_sre.SRE_Pattern' objects}                        ->
indexing.py:1449(_getitem_axis)                                        ->       7    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                7    0.000    0.000  indexing.py:88(_get_loc)
                                                                                7    0.000    0.000  indexing.py:159(_convert_scalar_indexer)
                                                                                1    0.000    0.000  indexing.py:1364(_has_valid_type)
                                                                                7    0.000    0.000  indexing.py:1387(_is_valid_integer)
                                                                                1    0.000    0.000  indexing.py:1437(_get_slice_axis)
                                                                                7    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                8    0.000    0.000  {isinstance}
                                                                                7    0.000    0.000  {pandas.lib.is_integer}
index.py:995(is_all_dates)                                             ->      51    0.000    0.000  index.py:263(values)
                                                                               51    0.000    0.000  {pandas.algos.ensure_object}
                                                                               51    0.000    0.000  {pandas.lib.is_datetime_array}
series.py:397(__array_wrap__)                                          ->       8    0.000    0.000  generic.py:2118(__finalize__)
                                                                                8    0.000    0.000  series.py:119(__init__)
                                                                                8    0.000    0.000  series.py:237(_constructor)
sputils.py:238(_slicetoarange)                                         ->      54    0.000    0.000  {method 'indices' of 'slice' objects}
                                                                               54    0.000    0.000  {numpy.core.multiarray.arange}
{method 'iteritems' of 'dict' objects}                                 ->
progressbar.py:50(animate)                                             ->      10    0.000    0.000  progressbar.py:53(progbar)
                                                                               10    0.000    0.000  progressbar.py:73(consoleprint)
{pandas.lib.get_reverse_indexer}                                       ->
generic.py:245(_construct_axes_from_arguments)                         ->     104    0.000    0.000  {method 'get' of 'dict' objects}
                                                                              104    0.000    0.000  {method 'pop' of 'dict' objects}
base.py:103(_reset_cache)                                              ->      51    0.000    0.000  {getattr}
base.py:93(get_shape)                                                  ->
{scipy.sparse._sparsetools.coo_tocsr}                                  ->
merge.py:938(_get_new_axes)                                            ->       2    0.000    0.000  merge.py:932(_get_result_dim)
                                                                                2    0.000    0.000  merge.py:962(_get_comb_axis)
                                                                                2    0.000    0.000  merge.py:974(_get_concat_axis)
index.py:3427(is_all_dates)                                            ->
common.py:2541(is_numeric_dtype)                                       ->     103    0.000    0.000  common.py:2461(_get_dtype_type)
                                                                              206    0.000    0.000  {issubclass}
common.py:2477(is_dtype_equal)                                         ->     328    0.000    0.000  common.py:2461(_get_dtype_type)
indexing.py:94(_get_setitem_indexer)                                   ->       5    0.000    0.000  generic.py:318(_get_axis)
                                                                                5    0.000    0.000  indexing.py:144(_convert_tuple)
                                                                               10    0.000    0.000  {isinstance}
                                                                                5    0.000    0.000  {len}
{pandas.index.convert_scalar}                                          ->
generic.py:1137(_maybe_update_cacher)                                  ->       4    0.000    0.000  generic.py:1172(_clear_item_cache)
                                                                               55    0.000    0.000  generic.py:1227(_check_setitem_copy)
                                                                               55    0.000    0.000  {getattr}
generic.py:702(__contains__)                                           ->      51    0.000    0.000  generic.py:366(_info_axis)
                                                                               51    0.000    0.000  index.py:1045(__contains__)
frame.py:599(__len__)                                                  ->     172    0.000    0.000  {len}
indexing.py:698(_getitem_tuple)                                        ->       2    0.000    0.000  indexing.py:799(_getitem_lowerdim)
frame.py:2666(_maybe_casted_values)                                    ->      52    0.000    0.000  index.py:263(values)
                                                                              104    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {pandas.lib.maybe_convert_objects}
index.py:602(_set_names)                                               ->      52    0.000    0.000  base.py:218(__getitem__)
                                                                              104    0.000    0.000  {len}
indexing.py:799(_getitem_lowerdim)                                     ->       2    0.000    0.000  base.py:318(ndim)
                                                                                2    0.000    0.000  generic.py:318(_get_axis)
                                                                                2    0.000    0.000  generic.py:386(ndim)
                                                                                2    0.000    0.000  indexing.py:139(_is_nested_tuple_indexer)
                                                                                2    0.000    0.000  indexing.py:1185(__getitem__)
                                                                                2    0.000    0.000  indexing.py:1299(_getitem_axis)
                                                                                2    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                4    0.000    0.000  indexing.py:1748(is_label_like)
                                                                                2    0.000    0.000  {getattr}
                                                                                6    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
algorithms.py:403(_get_data_algo)                                      ->       1    0.000    0.000  common.py:2495(is_integer_dtype)
                                                                                1    0.000    0.000  common.py:2526(is_datetime_or_timedelta_dtype)
                                                                               52    0.000    0.000  common.py:2547(is_float_dtype)
                                                                               51    0.000    0.000  {pandas.algos.ensure_float64}
                                                                                1    0.000    0.000  {pandas.algos.ensure_object}
generic.py:1794(_needs_reindex_multi)                                  ->      52    0.000    0.000  common.py:2193(_count_not_none)
                                                                               52    0.000    0.000  {method 'values' of 'dict' objects}
internals.py:259(iget)                                                 ->
indexing.py:144(_convert_tuple)                                        ->      10    0.000    0.000  indexing.py:1007(_convert_to_indexer)
                                                                               10    0.000    0.000  {method 'append' of 'list' objects}
csr.py:211(_swap)                                                      ->
{pandas.algos.ensure_int64}                                            ->
internals.py:272(delete)                                               ->       3    0.000    0.000  function_base.py:3427(delete)
                                                                                3    0.000    0.000  internals.py:119(mgr_locs)
                                                                                3    0.000    0.000  internals.py:141(mgr_locs)
                                                                                3    0.000    0.000  {method 'delete' of 'pandas.lib.BlockPlacement' objects}
sputils.py:184(isscalarlike)                                           ->      52    0.000    0.000  numeric.py:1910(isscalar)
                                                                               52    0.000    0.000  sputils.py:230(isdense)
internals.py:220(shape)                                                ->
{setattr}                                                              ->      66    0.000    0.000  generic.py:2152(__setattr__)
_ni_support.py:70(_get_output)                                         ->      51    0.000    0.000  {numpy.core.multiarray.zeros}
{method 'rstrip' of 'str' objects}                                     ->
indexing.py:510(_align_series)                                         ->       2    0.000    0.000  common.py:2607(is_null_slice)
                                                                                1    0.000    0.000  common.py:2644(is_sequence)
                                                                                1    0.000    0.000  frame.py:414(axes)
                                                                                2    0.000    0.000  generic.py:386(ndim)
                                                                                1    0.000    0.000  index.py:109(__new__)
                                                                                1    0.000    0.000  index.py:1059(__getitem__)
                                                                                1    0.000    0.000  index.py:3434(equals)
                                                                                1    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                1    0.000    0.000  series.py:308(values)
                                                                                3    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {map}
                                                                                1    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {sum}
internals.py:2482(setitem)                                             ->       4    0.000    0.000  internals.py:2396(apply)
index.py:914(_convert_list_indexer)                                    ->      59    0.000    0.000  common.py:2495(is_integer_dtype)
Model.py:616(tally)                                                    ->       5    0.000    0.000  base.py:260(tally)
index.py:273(tolist)                                                   ->      52    0.000    0.000  index.py:263(values)
indexing.py:41(__init__)                                               ->       6    0.000    0.000  base.py:318(ndim)
                                                                               60    0.000    0.000  generic.py:386(ndim)
{numpy.core.umath.geterrobj}                                           ->
internals.py:4144(concatenate_join_units)                              ->       4    0.000    0.000  internals.py:4068(get_empty_dtype_and_na)
                                                                                4    0.000    0.000  internals.py:4396(get_reindexed_values)
                                                                                8    0.000    0.000  {len}
                                                                                4    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
progressbar.py:53(progbar)                                             ->      10    0.000    0.000  progressbar.py:26(percentage)
                                                                               10    0.000    0.000  progressbar.py:58(bar)
                                                                               10    0.000    0.000  {round}
internals.py:3530(create_block_manager_from_blocks)                    ->       2    0.000    0.000  internals.py:2073(make_block)
                                                                                2    0.000    0.000  internals.py:2163(__init__)
                                                                                2    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                                2    0.000    0.000  {isinstance}
                                                                                6    0.000    0.000  {len}
{method 'newbyteorder' of 'numpy.dtype' objects}                       ->
{method 'transpose' of 'numpy.ndarray' objects}                        ->      53    0.000    0.000  defmatrix.py:290(__array_finalize__)
sputils.py:311(_check_boolean)                                         ->     108    0.000    0.000  base.py:865(isspmatrix)
                                                                              108    0.000    0.000  {isinstance}
Container.py:505(__init__)                                             ->       5    0.000    0.000  Container.py:168(file_items)
                                                                                5    0.000    0.000  Node.py:399(__init__)
                                                                                5    0.000    0.000  copy.py:66(copy)
                                                                                5    0.000    0.000  six.py:560(iteritems)
                                                                                4    0.000    0.000  {isinstance}
                                                                               10    0.000    0.000  {len}
                                                                               18    0.000    0.000  {method 'append' of 'list' objects}
                                                                               15    0.000    0.000  {numpy.core.multiarray.array}
type_check.py:141(imag)                                                ->     102    0.000    0.000  numeric.py:464(asanyarray)
Container.py:539(get_value)                                            ->      52    0.000    0.000  {method 'run' of 'pymc.Container_values.DCValue' objects}
{max}                                                                  ->
indexing.py:1744(is_list_like_indexer)                                 ->      84    0.000    0.000  common.py:2603(is_list_like)
                                                                               67    0.000    0.000  {isinstance}
base.py:260(tally)                                                     ->      15    0.000    0.000  ram.py:86(tally)
                                                                                5    0.000    0.000  {range}
indexing.py:1299(_getitem_axis)                                        ->       2    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                4    0.000    0.000  generic.py:318(_get_axis)
                                                                                2    0.000    0.000  indexing.py:72(_get_label)
                                                                                2    0.000    0.000  indexing.py:1203(_get_slice_axis)
                                                                                4    0.000    0.000  indexing.py:1247(_has_valid_type)
                                                                                2    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                4    0.000    0.000  {isinstance}
{iter}                                                                 ->
abc.py:148(__subclasscheck__)                                          ->       1    0.000    0.000  _abcoll.py:98(__subclasshook__)
                                                                                1    0.000    0.000  _weakrefset.py:36(__init__)
                                                                                4    0.000    0.000  _weakrefset.py:58(__iter__)
                                                                               51    0.000    0.000  _weakrefset.py:70(__contains__)
                                                                                1    0.000    0.000  _weakrefset.py:83(add)
                                                                                1    0.000    0.000  {getattr}
                                                                                3    0.000    0.000  {issubclass}
internals.py:97(is_categorical_astype)                                 ->      60    0.000    0.000  common.py:2569(is_categorical_dtype)
{method 'swapaxes' of 'numpy.ndarray' objects}                         ->
common.py:2759(_clean_reindex_fill_method)                             ->     216    0.000    0.000  common.py:2738(_clean_fill_method)
numeric.py:2328(array_equal)                                           ->      27    0.000    0.000  numeric.py:394(asarray)
                                                                                9    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
internals.py:1258(should_store)                                        ->      50    0.000    0.000  internals.py:228(dtype)
                                                                               54    0.000    0.000  {issubclass}
MCMC.py:60(__init__)                                                   ->       1    0.000    0.000  Model.py:176(__init__)
internals.py:529(setitem)                                              ->       4    0.000    0.000  common.py:1056(_infer_dtype_from_scalar)
                                                                                4    0.000    0.000  internals.py:119(mgr_locs)
                                                                                4    0.000    0.000  internals.py:471(_try_coerce_args)
                                                                                4    0.000    0.000  internals.py:479(_try_coerce_and_cast_result)
                                                                                8    0.000    0.000  internals.py:551(<lambda>)
                                                                                4    0.000    0.000  internals.py:575(_is_scalar_indexer)
                                                                                4    0.000    0.000  internals.py:584(_is_empty_indexer)
                                                                                4    0.000    0.000  internals.py:1536(_can_hold_element)
                                                                                4    0.000    0.000  internals.py:2073(make_block)
                                                                                4    0.000    0.000  numeric.py:1910(isscalar)
                                                                                8    0.000    0.000  {isinstance}
                                                                                8    0.000    0.000  {len}
                                                                                4    0.000    0.000  {numpy.core.multiarray.array}
{pandas.lib.is_float}                                                  ->
sre_compile.py:567(compile)                                            ->       2    0.000    0.000  sre_compile.py:546(isortseq_toolsring)
                                                                                2    0.000    0.000  sre_compile.py:552(_code)
                                                                                2    0.000    0.000  sre_parse.py:706(parse)
                                                                                2    0.000    0.000  {_sre.compile}
                                                                                2    0.000    0.000  {method 'items' of 'dict' objects}
Model.py:176(__init__)                                                 ->       1    0.000    0.000  Model.py:81(__init__)
                                                                                1    0.000    0.000  Model.py:514(fset)
                                                                                1    0.000    0.000  Model.py:522(_assign_database_backend)
                                                                                1    0.000    0.000  {hasattr}
internals.py:4068(get_empty_dtype_and_na)                              ->       4    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                4    0.000    0.000  common.py:2516(is_timedelta64_dtype)
                                                                                4    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                4    0.000    0.000  internals.py:4357(dtype)
                                                                                4    0.000    0.000  internals.py:4370(is_null)
                                                                                8    0.000    0.000  {issubclass}
                                                                                8    0.000    0.000  {len}
                                                                                4    0.000    0.000  {method 'add' of 'set' objects}
generic.py:1199(_set_is_copy)                                          ->      61    0.000    0.000  generic.py:2152(__setattr__)
{method 'count' of 'str' objects}                                      ->
internals.py:115(fill_value)                                           ->
generic.py:386(ndim)                                                   ->     128    0.000    0.000  internals.py:2208(ndim)
{method 'items' of 'dict' objects}                                     ->
StepMethods.py:556(reject)                                             ->      39    0.000    0.000  PyMCObjects.py:895(revert)
{method 'add' of 'pandas.lib.BlockPlacement' objects}                  ->
ops.py:488(wrapper)                                                    ->       1    0.000    0.000  common.py:3338(_maybe_match_name)
                                                                                1    0.000    0.000  index.py:3434(equals)
                                                                                2    0.000    0.000  ops.py:437(maybe_convert_for_time_op)
                                                                                2    0.000    0.000  ops.py:466(na_op)
                                                                                2    0.000    0.000  ops.py:498(<lambda>)
                                                                                2    0.000    0.000  series.py:119(__init__)
                                                                                2    0.000    0.000  series.py:237(_constructor)
                                                                                1    0.000    0.000  series.py:308(values)
                                                                                3    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {hasattr}
                                                                                4    0.000    0.000  {isinstance}
ram.py:86(tally)                                                       ->       5    0.000    0.000  MCMC.py:188(<lambda>)
                                                                                5    0.000    0.000  Model.py:222(_sum_deviance)
                                                                                5    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                5    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
groupby.py:2135(is_in_obj)                                             ->      52    0.000    0.000  {id}
generic.py:1936(head)                                                  ->       1    0.000    0.000  generic.py:1046(_indexer)
                                                                                1    0.000    0.000  indexing.py:1185(__getitem__)
                                                                                1    0.000    0.000  {len}
{method 'sort' of 'numpy.ndarray' objects}                             ->
Model.py:81(__init__)                                                  ->       1    0.000    0.000  Container.py:594(__init__)
frame.py:361(_get_axes)                                                ->       3    0.000    0.000  common.py:2144(_default_index)
                                                                                1    0.000    0.000  index.py:5677(_ensure_index)
merge.py:974(_get_concat_axis)                                         ->       2    0.000    0.000  merge.py:1020(_maybe_check_integrity)
                                                                                2    0.000    0.000  merge.py:1028(_concat_indexes)
Container.py:594(__init__)                                             ->       1    0.000    0.000  Container.py:168(file_items)
                                                                                1    0.000    0.000  Container.py:505(__init__)
                                                                                1    0.000    0.000  Node.py:399(__init__)
                                                                                2    0.000    0.000  copy.py:66(copy)
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
index.py:582(_assert_can_do_setop)                                     ->      54    0.000    0.000  common.py:2603(is_list_like)
internals.py:3444(index)                                               ->
merge.py:1028(_concat_indexes)                                         ->       2    0.000    0.000  index.py:1121(append)
{numpy.core.multiarray.result_type}                                    ->
common.py:2193(_count_not_none)                                        ->      52    0.000    0.000  {sum}
index.py:1121(append)                                                  ->       2    0.000    0.000  index.py:109(__new__)
                                                                                2    0.000    0.000  index.py:1093(_ensure_compat_append)
                                                                                2    0.000    0.000  {numpy.core.multiarray.concatenate}
{pandas.lib.checknull}                                                 ->
function_base.py:550(asarray_chkfinite)                                ->       1    0.000    0.000  numeric.py:394(asarray)
                                                                                1    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
internals.py:874(get_values)                                           ->
{scipy.sparse._csparsetools.prepare_index_for_memoryview}              ->
indexing.py:1437(_get_slice_axis)                                      ->       1    0.000    0.000  indexing.py:91(_slice)
                                                                                1    0.000    0.000  indexing.py:165(_convert_slice_indexer)
                                                                                1    0.000    0.000  indexing.py:1753(need_slice)
                                                                                1    0.000    0.000  {isinstance}
sputils.py:189(isintlike)                                              ->      54    0.000    0.000  sputils.py:220(issequence)
common.py:2144(_default_index)                                         ->       5    0.000    0.000  index.py:3385(__new__)
                                                                                5    0.000    0.000  {numpy.core.multiarray.arange}
defmatrix.py:928(getT)                                                 ->      53    0.000    0.000  {method 'transpose' of 'numpy.ndarray' objects}
index.py:773(_convert_scalar_indexer)                                  ->      71    0.000    0.000  {pandas.lib.is_float}
                                                                                7    0.000    0.000  {pandas.lib.is_integer}
merge.py:962(_get_comb_axis)                                           ->       2    0.000    0.000  index.py:5721(_get_combined_index)
numerictypes.py:668(issubclass_)                                       ->     185    0.000    0.000  {issubclass}
internals.py:1495(set)                                                 ->
frame.py:2319(reindexer)                                               ->      11    0.000    0.000  index.py:3434(equals)
                                                                               11    0.000    0.000  series.py:308(values)
                                                                               11    0.000    0.000  {method 'copy' of 'numpy.ndarray' objects}
internals.py:3687(_multi_blockify)                                     ->       2    0.000    0.000  internals.py:2073(make_block)
                                                                                2    0.000    0.000  internals.py:3691(<lambda>)
                                                                                2    0.000    0.000  internals.py:3721(_stack_arrays)
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
index.py:5721(_get_combined_index)                                     ->       2    0.000    0.000  index.py:5677(_ensure_index)
                                                                                2    0.000    0.000  index.py:5736(_get_distinct_indexes)
                                                                                2    0.000    0.000  index.py:5740(_union_indexes)
                                                                                4    0.000    0.000  {len}
base.py:218(__getitem__)                                               ->      52    0.000    0.000  {function __getitem__ at 0x7fd6243d38c0}
                                                                               52    0.000    0.000  {isinstance}
base.py:485(__getattr__)                                               ->
{pandas.lib.is_datetime_array}                                         ->
indexing.py:91(_slice)                                                 ->       1    0.000    0.000  generic.py:1178(_slice)
groupby.py:1225(__init__)                                              ->      52    0.000    0.000  {len}
{method 'delete' of 'pandas.lib.BlockPlacement' objects}               ->       3    0.000    0.000  function_base.py:3427(delete)
                                                                                3    0.000    0.000  numeric.py:588(require)
generic.py:1178(_slice)                                                ->       1    0.000    0.000  frame.py:189(_constructor)
                                                                                1    0.000    0.000  frame.py:200(__init__)
                                                                                1    0.000    0.000  generic.py:322(_get_block_manager_axis)
                                                                                1    0.000    0.000  generic.py:1199(_set_is_copy)
                                                                                1    0.000    0.000  generic.py:2118(__finalize__)
                                                                                1    0.000    0.000  internals.py:2647(get_slice)
{method 'run' of 'pymc.Container_values.DCValue' objects}              ->     103    0.000    0.000  PyMCObjects.py:823(get_value)
sre_parse.py:706(parse)                                                ->       2    0.000    0.000  sre_parse.py:67(__init__)
                                                                                2    0.000    0.000  sre_parse.py:189(__init__)
                                                                                2    0.000    0.000  sre_parse.py:212(get)
                                                                                2    0.000    0.000  sre_parse.py:317(_parse_sub)
{pandas.algos.ensure_platform_int}                                     ->
sputils.py:273(_check_ellipsis)                                        ->      27    0.000    0.000  {isinstance}
_abcoll.py:545(update)                                                 ->      51    0.000    0.000  {len}
                                                                               51    0.000    0.000  {method 'items' of 'dict' objects}
index.py:258(dtype)                                                    ->
indexing.py:72(_get_label)                                             ->       2    0.000    0.000  generic.py:1368(xs)
                                                                                2    0.000    0.000  {isinstance}
PyMCObjects.py:895(revert)                                             ->      39    0.000    0.000  {method 'unclick' of 'pymc.LazyFunction.Counter' objects}
groupby.py:511(__getattr__)                                            ->
qc.py:556(_validate_freq_cols)                                         ->       5    0.000    0.000  qc.py:155(get_cols_from_df)
internals.py:2573(is_mixed_type)                                       ->      59    0.000    0.000  internals.py:2837(_consolidate_inplace)
                                                                               59    0.000    0.000  {len}
index.py:5740(_union_indexes)                                          ->       2    0.000    0.000  index.py:1365(union)
                                                                                2    0.000    0.000  index.py:5787(_sanitize_and_check)
                                                                                2    0.000    0.000  {hasattr}
                                                                                2    0.000    0.000  {isinstance}
                                                                                8    0.000    0.000  {len}
copy.py:66(copy)                                                       ->      10    0.000    0.000  copy.py:113(_copy_with_constructor)
                                                                                2    0.000    0.000  copy.py:306(_reconstruct)
                                                                                4    0.000    0.000  {getattr}
                                                                                2    0.000    0.000  {method '__reduce_ex__' of 'object' objects}
                                                                               14    0.000    0.000  {method 'get' of 'dict' objects}
generic.py:1368(xs)                                                    ->       2    0.000    0.000  frame.py:1774(__getitem__)
                                                                                2    0.000    0.000  generic.py:292(_get_axis_number)
                                                                                2    0.000    0.000  generic.py:318(_get_axis)
qc.py:592(_validate_info_cols)                                         ->       5    0.000    0.000  qc.py:155(get_cols_from_df)
PyMCObjects.py:108(__init__)                                           ->       2    0.000    0.000  Container.py:505(__init__)
                                                                                2    0.000    0.000  PyMCObjects.py:63(extend_parents)
                                                                                2    0.000    0.000  {isinstance}
qc.py:220(_validate_lr_cols)                                           ->       5    0.000    0.000  qc.py:155(get_cols_from_df)
Container.py:168(file_items)                                           ->      12    0.000    0.000  PyMCObjects.py:1046(_get_observed)
                                                                               14    0.000    0.000  {getattr}
                                                                               18    0.000    0.000  {isinstance}
                                                                               12    0.000    0.000  {method 'add' of 'set' objects}
                                                                               18    0.000    0.000  {setattr}
progressbar.py:58(bar)                                                 ->      10    0.000    0.000  progressbar.py:69(replace_at)
                                                                               30    0.000    0.000  {len}
compressed.py:979(__set_has_canonical_format)                          ->      52    0.000    0.000  compressed.py:1019(__set_sorted)
internals.py:2647(get_slice)                                           ->       1    0.000    0.000  index.py:1059(__getitem__)
                                                                                2    0.000    0.000  internals.py:199(getitem_block)
                                                                                1    0.000    0.000  internals.py:2163(__init__)
                                                                                1    0.000    0.000  internals.py:2208(ndim)
                                                                                1    0.000    0.000  internals.py:2837(_consolidate_inplace)
{min}                                                                  ->
sre_parse.py:317(_parse_sub)                                           ->       1    0.000    0.000  sre_parse.py:92(__init__)
                                                                               10    0.000    0.000  sre_parse.py:137(__len__)
                                                                                8    0.000    0.000  sre_parse.py:139(__delitem__)
                                                                               11    0.000    0.000  sre_parse.py:141(__getitem__)
                                                                                5    0.000    0.000  sre_parse.py:149(append)
                                                                                3    0.000    0.000  sre_parse.py:206(match)
                                                                                3    0.000    0.000  sre_parse.py:395(_parse)
                                                                                3    0.000    0.000  {len}
                                                                                3    0.000    0.000  {method 'append' of 'list' objects}
{scipy.sparse._sparsetools.csr_has_canonical_format}                   ->
internals.py:3756(_lcd_dtype)                                          ->      51    0.000    0.000  internals.py:228(dtype)
{method 'pop' of 'dict' objects}                                       ->
qc.py:427(_validate_err_cols)                                          ->       5    0.000    0.000  qc.py:155(get_cols_from_df)
frame.py:189(_constructor)                                             ->
groupby.py:2125(is_in_axis)                                            ->      52    0.000    0.000  groupby.py:2171(_is_label_like)
{method 'upper' of 'str' objects}                                      ->
sputils.py:220(issequence)                                             ->     108    0.000    0.000  {isinstance}
MCMC.py:93(use_step_method)                                            ->       1    0.000    0.000  stepper.py:20(__init__)
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {setattr}
numeric.py:1347(rollaxis)                                              ->
index.py:312(_coerce_to_ndarray)                                       ->     112    0.000    0.000  {isinstance}
stepper.py:20(__init__)                                                ->       1    0.000    0.000  StepMethods.py:391(__init__)
internals.py:3752(<lambda>)                                            ->
numeric.py:2125(identity)                                              ->       1    0.000    0.000  twodim_base.py:190(eye)
fromnumeric.py:495(transpose)                                          ->      53    0.000    0.000  {method 'transpose' of 'numpy.ndarray' objects}
StepMethods.py:391(__init__)                                           ->       6    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                1    0.000    0.000  StepMethods.py:197(__init__)
                                                                                2    0.000    0.000  fromnumeric.py:1462(shape)
                                                                                1    0.000    0.000  fromnumeric.py:1852(all)
                                                                                1    0.000    0.000  numeric.py:141(ones)
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                1    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {numpy.core.multiarray.zeros}
progressbar.py:73(consoleprint)                                        ->      10    0.000    0.000  {method 'lower' of 'str' objects}
                                                                               10    0.000    0.000  {method 'startswith' of 'str' objects}
                                                                               10    0.000    0.000  {print}
index.py:1365(union)                                                   ->       2    0.000    0.000  index.py:582(_assert_can_do_setop)
                                                                                2    0.000    0.000  index.py:3434(equals)
                                                                                2    0.000    0.000  index.py:5677(_ensure_index)
                                                                                2    0.000    0.000  {len}
common.py:1961(_possibly_convert_platform)                             ->       2    0.000    0.000  {getattr}
                                                                                2    0.000    0.000  {hasattr}
                                                                                2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {pandas.lib.list_to_object_array}
                                                                                2    0.000    0.000  {pandas.lib.maybe_convert_objects}
groupby.py:2097(<genexpr>)                                             ->      52    0.000    0.000  {callable}
                                                                               52    0.000    0.000  {isinstance}
internals.py:4370(is_null)                                             ->       2    0.000    0.000  common.py:212(isnull)
                                                                                2    0.000    0.000  {max}
                                                                                2    0.000    0.000  {method 'all' of 'numpy.ndarray' objects}
                                                                                2    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
nanops.py:420(nanmax)                                                  ->       1    0.000    0.000  common.py:2585(is_object_dtype)
                                                                                1    0.000    0.000  nanops.py:153(_get_values)
                                                                                1    0.000    0.000  nanops.py:216(_wrap_results)
                                                                                1    0.000    0.000  nanops.py:591(_maybe_null_out)
                                                                                1    0.000    0.000  {method 'max' of 'numpy.ndarray' objects}
internals.py:4168(get_mgr_concatenation_plan)                          ->       4    0.000    0.000  internals.py:119(mgr_locs)
                                                                                4    0.000    0.000  internals.py:2204(shape)
                                                                                4    0.000    0.000  internals.py:2246(_is_single_block)
                                                                                4    0.000    0.000  internals.py:4338(__init__)
                                                                                4    0.000    0.000  {method 'items' of 'dict' objects}
{method 'join' of 'str' objects}                                       ->
_weakrefset.py:70(__contains__)                                        ->
index.py:5843(_ensure_has_len)                                         ->      52    0.000    0.000  {len}
groupby.py:2098(<genexpr>)                                             ->      52    0.000    0.000  {isinstance}
{method 'to_array' of 'pandas.hashtable.Float64Vector' objects}        ->
{pandas.lib.maybe_convert_objects}                                     ->
index_tricks.py:231(_retval)                                           ->
twodim_base.py:190(eye)                                                ->       1    0.000    0.000  {numpy.core.multiarray.zeros}
{numpy.lib._compiled_base.bincount}                                    ->
index.py:2596(_evaluate_compare)                                       ->       4    0.000    0.000  common.py:2557(is_bool_dtype)
                                                                                4    0.000    0.000  index.py:263(values)
                                                                                4    0.000    0.000  numeric.py:394(asarray)
                                                                                4    0.000    0.000  {getattr}
series.py:237(_constructor)                                            ->
{method 'random_sample' of 'mtrand.RandomState' objects}               ->
index.py:599(_get_names)                                               ->
ops.py:466(na_op)                                                      ->       2    0.000    0.000  common.py:1411(_fill_zeros)
                                                                                2    0.000    0.000  expressions.py:199(evaluate)
groupby.py:3269(_reindex_output)                                       ->      52    0.000    0.000  {len}
indexing.py:1247(_has_valid_type)                                      ->       2    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                4    0.000    0.000  generic.py:318(_get_axis)
                                                                                2    0.000    0.000  index.py:1045(__contains__)
                                                                                2    0.000    0.000  indexing.py:159(_convert_scalar_indexer)
                                                                                2    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                4    0.000    0.000  {isinstance}
internals.py:2442(<genexpr>)                                           ->
sre_compile.py:552(_code)                                              ->       2    0.000    0.000  sre_compile.py:64(_compile)
                                                                                2    0.000    0.000  sre_compile.py:433(_compile_info)
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
data.py:28(_get_dtype)                                                 ->
{pandas.lib.clean_index_list}                                          ->
fromnumeric.py:1925(cumsum)                                            ->       1    0.000    0.000  {method 'cumsum' of 'numpy.ndarray' objects}
common.py:2738(_clean_fill_method)                                     ->
internals.py:2973(value_getitem)                                       ->
sre_parse.py:395(_parse)                                               ->       3    0.000    0.000  sre_parse.py:92(__init__)
                                                                               18    0.000    0.000  sre_parse.py:149(append)
                                                                               20    0.000    0.000  sre_parse.py:212(get)
                                                                               13    0.000    0.000  {ord}
{method 'cumsum' of 'numpy.ndarray' objects}                           ->
frame.py:414(axes)                                                     ->
index.py:587(_convert_can_do_setop)                                    ->      52    0.000    0.000  {isinstance}
expressions.py:199(evaluate)                                           ->       2    0.000    0.000  expressions.py:99(_evaluate_numexpr)
                                                                                2    0.000    0.000  expressions.py:180(_bool_arith_check)
fromnumeric.py:2838(var)                                               ->       1    0.000    0.000  _methods.py:77(_var)
groupby.py:1319(names)                                                 ->
sputils.py:106(getdtype)                                               ->
{method '__reduce_ex__' of 'object' objects}                           ->       2    0.000    0.000  copy_reg.py:95(_slotnames)
internals.py:3721(_stack_arrays)                                       ->       2    0.000    0.000  internals.py:3724(_asarray_compat)
                                                                                2    0.000    0.000  internals.py:3730(_shape_compat)
                                                                                2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {numpy.core.multiarray.empty}
{numpy.core.multiarray.can_cast}                                       ->
generic.py:2225(_is_mixed_type)                                        ->       8    0.000    0.000  generic.py:2189(_protect_consolidate)
frame.py:418(shape)                                                    ->      28    0.000    0.000  {len}
groupby.py:3865(_intercept_cython)                                     ->      51    0.000    0.000  {method 'get' of 'dict' objects}
groupby.py:2171(_is_label_like)                                        ->      52    0.000    0.000  {isinstance}
indexing.py:88(_get_loc)                                               ->       7    0.000    0.000  series.py:478(_ixs)
expressions.py:99(_evaluate_numexpr)                                   ->       2    0.000    0.000  expressions.py:67(_evaluate_standard)
                                                                                2    0.000    0.000  expressions.py:74(_can_use_numexpr)
index.py:851(validate)                                                 ->      54    0.000    0.000  {pandas.lib.is_integer}
lapack.py:255(get_lapack_funcs)                                        ->       1    0.000    0.000  blas.py:226(_get_funcs)
Model.py:254(_finalize)                                                ->       1    0.000    0.000  Model.py:511(fget)
                                                                                1    0.000    0.000  Model.py:514(fset)
                                                                                1    0.000    0.000  Model.py:772(save_state)
                                                                                1    0.000    0.000  base.py:332(_finalize)
arrayprint.py:639(__init__)                                            ->       4    0.000    0.000  {len}
                                                                                2    0.000    0.000  {max}
                                                                                4    0.000    0.000  {method 'reduce' of 'numpy.ufunc' objects}
Model.py:829(trace)                                                    ->       1    0.000    0.000  base.py:363(trace)
                                                                                1    0.000    0.000  {isinstance}
indexing.py:1731(is_nested_tuple)                                      ->      63    0.000    0.000  {isinstance}
groupby.py:2020(labels)                                                ->
stride_tricks.py:19(__init__)                                          ->
blas.py:226(_get_funcs)                                                ->       1    0.000    0.000  blas.py:182(find_best_blas_type)
                                                                                2    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
Model.py:511(fget)                                                     ->
PyMCObjects.py:823(get_value)                                          ->
base.py:363(trace)                                                     ->       1    0.000    0.000  copy.py:66(copy)
index.py:1093(_ensure_compat_append)                                   ->       4    0.000    0.000  index.py:263(values)
                                                                                2    0.000    0.000  index.py:1136(_ensure_compat_concat)
                                                                               10    0.000    0.000  {isinstance}
inspect.py:804(getargspec)                                             ->       2    0.000    0.000  <string>:8(__new__)
                                                                                2    0.000    0.000  inspect.py:67(ismethod)
                                                                                2    0.000    0.000  inspect.py:142(isfunction)
                                                                                2    0.000    0.000  inspect.py:744(getargs)
Model.py:222(_sum_deviance)                                            ->       6    0.000    0.000  PyMCObjects.py:903(get_logp)
                                                                                6    0.000    0.000  {sum}
{print}                                                                ->
series.py:404(__array_prepare__)                                       ->       8    0.000    0.000  series.py:308(values)
                                                                                8    0.000    0.000  {isinstance}
{method 'randn' of 'mtrand.RandomState' objects}                       ->
strings.py:1059(__init__)                                              ->
series.py:478(_ixs)                                                    ->       7    0.000    0.000  series.py:308(values)
                                                                                7    0.000    0.000  {isinstance}
                                                                                7    0.000    0.000  {pandas.index.get_value_at}
{method 'item' of 'numpy.ndarray' objects}                             ->
config.py:221(__call__)                                                ->       2    0.000    0.000  config.py:96(_get_option)
sputils.py:230(isdense)                                                ->      52    0.000    0.000  {isinstance}
{method 'indices' of 'slice' objects}                                  ->
_ni_support.py:38(_extend_mode_to_code)                                ->
{round}                                                                ->
internals.py:1542(should_store)                                        ->       5    0.000    0.000  common.py:2569(is_categorical_dtype)
                                                                                5    0.000    0.000  {issubclass}
config.py:96(_get_option)                                              ->       2    0.000    0.000  config.py:78(_get_single_key)
                                                                                2    0.000    0.000  config.py:545(_get_root)
{zip}                                                                  ->
common.py:2194(<genexpr>)                                              ->
generic.py:2203(consolidate)                                           ->       4    0.000    0.000  generic.py:2197(_consolidate_inplace)
base.py:232(_initialize)                                               ->       3    0.000    0.000  ram.py:54(_initialize)
                                                                                1    0.000    0.000  six.py:560(iteritems)
                                                                                1    0.000    0.000  {method 'append' of 'list' objects}
                                                                                1    0.000    0.000  {method 'keys' of 'dict' objects}
indexing.py:1387(_is_valid_integer)                                    ->       7    0.000    0.000  generic.py:318(_get_axis)
                                                                                7    0.000    0.000  {len}
{pandas.lib.is_bool}                                                   ->
sre_compile.py:64(_compile)                                            ->       2    0.000    0.000  sre_compile.py:64(_compile)
                                                                                8    0.000    0.000  sre_parse.py:141(__getitem__)
                                                                                8    0.000    0.000  {len}
                                                                               38    0.000    0.000  {method 'append' of 'list' objects}
internals.py:199(getitem_block)                                        ->       2    0.000    0.000  internals.py:119(mgr_locs)
                                                                                2    0.000    0.000  internals.py:128(make_block_same_class)
                                                                                2    0.000    0.000  internals.py:177(_slice)
                                                                                2    0.000    0.000  {isinstance}
Model.py:772(save_state)                                               ->       1    0.000    0.000  MCMC.py:386(get_state)
                                                                                1    0.000    0.000  base.py:353(savestate)
_ni_support.py:90(_check_axis)                                         ->
expressions.py:74(_can_use_numexpr)                                    ->       2    0.000    0.000  fromnumeric.py:2259(prod)
generic.py:2227(<lambda>)                                              ->       8    0.000    0.000  internals.py:2573(is_mixed_type)
frame.py:4432(_get_agg_axis)                                           ->
{time.time}                                                            ->
sre_compile.py:433(_compile_info)                                      ->       2    0.000    0.000  sre_parse.py:151(getwidth)
                                                                                4    0.000    0.000  {len}
                                                                               10    0.000    0.000  {method 'append' of 'list' objects}
index.py:810(_convert_slice_indexer_getitem)                           ->      27    0.000    0.000  index.py:752(is_integer)
frame.py:4811(extract_index)                                           ->       2    0.000    0.000  index.py:5677(_ensure_index)
                                                                                2    0.000    0.000  index.py:5740(_union_indexes)
                                                                                2    0.000    0.000  {isinstance}
                                                                                4    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
indexing.py:165(_convert_slice_indexer)                                ->       2    0.000    0.000  generic.py:318(_get_axis)
                                                                                2    0.000    0.000  index.py:817(_convert_slice_indexer)
                                                                                2    0.000    0.000  {min}
{pandas.algos.ensure_object}                                           ->
blas.py:182(find_best_blas_type)                                       ->       1    0.000    0.000  numerictypes.py:970(find_common_type)
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                1    0.000    0.000  {method 'index' of 'list' objects}
Node.py:399(__init__)                                                  ->      12    0.000    0.000  {hasattr}
copy.py:306(_reconstruct)                                              ->       2    0.000    0.000  copy_reg.py:92(__newobj__)
                                                                                2    0.000    0.000  {hasattr}
                                                                                2    0.000    0.000  {id}
                                                                                6    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'update' of 'dict' objects}
MCMC.py:386(get_state)                                                 ->       1    0.000    0.000  Model.py:757(get_state)
                                                                                1    0.000    0.000  StepMethods.py:323(current_state)
                                                                                1    0.000    0.000  {method 'copy' of 'dict' objects}
generic.py:280(_from_axes)                                             ->       2    0.000    0.000  frame.py:200(__init__)
                                                                                2    0.000    0.000  {isinstance}
compressed.py:1019(__set_sorted)                                       ->
internals.py:1451(is_bool)                                             ->       4    0.000    0.000  {method 'ravel' of 'numpy.ndarray' objects}
                                                                                4    0.000    0.000  {pandas.lib.is_bool_array}
ram.py:54(_initialize)                                                 ->       1    0.000    0.000  MCMC.py:188(<lambda>)
                                                                                1    0.000    0.000  Model.py:222(_sum_deviance)
                                                                                1    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                3    0.000    0.000  fromnumeric.py:1462(shape)
                                                                                3    0.000    0.000  {numpy.core.multiarray.array}
                                                                                3    0.000    0.000  {numpy.core.multiarray.zeros}
index.py:871(is_int)                                                   ->      54    0.000    0.000  {pandas.lib.is_integer}
StepMethods.py:197(__init__)                                           ->       1    0.000    0.000  Node.py:131(_get_parents)
                                                                                1    0.000    0.000  PyMCObjects.py:1046(_get_observed)
                                                                                1    0.000    0.000  function_base.py:47(iterable)
                                                                                1    0.000    0.000  six.py:555(itervalues)
                                                                                3    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'add' of 'set' objects}
                                                                                1    0.000    0.000  {method 'join' of 'str' objects}
StepMethods.py:478(hastings_factor)                                    ->
index.py:1843(_can_reindex)                                            ->
sre_parse.py:212(get)                                                  ->      22    0.000    0.000  sre_parse.py:193(__next)
inspect.py:744(getargs)                                                ->       2    0.000    0.000  inspect.py:209(iscode)
                                                                                2    0.000    0.000  {range}
PyMCObjects.py:1046(_get_observed)                                     ->
config.py:78(_get_single_key)                                          ->       2    0.000    0.000  config.py:527(_select_options)
                                                                                2    0.000    0.000  config.py:588(_translate_key)
                                                                                2    0.000    0.000  config.py:601(_warn_if_deprecated)
                                                                                4    0.000    0.000  {len}
ops.py:437(maybe_convert_for_time_op)                                  ->       2    0.000    0.000  common.py:2507(is_datetime64_dtype)
                                                                                2    0.000    0.000  common.py:2516(is_timedelta64_dtype)
Model.py:522(_assign_database_backend)                                 ->       1    0.000    0.000  Model.py:853(check_valid_object_name)
                                                                                1    0.000    0.000  PyMCObjects.py:880(fget)
                                                                                1    0.000    0.000  ram.py:165(__init__)
                                                                                1    0.000    0.000  {dir}
                                                                                2    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'add' of 'set' objects}
                                                                                1    0.000    0.000  {method 'get' of 'dict' objects}
fromnumeric.py:40(_wrapit)                                             ->       2    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {method 'repeat' of 'numpy.ndarray' objects}
                                                                                1    0.000    0.000  {method 'round' of 'numpy.ndarray' objects}
PyMCObjects.py:880(fget)                                               ->
PyMCObjects.py:1065(_get_moral_neighbors)                              ->       4    0.000    0.000  PyMCObjects.py:1055(_get_coparents)
                                                                                4    0.000    0.000  copy.py:66(copy)
                                                                                8    0.000    0.000  {isinstance}
index.py:1136(_ensure_compat_concat)                                   ->       2    0.000    0.000  {any}
                                                                                4    0.000    0.000  {isinstance}
indexing.py:417(can_do_equal_len)                                      ->       1    0.000    0.000  frame.py:1774(__getitem__)
                                                                                1    0.000    0.000  function_base.py:47(iterable)
                                                                                1    0.000    0.000  index.py:1059(__getitem__)
                                                                                3    0.000    0.000  {len}
progressbar.py:26(percentage)                                          ->
common.py:1293(<lambda>)                                               ->
internals.py:1304(should_store)                                        ->       2    0.000    0.000  common.py:2495(is_integer_dtype)
                                                                                2    0.000    0.000  internals.py:228(dtype)
base.py:285(connect_model)                                             ->       3    0.000    0.000  ram.py:31(__init__)
                                                                                1    0.000    0.000  six.py:560(iteritems)
                                                                                1    0.000    0.000  {hasattr}
                                                                                1    0.000    0.000  {isinstance}
sre_parse.py:151(getwidth)                                             ->       2    0.000    0.000  sre_parse.py:151(getwidth)
                                                                                2    0.000    0.000  {max}
                                                                               10    0.000    0.000  {min}
six.py:560(iteritems)                                                  ->       9    0.000    0.000  {getattr}
                                                                                9    0.000    0.000  {iter}
                                                                                9    0.000    0.000  {method 'iteritems' of 'dict' objects}
sre_parse.py:193(__next)                                               ->      44    0.000    0.000  {len}
MCMC.py:135(assign_step_methods)                                       ->       1    0.000    0.000  MCMC.py:405(restore_sm_state)
                                                                                1    0.000    0.000  utils.py:835(crawl_dataless)
                                                                                2    0.000    0.000  {len}
internals.py:475(_try_coerce_result)                                   ->
internals.py:467(_try_operate)                                         ->
indexing.py:1584(length_of_indexer)                                    ->       9    0.000    0.000  {isinstance}
                                                                                5    0.000    0.000  {len}
internals.py:3730(_shape_compat)                                       ->       2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {len}
internals.py:4396(get_reindexed_values)                                ->       4    0.000    0.000  internals.py:874(get_values)
                                                                                4    0.000    0.000  {method 'view' of 'numpy.ndarray' objects}
fromnumeric.py:2633(round_)                                            ->       1    0.000    0.000  fromnumeric.py:40(_wrapit)
internals.py:4246(combine_concat_plans)                                ->       2    0.000    0.000  {len}
                                                                                4    0.000    0.000  {method 'add' of 'pandas.lib.BlockPlacement' objects}
progressbar.py:121(progress_bar)                                       ->       1    0.000    0.000  progressbar.py:42(__init__)
                                                                                1    0.000    0.000  progressbar.py:113(run_from_ipython)
{method 'values' of 'dict' objects}                                    ->
index.py:5736(_get_distinct_indexes)                                   ->       6    0.000    0.000  index.py:5737(<genexpr>)
                                                                                2    0.000    0.000  {method 'values' of 'dict' objects}
fromnumeric.py:350(repeat)                                             ->       1    0.000    0.000  fromnumeric.py:40(_wrapit)
internals.py:4357(dtype)                                               ->       4    0.000    0.000  internals.py:228(dtype)
                                                                                4    0.000    0.000  internals.py:4348(needs_filling)
copy_reg.py:95(_slotnames)                                             ->       2    0.000    0.000  {hasattr}
                                                                                2    0.000    0.000  {method 'get' of 'dictproxy' objects}
{callable}                                                             ->
{method 'startswith' of 'str' objects}                                 ->
{pandas.lib.is_bool_array}                                             ->
_weakrefset.py:58(__iter__)                                            ->       1    0.000    0.000  _weakrefset.py:16(__init__)
                                                                                1    0.000    0.000  _weakrefset.py:20(__enter__)
                                                                                1    0.000    0.000  _weakrefset.py:26(__exit__)
PyMCObjects.py:134(attach_parents)                                     ->       2    0.000    0.000  PyMCObjects.py:145(attach_extended_parents)
                                                                                2    0.000    0.000  six.py:555(itervalues)
                                                                                1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'add' of 'set' objects}
{id}                                                                   ->
internals.py:3724(_asarray_compat)                                     ->       2    0.000    0.000  series.py:308(values)
                                                                                2    0.000    0.000  {isinstance}
Model.py:121(seed)                                                     ->       1    0.000    0.000  Model.py:105(_get_generations)
{pandas.lib.array_equivalent_object}                                   ->
qc.py:525(_validate_mean_cols)                                         ->       5    0.000    0.000  index.py:1045(__contains__)
indexing.py:139(_is_nested_tuple_indexer)                              ->       2    0.000    0.000  frame.py:414(axes)
                                                                                2    0.000    0.000  {any}
                                                                                4    0.000    0.000  {isinstance}
index.py:3413(inferred_type)                                           ->
fromnumeric.py:1462(shape)                                             ->       2    0.000    0.000  frame.py:418(shape)
sre_parse.py:141(__getitem__)                                          ->      19    0.000    0.000  {isinstance}
{method 'compress' of 'numpy.ndarray' objects}                         ->
frame.py:5092(_homogenize)                                             ->       2    0.000    0.000  {isinstance}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
qc.py:363(_validate_bin_cols)                                          ->       5    0.000    0.000  index.py:1045(__contains__)
Model.py:757(get_state)                                                ->       1    0.000    0.000  PyMCObjects.py:823(get_value)
                                                                                9    0.000    0.000  {getattr}
generic.py:661(__hash__)                                               ->       2    0.000    0.000  {method 'format' of 'str' objects}
qc.py:274(_validate_contig_cols)                                       ->       5    0.000    0.000  index.py:1045(__contains__)
expressions.py:67(_evaluate_standard)                                  ->       1    0.000    0.000  ops.py:71(<lambda>)
                                                                                1    0.000    0.000  {operator.truediv}
progressbar.py:69(replace_at)                                          ->
{method 'keys' of 'dict' objects}                                      ->
{method 'remove' of 'set' objects}                                     ->
fromnumeric.py:2422(ndim)                                              ->       2    0.000    0.000  numeric.py:394(asarray)
Model.py:105(_get_generations)                                         ->       1    0.000    0.000  utils.py:858(find_generations)
                                                                                1    0.000    0.000  {hasattr}
{method 'click' of 'pymc.LazyFunction.Counter' objects}                ->
{method 'unclick' of 'pymc.LazyFunction.Counter' objects}              ->
PyMCObjects.py:1075(_get_markov_blanket)                               ->       2    0.000    0.000  PyMCObjects.py:1065(_get_moral_neighbors)
indexing.py:1748(is_label_like)                                        ->       2    0.000    0.000  indexing.py:1744(is_list_like_indexer)
                                                                                4    0.000    0.000  {isinstance}
{method 'pop' of 'set' objects}                                        ->
frame.py:4863(_prep_ndarray)                                           ->       2    0.000    0.000  numeric.py:394(asarray)
                                                                                2    0.000    0.000  {isinstance}
{_warnings.warn}                                                       ->
ram.py:31(__init__)                                                    ->       3    0.000    0.000  base.py:71(__init__)
{map}                                                                  ->       2    0.000    0.000  indexing.py:518(<lambda>)
                                                                                2    0.000    0.000  numeric.py:394(asarray)
progressbar.py:42(__init__)                                            ->       1    0.000    0.000  progressbar.py:20(__init__)
                                                                                1    0.000    0.000  progressbar.py:29(update)
common.py:3338(_maybe_match_name)                                      ->      18    0.000    0.000  {hasattr}
MCMC.py:188(<lambda>)                                                  ->       6    0.000    0.000  {getattr}
qc.py:461(_validate_std_cols)                                          ->       5    0.000    0.000  index.py:1045(__contains__)
{function __getitem__ at 0x7fd6243d38c0}                               ->
config.py:601(_warn_if_deprecated)                                     ->       2    0.000    0.000  config.py:560(_get_deprecated_option)
config.py:545(_get_root)                                               ->       2    0.000    0.000  {method 'split' of 'str' objects}
{method 'split' of 'str' objects}                                      ->
config.py:560(_get_deprecated_option)                                  ->
common.py:1056(_infer_dtype_from_scalar)                               ->      10    0.000    0.000  {isinstance}
utils.py:858(find_generations)                                         ->       1    0.000    0.000  {len}
                                                                                2    0.000    0.000  {method 'append' of 'list' objects}
                                                                                2    0.000    0.000  {method 'update' of 'set' objects}
sre_parse.py:149(append)                                               ->      23    0.000    0.000  {method 'append' of 'list' objects}
base.py:332(_finalize)                                                 ->       3    0.000    0.000  base.py:131(_finalize)
                                                                                1    0.000    0.000  base.py:345(commit)
                                                                                1    0.000    0.000  {range}
index.py:5787(_sanitize_and_check)                                     ->       2    0.000    0.000  {len}
six.py:555(itervalues)                                                 ->       3    0.000    0.000  {getattr}
                                                                                3    0.000    0.000  {iter}
                                                                                3    0.000    0.000  {method 'itervalues' of 'dict' objects}
PyMCObjects.py:1055(_get_coparents)                                    ->       6    0.000    0.000  {method 'add' of 'set' objects}
qc.py:258(_validate_ori_cols)                                          ->       5    0.000    0.000  index.py:1045(__contains__)
learn_model.py:84(pymcdf)                                             ->
__init__.py:20(new_decorator)                                          ->       1    0.000    0.000  __init__.py:33(shutthefuckup)
                                                                                1    0.000    0.000  {method 'update' of 'dict' objects}
defmatrix.py:66(asmatrix)                                              ->       2    0.000    0.000  defmatrix.py:244(__new__)
copy.py:113(_copy_with_constructor)                                    ->
indexing.py:405(<genexpr>)                                             ->       5    0.000    0.000  common.py:2607(is_null_slice)
MCMC.py:405(restore_sm_state)                                          ->       1    0.000    0.000  base.py:358(getstate)
                                                                                2    0.000    0.000  {method 'get' of 'dict' objects}
                                                                                1    0.000    0.000  {method 'update' of 'dict' objects}
indexing.py:1364(_has_valid_type)                                      ->       1    0.000    0.000  common.py:2121(is_bool_indexer)
                                                                                1    0.000    0.000  {isinstance}
{method 'format' of 'str' objects}                                     ->
internals.py:3691(<lambda>)                                            ->       2    0.000    0.000  series.py:288(dtype)
{method 'astype' of 'numpy.generic' objects}                           ->
common.py:2185(_try_sort)                                              ->       2    0.000    0.000  {sorted}
indexing.py:1203(_get_slice_axis)                                      ->       2    0.000    0.000  indexing.py:1753(need_slice)
common.py:2607(is_null_slice)                                          ->       7    0.000    0.000  {isinstance}
{gc.get_referents}                                                     ->
sre_parse.py:189(__init__)                                             ->       2    0.000    0.000  sre_parse.py:193(__next)
internals.py:4348(needs_filling)                                       ->       4    0.000    0.000  {method 'values' of 'dict' objects}
{sys.settrace}                                                         ->
ram.py:132(__getitem__)                                                ->       1    0.000    0.000  {range}
arrayprint.py:716(__init__)                                            ->
arrayprint.py:689(__init__)                                            ->       4    0.000    0.000  arrayprint.py:661(__init__)
sre_parse.py:137(__len__)                                              ->      11    0.000    0.000  {len}
PyMCObjects.py:63(extend_parents)                                      ->       2    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'add' of 'set' objects}
expressions.py:180(_bool_arith_check)                                  ->       2    0.000    0.000  expressions.py:170(_has_bool_dtype)
{method 'mro' of 'type' objects}                                       ->
common.py:1411(_fill_zeros)                                            ->       1    0.000    0.000  common.py:2547(is_float_dtype)
merge.py:932(_get_result_dim)                                          ->       2    0.000    0.000  generic.py:386(ndim)
{pandas.index.get_value_at}                                            ->
inspect.py:67(ismethod)                                                ->       2    0.000    0.000  {isinstance}
{method 'to_array' of 'pandas.hashtable.ObjectVector' objects}         ->
_weakrefset.py:26(__exit__)                                            ->       1    0.000    0.000  _weakrefset.py:52(_commit_removals)
                                                                                1    0.000    0.000  {method 'remove' of 'set' objects}
ops.py:71(<lambda>)                                                    ->
internals.py:4338(__init__)                                            ->
{method 'round' of 'numpy.ndarray' objects}                            ->
StepMethods.py:323(current_state)                                      ->       6    0.000    0.000  {getattr}
progressbar.py:20(__init__)                                            ->       1    0.000    0.000  {time.time}
{_sre.compile}                                                         ->
copy_reg.py:92(__newobj__)                                             ->       2    0.000    0.000  {built-in method __new__ of type object at 0x7fd63df25bc0}
{method 'lower' of 'str' objects}                                      ->
internals.py:3024(<genexpr>)                                           ->
internals.py:3499(_consolidate_inplace)                                ->
config.py:588(_translate_key)                                          ->       2    0.000    0.000  config.py:560(_get_deprecated_option)
Model.py:514(fset)                                                     ->
internals.py:584(_is_empty_indexer)                                    ->
index.py:835(f)                                                        ->       3    0.000    0.000  {getattr}
                                                                                1    0.000    0.000  {pandas.lib.is_integer}
{_functools.reduce}                                                    ->       1    0.000    0.000  arrayprint.py:32(product)
base.py:71(__init__)                                                   ->
{operator.truediv}                                                     ->
{dir}                                                                  ->
_weakrefset.py:36(__init__)                                            ->
function_base.py:47(iterable)                                          ->       2    0.000    0.000  {iter}
indexing.py:1753(need_slice)                                           ->
internals.py:3493(is_consolidated)                                     ->
indexing.py:518(<lambda>)                                              ->       2    0.000    0.000  {isinstance}
index.py:5737(<genexpr>)                                               ->       4    0.000    0.000  {id}
utils.py:87(choose_dict)                                               ->
{method 'repeat' of 'numpy.ndarray' objects}                           ->
arrayprint.py:661(__init__)                                            ->
lil.py:134(set_shape)                                                  ->       1    0.000    0.000  {len}
sre_compile.py:546(isortseq_toolsring)                                           ->       4    0.000    0.000  {isinstance}
{ord}                                                                  ->
ram.py:165(__init__)                                                   ->
sre_parse.py:139(__delitem__)                                          ->
progressbar.py:113(run_from_ipython)                                   ->
InstantiationDecorators.py:128(stochastic)                             ->
series.py:474(axes)                                                    ->
{method 'add' of 'set' objects}                                        ->
base.py:358(getstate)                                                  ->       1    0.000    0.000  {getattr}
learn_model.py:183(<dictcomp>)                                        ->       4    0.000    0.000  {len}
PyMCObjects.py:145(attach_extended_parents)                            ->       1    0.000    0.000  {isinstance}
                                                                                1    0.000    0.000  {method 'add' of 'set' objects}
sre_parse.py:92(__init__)                                              ->
inspect.py:209(iscode)                                                 ->       2    0.000    0.000  {isinstance}
utils.py:835(crawl_dataless)                                           ->       1    0.000    0.000  {len}
arrayprint.py:744(__init__)                                            ->
internals.py:471(_try_coerce_args)                                     ->
<string>:8(__new__)                                                    ->       4    0.000    0.000  {built-in method __new__ of type object at 0x7fd63df25bc0}
InstantiationDecorators.py:36(enable_special_methods)                  ->
_weakrefset.py:20(__enter__)                                           ->       1    0.000    0.000  {method 'add' of 'set' objects}
config.py:527(_select_options)                                         ->
{method 'get' of 'dictproxy' objects}                                  ->
sre_parse.py:67(__init__)                                              ->
arrayprint.py:230(repr_format)                                         ->       1    0.000    0.000  {repr}
internals.py:166(__len__)                                              ->       3    0.000    0.000  {len}
expressions.py:170(_has_bool_dtype)                                    ->
inspect.py:142(isfunction)                                             ->       2    0.000    0.000  {isinstance}
indexing.py:170(_has_valid_setitem_indexer)                            ->
sre_parse.py:206(match)                                                ->       1    0.000    0.000  sre_parse.py:193(__next)
base.py:353(savestate)                                                 ->
_weakrefset.py:52(_commit_removals)                                    ->
{repr}                                                                 ->
Model.py:631(commit)                                                   ->       1    0.000    0.000  base.py:345(commit)
arrayprint.py:32(product)                                              ->
InstantiationDecorators.py:32(disable_special_methods)                 ->
Node.py:131(_get_parents)                                              ->
base.py:318(ndim)                                                      ->
{method 'append' of 'pandas.lib.BlockPlacement' objects}               ->
merge.py:1020(_maybe_check_integrity)                                  ->
_abcoll.py:98(__subclasshook__)                                        ->
internals.py:2670(nblocks)                                             ->       3    0.000    0.000  {len}
InstantiationDecorators.py:40(check_special_methods)                   ->
_weakrefset.py:16(__init__)                                            ->
_weakrefset.py:83(add)                                                 ->       1    0.000    0.000  {method 'add' of 'set' objects}
internals.py:1536(_can_hold_element)                                   ->
Model.py:853(check_valid_object_name)                                  ->       1    0.000    0.000  {method 'append' of 'list' objects}
{method 'index' of 'list' objects}                                     ->
misc.py:126(_datacopied)                                               ->
base.py:345(commit)                                                    ->
internals.py:551(<lambda>)                                             ->
{method 'update' of 'set' objects}                                     ->
{method 'copy' of 'dict' objects}                                      ->
base.py:131(_finalize)                                                 ->
internals.py:575(_is_scalar_indexer)                                   ->
ops.py:498(<lambda>)                                                   ->
__init__.py:33(shutthefuckup)                                          ->
{method 'disable' of '_lsprof.Profiler' objects}                       ->


